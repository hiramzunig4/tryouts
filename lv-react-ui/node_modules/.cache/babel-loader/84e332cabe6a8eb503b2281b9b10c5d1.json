{"ast":null,"code":"var _jsxFileName = \"/home/hiram/github/hiram-repos/tryouts/lv-react-ui/src/ModalNetwork.js\";\nimport React, { useState } from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\n\nfunction ModalNetwork(props) {\n  return /*#__PURE__*/React.createElement(Modal, Object.assign({}, props, {\n    size: \"lg\",\n    backdrop: \"static\",\n    \"aria-labelledby\": \"contained-modal-title-vcenter\",\n    centered: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Modal.Header, {\n    closeButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Title, {\n    id: \"contained-modal-title-vcenter\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 17\n    }\n  }, \"Network Config\")), /*#__PURE__*/React.createElement(Modal.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 21\n    }\n  }, \"NETWORK\"), /*#__PURE__*/React.createElement(Alert, {\n    show: isValid,\n    variant: \"success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 21\n    }\n  }, responseString), /*#__PURE__*/React.createElement(Alert, {\n    show: isError,\n    variant: \"danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 21\n    }\n  }, responseString), /*#__PURE__*/React.createElement(Form.Group, {\n    as: Row,\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    as: \"legend\",\n    column: true,\n    sm: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(Col, {\n    sm: 3,\n    align: \"left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Form.Check, {\n    type: \"radio\",\n    label: \"Obtain an IP address automatically\",\n    id: \"radiodhcp\",\n    onChange: ButtonSelectRadio_Click,\n    checked: stateRadioDhcp,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(Form.Check, {\n    type: \"radio\",\n    label: \"Use the following IP address:\",\n    id: \"radiostatic\",\n    onChange: ButtonSelectRadio_Click,\n    checked: stateRadioStatic,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 29\n    }\n  }))), /*#__PURE__*/React.createElement(Form.Group, {\n    as: Row,\n    className: \"mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    align: \"right\",\n    column: true,\n    sm: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 25\n    }\n  }, \"IP Address\"), /*#__PURE__*/React.createElement(Col, {\n    sm: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    placeholder: \"IP Address\",\n    onChange: e => setField('address', e.target.value),\n    isInvalid: !!errors.address,\n    disabled: ipAddressDisabled,\n    value: form.address,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n    type: \"invalid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 29\n    }\n  }, errors.address))), /*#__PURE__*/React.createElement(Form.Group, {\n    as: Row,\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    align: \"right\",\n    column: true,\n    sm: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 25\n    }\n  }, \"Select Netmask\"), /*#__PURE__*/React.createElement(Col, {\n    xs: 2,\n    align: \"left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    //</Col>className=\"form-control-custom\" //makes gray the control\n    as: \"select\",\n    bsPrefix: \"form-select\" //shows the control like a combobox\n    ,\n    onChange: e => setField('netmask', e.target.value),\n    isInvalid: !!errors.netmask,\n    disabled: netmaskDisabled,\n    value: form.netmask,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"255.255.255.0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 33\n    }\n  }, \"255.255.255.0\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"255.255.0.0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 33\n    }\n  }, \"255.255.0.0\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"255.0.0.0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 33\n    }\n  }, \"255.0.0.0\")), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n    type: \"invalid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 29\n    }\n  }, errors.netmask))), /*#__PURE__*/React.createElement(Form.Group, {\n    as: Row,\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    align: \"right\",\n    column: true,\n    sm: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 25\n    }\n  }, \"Default Gateway\"), /*#__PURE__*/React.createElement(Col, {\n    sm: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    placeholder: \"Gateway\",\n    onChange: e => setField('gateway', e.target.value),\n    isInvalid: !!errors.gateway,\n    disabled: gatewayDisabled,\n    value: form.gateway,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n    type: \"invalid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 29\n    }\n  }, errors.gateway))), /*#__PURE__*/React.createElement(Form.Group, {\n    as: Row,\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    align: \"right\",\n    column: true,\n    sm: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 25\n    }\n  }, \"Set DNS Servers:\")), /*#__PURE__*/React.createElement(Form.Group, {\n    as: Row,\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    align: \"right\",\n    column: true,\n    sm: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 25\n    }\n  }, \"Primary\"), /*#__PURE__*/React.createElement(Col, {\n    sm: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    placeholder: \"Primary DNS\",\n    onChange: e => setField('dnsprimary', e.target.value),\n    isInvalid: !!errors.dnsprimary,\n    disabled: dnsPrimaryDisabled,\n    value: form.dnsprimary,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n    type: \"invalid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 29\n    }\n  }, errors.dnsprimary))), /*#__PURE__*/React.createElement(Form.Group, {\n    as: Row,\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    align: \"right\",\n    column: true,\n    sm: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 25\n    }\n  }, \"Secondary\"), /*#__PURE__*/React.createElement(Col, {\n    sm: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    placeholder: \"Secondary DNS\",\n    onChange: e => setField('dnssecondary', e.target.value),\n    isInvalid: !!errors.dnssecondary,\n    disabled: dnsSecondaryDisabled,\n    value: form.dnssecondary,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n    type: \"invalid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 29\n    }\n  }, errors.dnssecondary))), /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: {\n      span: 10,\n      offset: 2\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Stack, {\n    direction: \"horizontal\",\n    gap: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: ButtonGetNetworkConfig_Click,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 33\n    }\n  }, \"Get Config\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: ButtonSetNetworkConfig_Click,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 33\n    }\n  }, \"Set Config\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: ButtonPing_Click,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 33\n    }\n  }, \"Ping\")))))), /*#__PURE__*/React.createElement(Modal.Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: props.onHide,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 17\n    }\n  }, \"Close\")));\n}\n\nexport default ModalNetwork;","map":{"version":3,"sources":["/home/hiram/github/hiram-repos/tryouts/lv-react-ui/src/ModalNetwork.js"],"names":["React","useState","Modal","Button","ModalNetwork","props","isValid","responseString","isError","Row","ButtonSelectRadio_Click","stateRadioDhcp","stateRadioStatic","e","setField","target","value","errors","address","ipAddressDisabled","form","netmask","netmaskDisabled","gateway","gatewayDisabled","dnsprimary","dnsPrimaryDisabled","dnssecondary","dnsSecondaryDisabled","span","offset","ButtonGetNetworkConfig_Click","ButtonSetNetworkConfig_Click","ButtonPing_Click","onHide"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\n\nimport Modal from 'react-bootstrap/Modal'\nimport Button from 'react-bootstrap/Button'\n\nfunction ModalNetwork(props) {\n    return (\n        <Modal\n            {...props}\n            size=\"lg\"\n            backdrop=\"static\"\n            aria-labelledby=\"contained-modal-title-vcenter\"\n            centered\n        >\n            <Modal.Header closeButton>\n                <Modal.Title id=\"contained-modal-title-vcenter\">\n                    Network Config\n                </Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n\n\n                <Form>\n                    <h1>NETWORK</h1>\n                    <Alert show={isValid} variant=\"success\">\n                        {responseString}\n                    </Alert>\n                    <Alert show={isError} variant=\"danger\">\n                        {responseString}\n                    </Alert>\n                    <Form.Group as={Row} className=\"mb-3\">\n                        <Form.Label as=\"legend\" column sm={2}>\n                        </Form.Label>\n                        <Col sm={3} align=\"left\">\n                            <Form.Check\n                                type=\"radio\"\n                                label=\"Obtain an IP address automatically\"\n                                id=\"radiodhcp\"\n                                onChange={ButtonSelectRadio_Click}\n                                checked={stateRadioDhcp}\n                            />\n                            <Form.Check\n                                type=\"radio\"\n                                label=\"Use the following IP address:\"\n                                id=\"radiostatic\"\n                                onChange={ButtonSelectRadio_Click}\n                                checked={stateRadioStatic}\n                            />\n                        </Col>\n                    </Form.Group>\n\n                    <Form.Group as={Row} className=\"mb-2\">\n                        <Form.Label align=\"right\" column sm={2}>\n                            IP Address\n                        </Form.Label>\n                        <Col sm={8}>\n                            <Form.Control\n                                placeholder=\"IP Address\"\n                                onChange={e => setField('address', e.target.value)}\n                                isInvalid={!!errors.address}\n                                disabled={ipAddressDisabled}\n                                value={form.address}\n                            />\n                            <Form.Control.Feedback type='invalid'>{errors.address}</Form.Control.Feedback>\n                        </Col>\n                    </Form.Group>\n\n                    <Form.Group as={Row} className=\"mb-3\">\n                        <Form.Label align=\"right\" column sm={2}>\n                            Select Netmask\n                        </Form.Label>\n                        <Col xs={2} align=\"left\">\n                            <Form.Control\n                                //</Col>className=\"form-control-custom\" //makes gray the control\n                                as=\"select\"\n                                bsPrefix={\"form-select\"} //shows the control like a combobox\n                                onChange={e => setField('netmask', e.target.value)}\n                                isInvalid={!!errors.netmask}\n                                disabled={netmaskDisabled}\n                                value={form.netmask}\n                            >\n                                <option value=\"255.255.255.0\">255.255.255.0</option>\n                                <option value=\"255.255.0.0\">255.255.0.0</option>\n                                <option value=\"255.0.0.0\">255.0.0.0</option>\n                            </Form.Control>\n                            <Form.Control.Feedback type='invalid'>{errors.netmask}</Form.Control.Feedback>\n                        </Col>\n                    </Form.Group>\n\n                    <Form.Group as={Row} className=\"mb-3\">\n                        <Form.Label align=\"right\" column sm={2}>\n                            Default Gateway\n                        </Form.Label>\n                        <Col sm={8}>\n                            <Form.Control\n                                placeholder=\"Gateway\"\n                                onChange={e => setField('gateway', e.target.value)}\n                                isInvalid={!!errors.gateway}\n                                disabled={gatewayDisabled}\n                                value={form.gateway}\n                            />\n                            <Form.Control.Feedback type='invalid'>{errors.gateway}</Form.Control.Feedback>\n                        </Col>\n                    </Form.Group>\n\n                    <Form.Group as={Row} className=\"mb-3\">\n                        <Form.Label align=\"right\" column sm={2}>\n                            Set DNS Servers:\n                        </Form.Label>\n                    </Form.Group>\n\n                    <Form.Group as={Row} className=\"mb-3\">\n                        <Form.Label align=\"right\" column sm={2}>\n                            Primary\n                        </Form.Label>\n                        <Col sm={8}>\n                            <Form.Control\n                                placeholder=\"Primary DNS\"\n                                onChange={e => setField('dnsprimary', e.target.value)}\n                                isInvalid={!!errors.dnsprimary}\n                                disabled={dnsPrimaryDisabled}\n                                value={form.dnsprimary}\n                            />\n                            <Form.Control.Feedback type='invalid'>{errors.dnsprimary}</Form.Control.Feedback>\n                        </Col>\n                    </Form.Group>\n\n                    <Form.Group as={Row} className=\"mb-3\">\n                        <Form.Label align=\"right\" column sm={2}>\n                            Secondary\n                        </Form.Label>\n                        <Col sm={8}>\n                            <Form.Control\n                                placeholder=\"Secondary DNS\"\n                                onChange={e => setField('dnssecondary', e.target.value)}\n                                isInvalid={!!errors.dnssecondary}\n                                disabled={dnsSecondaryDisabled}\n                                value={form.dnssecondary}\n                            />\n                            <Form.Control.Feedback type='invalid'>{errors.dnssecondary}</Form.Control.Feedback>\n                        </Col>\n                    </Form.Group>\n\n                    <Form.Group>\n                        <Col sm={{ span: 10, offset: 2 }}>\n                            <Stack direction=\"horizontal\" gap={3}>\n                                <Button onClick={ButtonGetNetworkConfig_Click}>Get Config</Button>\n                                <Button onClick={ButtonSetNetworkConfig_Click}>Set Config</Button>\n                                <Button onClick={ButtonPing_Click}>Ping</Button>\n                            </Stack>\n                        </Col>\n                    </Form.Group>\n                </Form>\n\n\n            </Modal.Body>\n            <Modal.Footer>\n                <Button onClick={props.onHide}>Close</Button>\n            </Modal.Footer>\n        </Modal>\n    );\n}\n\nexport default ModalNetwork;"]},"metadata":{},"sourceType":"module"}