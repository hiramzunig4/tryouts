{"ast":null,"code":"var _jsxFileName = \"/home/hiram/github/hiram-repos/tryouts/lv-react-ui/src/Utils.js\";\nimport './App.css';\nimport api from \"./api\";\nimport Button from 'react-bootstrap/Button';\nimport Table from 'react-bootstrap/Table';\nimport React from \"react\";\n\nfunction Utils() {\n  const devices = [];\n\n  function buttonDiscoveryClick() {\n    api.getNetworkDiscover(function (res) {\n      console.log(JSON.stringify(res));\n      res.forEach(deviceRes => {\n        console.log(deviceRes.data.ipaddr);\n        const device = {\n          hostname: deviceRes.data.hostname,\n          ifname: deviceRes.data.ifname,\n          macaddr: deviceRes.data.macaddr,\n          name: deviceRes.data.name,\n          nerves: deviceRes.data.nerves,\n          version: deviceRes.data.variant,\n          ipaddr: deviceRes.data.ipaddr\n        };\n        devices.push(device);\n      });\n      console.log(`Es mi array interno ${JSON.stringify(devices[0])}`);\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\",\n    onClick: buttonDiscoveryClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, \"Discovery\"), /*#__PURE__*/React.createElement(Table, {\n    striped: true,\n    condensed: true,\n    hover: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, \"Address\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, \"Age\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  }, this.state.diePool.map((roll, index) => {\n    /*#__PURE__*/\n    React.createElement(\"tr\", {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }\n    }, roll.type), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }\n    }, roll.number), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }\n    }, roll.adjuster));\n  })))));\n}\n\nexport default Utils;","map":{"version":3,"sources":["/home/hiram/github/hiram-repos/tryouts/lv-react-ui/src/Utils.js"],"names":["api","Button","Table","React","Utils","devices","buttonDiscoveryClick","getNetworkDiscover","res","console","log","JSON","stringify","forEach","deviceRes","data","ipaddr","device","hostname","ifname","macaddr","name","nerves","version","variant","push","state","diePool","map","roll","index","type","number","adjuster"],"mappings":";AAAA,OAAO,WAAP;AACA,OAAOA,GAAP,MAAgB,OAAhB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,SAASC,KAAT,GAAiB;AAEf,QAAMC,OAAO,GAAG,EAAhB;;AAEA,WAASC,oBAAT,GAAgC;AAC9BN,IAAAA,GAAG,CAACO,kBAAJ,CAAuB,UAAUC,GAAV,EAAe;AACpCC,MAAAA,OAAO,CAACC,GAAR,CAAYC,IAAI,CAACC,SAAL,CAAeJ,GAAf,CAAZ;AACAA,MAAAA,GAAG,CAACK,OAAJ,CAAYC,SAAS,IAAI;AACvBL,QAAAA,OAAO,CAACC,GAAR,CAAYI,SAAS,CAACC,IAAV,CAAeC,MAA3B;AACA,cAAMC,MAAM,GAAG;AACbC,UAAAA,QAAQ,EAAEJ,SAAS,CAACC,IAAV,CAAeG,QADZ;AAEbC,UAAAA,MAAM,EAAEL,SAAS,CAACC,IAAV,CAAeI,MAFV;AAGbC,UAAAA,OAAO,EAAEN,SAAS,CAACC,IAAV,CAAeK,OAHX;AAIbC,UAAAA,IAAI,EAAEP,SAAS,CAACC,IAAV,CAAeM,IAJR;AAKbC,UAAAA,MAAM,EAAER,SAAS,CAACC,IAAV,CAAeO,MALV;AAMbC,UAAAA,OAAO,EAAET,SAAS,CAACC,IAAV,CAAeS,OANX;AAObR,UAAAA,MAAM,EAAEF,SAAS,CAACC,IAAV,CAAeC;AAPV,SAAf;AASAX,QAAAA,OAAO,CAACoB,IAAR,CAAaR,MAAb;AACD,OAZD;AAaAR,MAAAA,OAAO,CAACC,GAAR,CAAa,uBAAsBC,IAAI,CAACC,SAAL,CAAeP,OAAO,CAAC,CAAD,CAAtB,CAA2B,EAA9D;AACD,KAhBD;AAiBD;;AAED,sBACE,uDACE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,SAAhB;AAA0B,IAAA,OAAO,EAAEC,oBAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,eAKE,oBAAC,KAAD;AAAO,IAAA,OAAO,MAAd;AAAe,IAAA,SAAS,MAAxB;AAAyB,IAAA,KAAK,MAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAJF,CADF,CADF,eASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,KAAKoB,KAAL,CAAWC,OAAX,CAAmBC,GAAnB,CAAuB,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACvC;AAAA;AAAI,MAAA,GAAG,EAAEA,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKD,IAAI,CAACE,IAAV,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKF,IAAI,CAACG,MAAV,CAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKH,IAAI,CAACI,QAAV,CAHF;AAKD,GANA,CADH,CADF,CATF,CALF,CADF;AA+BD;;AAED,eAAe7B,KAAf","sourcesContent":["import './App.css';\nimport api from \"./api\"\nimport Button from 'react-bootstrap/Button'\nimport Table from 'react-bootstrap/Table'\nimport React from \"react\"\n\nfunction Utils() {\n\n  const devices = []\n\n  function buttonDiscoveryClick() {\n    api.getNetworkDiscover(function (res) {\n      console.log(JSON.stringify(res))\n      res.forEach(deviceRes => {\n        console.log(deviceRes.data.ipaddr)\n        const device = {\n          hostname: deviceRes.data.hostname,\n          ifname: deviceRes.data.ifname,\n          macaddr: deviceRes.data.macaddr,\n          name: deviceRes.data.name,\n          nerves: deviceRes.data.nerves,\n          version: deviceRes.data.variant,\n          ipaddr: deviceRes.data.ipaddr\n        }\n        devices.push(device)\n      });\n      console.log(`Es mi array interno ${JSON.stringify(devices[0])}`)\n    })\n  }\n\n  return (\n    <>\n      <Button variant=\"primary\" onClick={buttonDiscoveryClick}>\n        Discovery\n      </Button>\n\n      <Table striped condensed hover>\n        <thead>\n          <tr>\n            <th></th>\n            <th>Name</th>\n            <th>Address</th>\n            <th>Age</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tbody>\n            {this.state.diePool.map((roll, index) => {\n              <tr key={index}>\n                <td>{roll.type}</td>\n                <td>{roll.number}</td>\n                <td>{roll.adjuster}</td>\n              </tr>\n            })}\n          </tbody>\n        </tbody>\n      </Table>\n\n    </>\n  )\n\n}\n\nexport default Utils;"]},"metadata":{},"sourceType":"module"}