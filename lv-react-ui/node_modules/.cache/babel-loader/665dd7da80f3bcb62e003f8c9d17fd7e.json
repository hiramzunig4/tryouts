{"ast":null,"code":"import _defineProperty from\"/home/hiram/github/hiram-repos/tryouts/lv-react-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"/home/hiram/github/hiram-repos/tryouts/lv-react-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/home/hiram/github/hiram-repos/tryouts/lv-react-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useState}from'react';import'./App.css';import api from\"./api\";import React from\"react\";import Validation from'./Validation';import Col from'react-bootstrap/Col';import Row from'react-bootstrap/Row';import Form from'react-bootstrap/Form';import Alert from'react-bootstrap/Alert';import Stack from'react-bootstrap/Stack';import Button from'react-bootstrap/Button';function Network(){//radio selector\nvar _React$useState=React.useState(\"radiodhcp\"),_React$useState2=_slicedToArray(_React$useState,2),radioSelected=_React$useState2[0],setRadioSelected=_React$useState2[1];var _React$useState3=React.useState(true),_React$useState4=_slicedToArray(_React$useState3,2),stateRadioDhcp=_React$useState4[0],setStateRadioDhcp=_React$useState4[1];var _React$useState5=React.useState(false),_React$useState6=_slicedToArray(_React$useState5,2),stateRadioStatic=_React$useState6[0],setStateRadioStatic=_React$useState6[1];//Errors\nvar _useState=useState({address:\"\",gateway:\"\",netmask:\"255.255.255.0\",dnsprimary:\"\",dnssecondary:\"\"}),_useState2=_slicedToArray(_useState,2),form=_useState2[0],setForm=_useState2[1];var _useState3=useState({address:\"\",gateway:\"\",netmask:\"\",dnsprimary:\"\",dnssecondary:\"\"}),_useState4=_slicedToArray(_useState3,2),errors=_useState4[0],setErrors=_useState4[1];//disable componets\nvar _React$useState7=React.useState(true),_React$useState8=_slicedToArray(_React$useState7,2),ipAddressDisabled=_React$useState8[0],setIpAddressdDisabled=_React$useState8[1];var _React$useState9=React.useState(true),_React$useState10=_slicedToArray(_React$useState9,2),gatewayDisabled=_React$useState10[0],setGatewayDisabled=_React$useState10[1];var _React$useState11=React.useState(true),_React$useState12=_slicedToArray(_React$useState11,2),netmaskDisabled=_React$useState12[0],setNetmaskDisabled=_React$useState12[1];var _React$useState13=React.useState(true),_React$useState14=_slicedToArray(_React$useState13,2),dnsPrimaryDisabled=_React$useState14[0],setDnsPrimaryDisabled=_React$useState14[1];var _React$useState15=React.useState(true),_React$useState16=_slicedToArray(_React$useState15,2),dnsSecondaryDisabled=_React$useState16[0],setDnsSecondaryDisabled=_React$useState16[1];//Response from yeico appliance\nvar _React$useState17=React.useState(\"\"),_React$useState18=_slicedToArray(_React$useState17,2),responseString=_React$useState18[0],setResponseString=_React$useState18[1];//Alerts\nvar _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),isValid=_useState6[0],setIsValid=_useState6[1];var _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),isError=_useState8[0],setIsError=_useState8[1];function validateIPaddress(ipaddress){if(/^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/.test(ipaddress)){return true;}return false;}function setDisabledComponents(state){setIpAddressdDisabled(state);setGatewayDisabled(state);setNetmaskDisabled(state);setDnsPrimaryDisabled(state);setDnsSecondaryDisabled(state);}function parseIP(key){var addresswithpoints=\"\".concat(JSON.stringify(key)).replace(/,/g,\".\");return addresswithpoints.replace(/[[\\]']/g,\"\");}//manage state radios\nfunction ButtonSelectRadio_Click(event){if(event.target.id===\"radiodhcp\"){setStateRadioDhcp(true);setStateRadioStatic(false);setDisabledComponents(true);}else{setStateRadioDhcp(false);setStateRadioStatic(true);setDisabledComponents(false);}setRadioSelected(event.target.id);console.log(radioSelected);}function ButtonPing_Click(){console.log(\"clicked in Ping\");api.getNetworkPing(function(res){console.log(\"Respuesta del ping \".concat(JSON.stringify(res)));if(res.result===\"ok\"){setResponseString(\"Ping Response Success\");setIsValid(true);setTimeout(function(){setIsValid(false);},3000);}else{setResponseString(\"Ping Response Error\");setIsError(true);setTimeout(function(){setIsError(false);},3000);}});}function ButtonGetNetworkConfig_Click(){console.log(\"clicked in get config\");api.getNetworkConfig(function(res){console.log(res);if(res.result===\"ok\"){if(res.message.config.ipv4.method===\"dhcp\"){setRadioSelected(\"radiodhcp\");form.address=\"\";form.gateway=\"\";form.dnsprimary=\"\";form.dnssecondary=\"\";setStateRadioDhcp(true);setStateRadioStatic(false);setDisabledComponents(true);}else//is static\n{setRadioSelected(\"radiostatic\");setStateRadioDhcp(false);setStateRadioStatic(true);setDisabledComponents(false);var addressIp=\"\";switch(res.message.config.ipv4.prefix_length){case 8:addressIp=\"255.0.0.0\";break;case 16:addressIp=\"255.255.0.0\";break;default:addressIp=\"255.255.255.0\";}form.address=parseIP(res.message.config.ipv4.address);form.gateway=parseIP(res.message.config.ipv4.gateway);form.netmask=addressIp;if(res.message.config.ipv4.name_servers.length===0){form.dnsprimary=\"\";form.dnssecondary=\"\";}if(res.message.config.ipv4.name_servers.length===1){form.dnsprimary=parseIP(res.message.config.ipv4.name_servers[0]);form.dnssecondary=\"\";}if(res.message.config.ipv4.name_servers.length===2){form.dnsprimary=parseIP(res.message.config.ipv4.name_servers[0]);form.dnssecondary=parseIP(res.message.config.ipv4.name_servers[1]);}}setResponseString(\"Get Config Success\");setErrors({address:\"\",gateway:\"\",netmask:\"\",dnsprimary:\"\",dnssecondary:\"\"});setIsValid(true);setTimeout(function(){setIsValid(false);},3000);}else{//is error in the response\nsetResponseString(\"Get Config Error\");setErrors({address:\"\",gateway:\"\",netmask:\"\",dnsprimary:\"\",dnssecondary:\"\"});setIsError(true);setTimeout(function(){setIsError(false);},3000);}});}var setField=function setField(field,value){setForm(_objectSpread(_objectSpread({},form),{},_defineProperty({},field,value)));// Check and see if errors exist, and remove them from the error object:\nif(!!errors[field])setErrors(_objectSpread(_objectSpread({},errors),{},_defineProperty({},field,null)));};var ButtonSetNetworkConfig_Click=function ButtonSetNetworkConfig_Click(event){event.preventDefault();//the config is static\nif(radioSelected===\"radiostatic\"){// get our new errors\nvar newErrors=findFormErrors();// Conditional logic:\nif(Object.keys(newErrors).length>0){// We got errors!\nsetErrors(newErrors);}else{// No errors! Put any logic here for the form submission!\nconsole.log(\"\\n          address: \".concat(form.address,\"\\n          gateway: \").concat(form.gateway,\"\\n          netmask: \").concat(form.netmask,\"\\n          server primary: \").concat(form.dnsprimary,\"\\n          server secondary: \").concat(form.dnssecondary,\"\\n        \"));var maskNodes=form.netmask.match(/(\\d+)/g);var cidr=0;for(var i in maskNodes){cidr+=((maskNodes[i]>>>0).toString(2).match(/1/g)||[]).length;}var config=\"\";var dnsserver=[];if(!form.dnsprimary&&!form.dnssecondary){config={\"method\":\"static\",\"address\":\"\".concat(form.address),\"prefix_length\":cidr,\"gateway\":\"\".concat(form.gateway),\"name_servers\":[]};}if(form.dnsprimary&&!form.dnssecondary){dnsserver.push(\"\".concat(form.dnsprimary));config={\"method\":\"static\",\"address\":\"\".concat(form.address),\"prefix_length\":cidr,\"gateway\":\"\".concat(form.gateway),\"name_servers\":[\"\".concat(dnsserver[0])]};}if(!form.dnsprimary&&form.dnssecondary){dnsserver.push(\"\");dnsserver.push(\"\".concat(form.dnssecondary));config={\"method\":\"static\",\"address\":\"\".concat(form.address),\"prefix_length\":cidr,\"gateway\":\"\".concat(form.gateway),\"name_servers\":[\"\".concat(dnsserver[0]),\"\".concat(dnsserver[1])]};}if(form.dnsprimary&&form.dnssecondary){dnsserver.push(\"\".concat(form.dnsprimary));dnsserver.push(\"\".concat(form.dnssecondary));config={\"method\":\"static\",\"address\":\"\".concat(form.address),\"prefix_length\":cidr,\"gateway\":\"\".concat(form.gateway),\"name_servers\":[\"\".concat(dnsserver[0]),\"\".concat(dnsserver[1])]};}console.log(JSON.stringify(config));var result=Validation.validateNetConfig(config);if(result.count>0){var error=\"\".concat(Object.keys(result.errors)[0]);switch(error){case\"adddress\":setErrors({address:Object.values(result.errors)[0]});break;case\"gateway\":setErrors({gateway:Object.values(result.errors)[0]});break;case\"netmask\":setErrors({netmask:Object.values(result.errors)[0]});break;case\"dnsprimary\":setErrors({dnsprimary:Object.values(result.errors)[0]});break;case\"dnssecondary\":setErrors({dnssecondary:Object.values(result.errors)[0]});break;default:break;}}else{api.setNetworkConfigStatic(result.input,function(res){if(res.result===\"ok\"){setResponseString(\"Set Static Config Succes\");setIsValid(true);setTimeout(function(){setIsValid(false);},3000);}else{setResponseString(\"Set Static Config Error\");setIsError(true);setTimeout(function(){setIsError(false);},3000);}});}}}else{console.log(radioSelected);var _config={\"method\":\"dhcp\"};var _result=Validation.validateNetConfig(_config);if(_result.count>0){setResponseString(\"Error in config\");setIsError(true);setTimeout(function(){setIsError(false);},3000);}else{api.setNetworkConfigDhcp(_result.input,function(res){console.log(res);if(res.result===\"ok\"){setResponseString(\"Set DHCP Config Succes\");setIsValid(true);setTimeout(function(){setIsValid(false);},3000);}else{setResponseString(\"Set DHCP Config Error\");setIsError(true);setTimeout(function(){setIsError(false);},3000);}});}}};var findFormErrors=function findFormErrors(){var address=form.address,gateway=form.gateway,netmask=form.netmask,dnsprimary=form.dnsprimary,dnssecondary=form.dnssecondary;var newErrors={};// name errors\nif(!address||!validateIPaddress(address))newErrors.address='IP has invalid format';if(address==='')newErrors.address='This field is required';if(!gateway||gateway===''||!validateIPaddress(gateway))newErrors.gateway='IP has invalid format';if(!netmask||netmask===''||!validateIPaddress(netmask))newErrors.netmask='IP has invalid format';if(dnsprimary){if(!dnsprimary||!validateIPaddress(dnsprimary))newErrors.dnsprimary='IP has invalid format';}if(dnssecondary){if(!dnssecondary||!validateIPaddress(dnssecondary))newErrors.dnssecondary='IP has invalid format';}return newErrors;};return/*#__PURE__*/React.createElement(Form,null,/*#__PURE__*/React.createElement(\"h1\",null,\"NETWORK\"),/*#__PURE__*/React.createElement(Alert,{show:isValid,variant:\"success\"},responseString),/*#__PURE__*/React.createElement(Alert,{show:isError,variant:\"danger\"},responseString),/*#__PURE__*/React.createElement(Form.Group,{as:Row,className:\"mb-3\"},/*#__PURE__*/React.createElement(Form.Label,{as:\"legend\",column:true,sm:2}),/*#__PURE__*/React.createElement(Col,{sm:3,align:\"left\"},/*#__PURE__*/React.createElement(Form.Check,{type:\"radio\",label:\"Obtain an IP address automatically\",id:\"radiodhcp\",onChange:ButtonSelectRadio_Click,checked:stateRadioDhcp}),/*#__PURE__*/React.createElement(Form.Check,{type:\"radio\",label:\"Use the following IP address:\",id:\"radiostatic\",onChange:ButtonSelectRadio_Click,checked:stateRadioStatic}))),/*#__PURE__*/React.createElement(Form.Group,{as:Row,className:\"mb-2\"},/*#__PURE__*/React.createElement(Form.Label,{align:\"right\",column:true,sm:2},\"IP Address\"),/*#__PURE__*/React.createElement(Col,{sm:8},/*#__PURE__*/React.createElement(Form.Control,{placeholder:\"IP Address\",onChange:function onChange(e){return setField('address',e.target.value);},isInvalid:!!errors.address,disabled:ipAddressDisabled,value:form.address}),/*#__PURE__*/React.createElement(Form.Control.Feedback,{type:\"invalid\"},errors.address))),/*#__PURE__*/React.createElement(Form.Group,{as:Row,className:\"mb-3\"},/*#__PURE__*/React.createElement(Form.Label,{align:\"right\",column:true,sm:2},\"Select Netmask\"),/*#__PURE__*/React.createElement(Col,{xs:2,align:\"left\"},/*#__PURE__*/React.createElement(Form.Control,{//</Col>className=\"form-control-custom\" //makes gray the control\nas:\"select\",bsPrefix:\"form-select\"//shows the control like a combobox\n,onChange:function onChange(e){return setField('netmask',e.target.value);},isInvalid:!!errors.netmask,disabled:netmaskDisabled,value:form.netmask},/*#__PURE__*/React.createElement(\"option\",{value:\"255.255.255.0\"},\"255.255.255.0\"),/*#__PURE__*/React.createElement(\"option\",{value:\"255.255.0.0\"},\"255.255.0.0\"),/*#__PURE__*/React.createElement(\"option\",{value:\"255.0.0.0\"},\"255.0.0.0\")),/*#__PURE__*/React.createElement(Form.Control.Feedback,{type:\"invalid\"},errors.netmask))),/*#__PURE__*/React.createElement(Form.Group,{as:Row,className:\"mb-3\"},/*#__PURE__*/React.createElement(Form.Label,{align:\"right\",column:true,sm:2},\"Default Gateway\"),/*#__PURE__*/React.createElement(Col,{sm:8},/*#__PURE__*/React.createElement(Form.Control,{placeholder:\"Gateway\",onChange:function onChange(e){return setField('gateway',e.target.value);},isInvalid:!!errors.gateway,disabled:gatewayDisabled,value:form.gateway}),/*#__PURE__*/React.createElement(Form.Control.Feedback,{type:\"invalid\"},errors.gateway))),/*#__PURE__*/React.createElement(Form.Group,{as:Row,className:\"mb-3\"},/*#__PURE__*/React.createElement(Form.Label,{align:\"right\",column:true,sm:2},\"Set DNS Servers:\")),/*#__PURE__*/React.createElement(Form.Group,{as:Row,className:\"mb-3\"},/*#__PURE__*/React.createElement(Form.Label,{align:\"right\",column:true,sm:2},\"Primary\"),/*#__PURE__*/React.createElement(Col,{sm:8},/*#__PURE__*/React.createElement(Form.Control,{placeholder:\"Primary DNS\",onChange:function onChange(e){return setField('dnsprimary',e.target.value);},isInvalid:!!errors.dnsprimary,disabled:dnsPrimaryDisabled,value:form.dnsprimary}),/*#__PURE__*/React.createElement(Form.Control.Feedback,{type:\"invalid\"},errors.dnsprimary))),/*#__PURE__*/React.createElement(Form.Group,{as:Row,className:\"mb-3\"},/*#__PURE__*/React.createElement(Form.Label,{align:\"right\",column:true,sm:2},\"Secondary\"),/*#__PURE__*/React.createElement(Col,{sm:8},/*#__PURE__*/React.createElement(Form.Control,{placeholder:\"Secondary DNS\",onChange:function onChange(e){return setField('dnssecondary',e.target.value);},isInvalid:!!errors.dnssecondary,disabled:dnsSecondaryDisabled,value:form.dnssecondary}),/*#__PURE__*/React.createElement(Form.Control.Feedback,{type:\"invalid\"},errors.dnssecondary))),/*#__PURE__*/React.createElement(Form.Group,null,/*#__PURE__*/React.createElement(Col,{sm:{span:10,offset:2}},/*#__PURE__*/React.createElement(Stack,{direction:\"horizontal\",gap:3},/*#__PURE__*/React.createElement(Button,{onClick:ButtonGetNetworkConfig_Click},\"Get Config\"),/*#__PURE__*/React.createElement(Button,{onClick:ButtonSetNetworkConfig_Click},\"Set Config\"),/*#__PURE__*/React.createElement(Button,{onClick:ButtonPing_Click},\"Ping\")))));}export default Network;","map":{"version":3,"sources":["/home/hiram/github/hiram-repos/tryouts/lv-react-ui/src/Network.js"],"names":["useState","api","React","Validation","Col","Row","Form","Alert","Stack","Button","Network","radioSelected","setRadioSelected","stateRadioDhcp","setStateRadioDhcp","stateRadioStatic","setStateRadioStatic","address","gateway","netmask","dnsprimary","dnssecondary","form","setForm","errors","setErrors","ipAddressDisabled","setIpAddressdDisabled","gatewayDisabled","setGatewayDisabled","netmaskDisabled","setNetmaskDisabled","dnsPrimaryDisabled","setDnsPrimaryDisabled","dnsSecondaryDisabled","setDnsSecondaryDisabled","responseString","setResponseString","isValid","setIsValid","isError","setIsError","validateIPaddress","ipaddress","test","setDisabledComponents","state","parseIP","key","addresswithpoints","JSON","stringify","replace","ButtonSelectRadio_Click","event","target","id","console","log","ButtonPing_Click","getNetworkPing","res","result","setTimeout","ButtonGetNetworkConfig_Click","getNetworkConfig","message","config","ipv4","method","addressIp","prefix_length","name_servers","length","setField","field","value","ButtonSetNetworkConfig_Click","preventDefault","newErrors","findFormErrors","Object","keys","maskNodes","match","cidr","i","toString","dnsserver","push","validateNetConfig","count","error","values","setNetworkConfigStatic","input","setNetworkConfigDhcp","e","span","offset"],"mappings":"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","sourcesContent":["import { useState } from 'react'\n\nimport './App.css';\nimport api from \"./api\"\nimport React from \"react\"\nimport Validation from './Validation'\n\nimport Col from 'react-bootstrap/Col'\nimport Row from 'react-bootstrap/Row'\nimport Form from 'react-bootstrap/Form'\nimport Alert from 'react-bootstrap/Alert'\nimport Stack from 'react-bootstrap/Stack'\nimport Button from 'react-bootstrap/Button'\n\nfunction Network() {\n  //radio selector\n  const [radioSelected, setRadioSelected] = React.useState(\"radiodhcp\")\n  const [stateRadioDhcp, setStateRadioDhcp] = React.useState(true)\n  const [stateRadioStatic, setStateRadioStatic] = React.useState(false)\n\n  //Errors\n  const [form, setForm] = useState({ address: \"\", gateway: \"\", netmask: \"255.255.255.0\", dnsprimary: \"\", dnssecondary: \"\" })\n  const [errors, setErrors] = useState({ address: \"\", gateway: \"\", netmask: \"\", dnsprimary: \"\", dnssecondary: \"\" })\n\n  //disable componets\n  const [ipAddressDisabled, setIpAddressdDisabled] = React.useState(true);\n  const [gatewayDisabled, setGatewayDisabled] = React.useState(true);\n  const [netmaskDisabled, setNetmaskDisabled] = React.useState(true);\n  const [dnsPrimaryDisabled, setDnsPrimaryDisabled] = React.useState(true);\n  const [dnsSecondaryDisabled, setDnsSecondaryDisabled] = React.useState(true);\n\n  //Response from yeico appliance\n  const [responseString, setResponseString] = React.useState(\"\")\n\n  //Alerts\n  const [isValid, setIsValid] = useState(false);\n  const [isError, setIsError] = useState(false);\n\n  function validateIPaddress(ipaddress) {\n    if (/^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/.test(ipaddress)) {\n      return (true)\n    }\n    return (false)\n  }\n\n  function setDisabledComponents(state) {\n    setIpAddressdDisabled(state)\n    setGatewayDisabled(state)\n    setNetmaskDisabled(state)\n    setDnsPrimaryDisabled(state)\n    setDnsSecondaryDisabled(state)\n  }\n\n  function parseIP(key) {\n    var addresswithpoints = `${JSON.stringify(key)}`.replace(/,/g, \".\")\n    return addresswithpoints.replace(/[[\\]']/g, \"\")\n  }\n\n  //manage state radios\n  function ButtonSelectRadio_Click(event) {\n    if (event.target.id === \"radiodhcp\") {\n      setStateRadioDhcp(true)\n      setStateRadioStatic(false)\n      setDisabledComponents(true)\n    }\n    else {\n      setStateRadioDhcp(false)\n      setStateRadioStatic(true)\n      setDisabledComponents(false)\n    }\n    setRadioSelected(event.target.id)\n    console.log(radioSelected)\n  }\n\n  function ButtonPing_Click() {\n    console.log(\"clicked in Ping\")\n    api.getNetworkPing(function (res) {\n      console.log(`Respuesta del ping ${JSON.stringify(res)}`)\n      if (res.result === \"ok\") {\n        setResponseString(`Ping Response Success`)\n        setIsValid(true)\n        setTimeout(() => {\n          setIsValid(false)\n        }, 3000);\n      }\n      else {\n        setResponseString(`Ping Response Error`)\n        setIsError(true)\n        setTimeout(() => {\n          setIsError(false)\n        }, 3000);\n      }\n    })\n  }\n\n  function ButtonGetNetworkConfig_Click() {\n    console.log(\"clicked in get config\");\n    api.getNetworkConfig(function (res) {\n      console.log(res)\n      if (res.result === \"ok\") {\n        if (res.message.config.ipv4.method === \"dhcp\") {\n          setRadioSelected(\"radiodhcp\");\n          form.address = \"\"\n          form.gateway = \"\"\n          form.dnsprimary = \"\"\n          form.dnssecondary = \"\"\n          setStateRadioDhcp(true)\n          setStateRadioStatic(false)\n          setDisabledComponents(true)\n        }\n        else //is static\n        {\n          setRadioSelected(\"radiostatic\");\n          setStateRadioDhcp(false)\n          setStateRadioStatic(true)\n          setDisabledComponents(false)\n\n          var addressIp = \"\";\n          switch (res.message.config.ipv4.prefix_length) {\n            case 8:\n              addressIp = \"255.0.0.0\"\n              break;\n            case 16:\n              addressIp = \"255.255.0.0\"\n              break;\n            default:\n              addressIp = \"255.255.255.0\"\n          }\n          form.address = parseIP(res.message.config.ipv4.address)\n          form.gateway = parseIP(res.message.config.ipv4.gateway)\n          form.netmask = addressIp\n          if (res.message.config.ipv4.name_servers.length === 0) {\n            form.dnsprimary = \"\"\n            form.dnssecondary = \"\"\n          }\n          if (res.message.config.ipv4.name_servers.length === 1) {\n            form.dnsprimary = parseIP(res.message.config.ipv4.name_servers[0])\n            form.dnssecondary = \"\"\n          }\n          if (res.message.config.ipv4.name_servers.length === 2) {\n            form.dnsprimary = parseIP(res.message.config.ipv4.name_servers[0])\n            form.dnssecondary = parseIP(res.message.config.ipv4.name_servers[1])\n          }\n        }\n        setResponseString(`Get Config Success`)\n        setErrors({ address: \"\", gateway: \"\", netmask: \"\", dnsprimary: \"\", dnssecondary: \"\" })\n        setIsValid(true)\n        setTimeout(() => {\n          setIsValid(false)\n        }, 3000);\n      }\n      else { //is error in the response\n        setResponseString(`Get Config Error`)\n        setErrors({ address: \"\", gateway: \"\", netmask: \"\", dnsprimary: \"\", dnssecondary: \"\" })\n        setIsError(true)\n        setTimeout(() => {\n          setIsError(false)\n        }, 3000);\n      }\n    })\n  }\n\n  const setField = (field, value) => {\n    setForm({\n      ...form,\n      [field]: value\n    })\n    // Check and see if errors exist, and remove them from the error object:\n    if (!!errors[field]) setErrors({\n      ...errors,\n      [field]: null\n    })\n  }\n\n  const ButtonSetNetworkConfig_Click = (event) => {\n    event.preventDefault()\n    //the config is static\n    if (radioSelected === \"radiostatic\") {\n      // get our new errors\n      const newErrors = findFormErrors()\n      // Conditional logic:\n      if (Object.keys(newErrors).length > 0) {\n        // We got errors!\n        setErrors(newErrors)\n      }\n      else {\n        // No errors! Put any logic here for the form submission!\n        console.log(`\n          address: ${form.address}\n          gateway: ${form.gateway}\n          netmask: ${form.netmask}\n          server primary: ${form.dnsprimary}\n          server secondary: ${form.dnssecondary}\n        `)\n        var maskNodes = form.netmask.match(/(\\d+)/g);\n        var cidr = 0;\n        for (var i in maskNodes) {\n          cidr += (((maskNodes[i] >>> 0).toString(2)).match(/1/g) || []).length;\n        }\n\n        var config = \"\"\n        var dnsserver = []\n        if (!form.dnsprimary && !form.dnssecondary) {\n          config = {\n            \"method\": \"static\",\n            \"address\": `${form.address}`,\n            \"prefix_length\": cidr,\n            \"gateway\": `${form.gateway}`,\n            \"name_servers\": []\n          }\n        }\n        if (form.dnsprimary && !form.dnssecondary) {\n          dnsserver.push(`${form.dnsprimary}`)\n          config = {\n            \"method\": \"static\",\n            \"address\": `${form.address}`,\n            \"prefix_length\": cidr,\n            \"gateway\": `${form.gateway}`,\n            \"name_servers\": [`${dnsserver[0]}`]\n          }\n        }\n        if (!form.dnsprimary && form.dnssecondary) {\n          dnsserver.push(\"\")\n          dnsserver.push(`${form.dnssecondary}`)\n          config = {\n            \"method\": \"static\",\n            \"address\": `${form.address}`,\n            \"prefix_length\": cidr,\n            \"gateway\": `${form.gateway}`,\n            \"name_servers\": [`${dnsserver[0]}`, `${dnsserver[1]}`]\n          }\n        }\n        if (form.dnsprimary && form.dnssecondary) {\n          dnsserver.push(`${form.dnsprimary}`)\n          dnsserver.push(`${form.dnssecondary}`)\n          config = {\n            \"method\": \"static\",\n            \"address\": `${form.address}`,\n            \"prefix_length\": cidr,\n            \"gateway\": `${form.gateway}`,\n            \"name_servers\": [`${dnsserver[0]}`, `${dnsserver[1]}`]\n          }\n        }\n        console.log(JSON.stringify(config))\n        let result = Validation.validateNetConfig(config)\n        if (result.count > 0) {\n          let error = `${Object.keys(result.errors)[0]}`\n          switch (error) {\n            case \"adddress\":\n              setErrors({ address: Object.values(result.errors)[0] })\n              break\n            case \"gateway\":\n              setErrors({ gateway: Object.values(result.errors)[0] })\n              break\n            case \"netmask\":\n              setErrors({ netmask: Object.values(result.errors)[0] })\n              break\n            case \"dnsprimary\":\n              setErrors({ dnsprimary: Object.values(result.errors)[0] })\n              break\n            case \"dnssecondary\":\n              setErrors({ dnssecondary: Object.values(result.errors)[0] })\n              break\n            default:\n              break\n          }\n        }\n        else {\n          api.setNetworkConfigStatic(result.input, function (res) {\n            if (res.result === \"ok\") {\n              setResponseString(`Set Static Config Succes`)\n              setIsValid(true)\n              setTimeout(() => {\n                setIsValid(false)\n              }, 3000);\n            }\n            else {\n              setResponseString(`Set Static Config Error`)\n              setIsError(true)\n              setTimeout(() => {\n                setIsError(false)\n              }, 3000);\n            }\n          });\n        }\n      }\n    }\n    else {\n      console.log(radioSelected)\n      const config = {\n        \"method\": \"dhcp\"\n      }\n      let result = Validation.validateNetConfig(config)\n      if (result.count > 0) {\n        setResponseString(`Error in config`)\n        setIsError(true)\n        setTimeout(() => {\n          setIsError(false)\n        }, 3000);\n      }\n      else {\n        api.setNetworkConfigDhcp(result.input, function (res) {\n          console.log(res)\n          if (res.result === \"ok\") {\n            setResponseString(`Set DHCP Config Succes`)\n            setIsValid(true)\n            setTimeout(() => {\n              setIsValid(false)\n            }, 3000);\n          }\n          else {\n            setResponseString(`Set DHCP Config Error`)\n            setIsError(true)\n            setTimeout(() => {\n              setIsError(false)\n            }, 3000);\n          }\n        });\n      }\n    }\n  }\n\n  const findFormErrors = () => {\n    const { address, gateway, netmask, dnsprimary, dnssecondary } = form\n    const newErrors = {}\n    // name errors\n    if (!address || !validateIPaddress(address)) newErrors.address = 'IP has invalid format'\n    if (address === '') newErrors.address = 'This field is required'\n    if (!gateway || gateway === '' || !validateIPaddress(gateway)) newErrors.gateway = 'IP has invalid format'\n    if (!netmask || netmask === '' || !validateIPaddress(netmask)) newErrors.netmask = 'IP has invalid format'\n    if (dnsprimary) {\n      if (!dnsprimary || !validateIPaddress(dnsprimary)) newErrors.dnsprimary = 'IP has invalid format'\n    }\n    if (dnssecondary) {\n      if (!dnssecondary || !validateIPaddress(dnssecondary)) newErrors.dnssecondary = 'IP has invalid format'\n    }\n    return newErrors\n  }\n\n  return (\n    <Form>\n      <h1>NETWORK</h1>\n      <Alert show={isValid} variant=\"success\">\n        {responseString}\n      </Alert>\n      <Alert show={isError} variant=\"danger\">\n        {responseString}\n      </Alert>\n      <Form.Group as={Row} className=\"mb-3\">\n        <Form.Label as=\"legend\" column sm={2}>\n        </Form.Label>\n        <Col sm={3} align=\"left\">\n          <Form.Check\n            type=\"radio\"\n            label=\"Obtain an IP address automatically\"\n            id=\"radiodhcp\"\n            onChange={ButtonSelectRadio_Click}\n            checked={stateRadioDhcp}\n          />\n          <Form.Check\n            type=\"radio\"\n            label=\"Use the following IP address:\"\n            id=\"radiostatic\"\n            onChange={ButtonSelectRadio_Click}\n            checked={stateRadioStatic}\n          />\n        </Col>\n      </Form.Group>\n\n      <Form.Group as={Row} className=\"mb-2\">\n        <Form.Label align=\"right\" column sm={2}>\n          IP Address\n        </Form.Label>\n        <Col sm={8}>\n          <Form.Control\n            placeholder=\"IP Address\"\n            onChange={e => setField('address', e.target.value)}\n            isInvalid={!!errors.address}\n            disabled={ipAddressDisabled}\n            value={form.address}\n          />\n          <Form.Control.Feedback type='invalid'>{errors.address}</Form.Control.Feedback>\n        </Col>\n      </Form.Group>\n\n      <Form.Group as={Row} className=\"mb-3\">\n        <Form.Label align=\"right\" column sm={2}>\n          Select Netmask\n        </Form.Label>\n        <Col xs={2} align=\"left\">\n          <Form.Control\n            //</Col>className=\"form-control-custom\" //makes gray the control\n            as=\"select\"\n            bsPrefix={\"form-select\"} //shows the control like a combobox\n            onChange={e => setField('netmask', e.target.value)}\n            isInvalid={!!errors.netmask}\n            disabled={netmaskDisabled}\n            value={form.netmask}\n          >\n            <option value=\"255.255.255.0\">255.255.255.0</option>\n            <option value=\"255.255.0.0\">255.255.0.0</option>\n            <option value=\"255.0.0.0\">255.0.0.0</option>\n          </Form.Control>\n          <Form.Control.Feedback type='invalid'>{errors.netmask}</Form.Control.Feedback>\n        </Col>\n      </Form.Group>\n\n      <Form.Group as={Row} className=\"mb-3\">\n        <Form.Label align=\"right\" column sm={2}>\n          Default Gateway\n        </Form.Label>\n        <Col sm={8}>\n          <Form.Control\n            placeholder=\"Gateway\"\n            onChange={e => setField('gateway', e.target.value)}\n            isInvalid={!!errors.gateway}\n            disabled={gatewayDisabled}\n            value={form.gateway}\n          />\n          <Form.Control.Feedback type='invalid'>{errors.gateway}</Form.Control.Feedback>\n        </Col>\n      </Form.Group>\n\n      <Form.Group as={Row} className=\"mb-3\">\n        <Form.Label align=\"right\" column sm={2}>\n          Set DNS Servers:\n        </Form.Label>\n      </Form.Group>\n\n      <Form.Group as={Row} className=\"mb-3\">\n        <Form.Label align=\"right\" column sm={2}>\n          Primary\n        </Form.Label>\n        <Col sm={8}>\n          <Form.Control\n            placeholder=\"Primary DNS\"\n            onChange={e => setField('dnsprimary', e.target.value)}\n            isInvalid={!!errors.dnsprimary}\n            disabled={dnsPrimaryDisabled}\n            value={form.dnsprimary}\n          />\n          <Form.Control.Feedback type='invalid'>{errors.dnsprimary}</Form.Control.Feedback>\n        </Col>\n      </Form.Group>\n\n      <Form.Group as={Row} className=\"mb-3\">\n        <Form.Label align=\"right\" column sm={2}>\n          Secondary\n        </Form.Label>\n        <Col sm={8}>\n          <Form.Control\n            placeholder=\"Secondary DNS\"\n            onChange={e => setField('dnssecondary', e.target.value)}\n            isInvalid={!!errors.dnssecondary}\n            disabled={dnsSecondaryDisabled}\n            value={form.dnssecondary}\n          />\n          <Form.Control.Feedback type='invalid'>{errors.dnssecondary}</Form.Control.Feedback>\n        </Col>\n      </Form.Group>\n\n      <Form.Group>\n        <Col sm={{ span: 10, offset: 2 }}>\n          <Stack direction=\"horizontal\" gap={3}>\n            <Button onClick={ButtonGetNetworkConfig_Click}>Get Config</Button>\n            <Button onClick={ButtonSetNetworkConfig_Click}>Set Config</Button>\n            <Button onClick={ButtonPing_Click}>Ping</Button>\n          </Stack>\n        </Col>\n      </Form.Group>\n    </Form>\n  )\n}\n\nexport default Network;"]},"metadata":{},"sourceType":"module"}