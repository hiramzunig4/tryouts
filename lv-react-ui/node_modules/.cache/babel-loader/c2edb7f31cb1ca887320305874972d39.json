{"ast":null,"code":"var _jsxFileName = \"/home/hiram/github/hiram-repos/tryouts/lv-react-ui/src/App.js\";\nimport React, { useState } from 'react';\nimport './App.css';\nimport api from \"./api\";\nimport ModalNetwork from './ModalNetwork';\nimport { faCog } from '@fortawesome/free-solid-svg-icons';\nimport { faDatabase } from '@fortawesome/free-solid-svg-icons';\nimport { faLightbulb } from '@fortawesome/free-solid-svg-icons';\nimport { faLaptopCode } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport Table from 'react-bootstrap/Table';\nimport Toast from 'react-bootstrap/Toast';\nimport Button from 'react-bootstrap/Button';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Spinner from 'react-bootstrap/Spinner';\nimport Container from 'react-bootstrap/Container';\nimport ToastContainer from 'react-bootstrap/ToastContainer';\n\nfunction App() {\n  const [devices, setDevices] = useState([]);\n  const [showModal, setShowModal] = React.useState(false);\n  const [showSpinner, setShowSpinner] = React.useState(\"visually-hidden\");\n  const [messageToToast, setMessageToToast] = React.useState(\"\");\n  const [toastColor, setToastColor] = React.useState(\"dark\");\n  const [showToast, setShowToast] = useState(false);\n  const [selectDevice, setSelectDevice] = React.useState(\"\");\n\n  function buttonDiscoveryClick() {\n    setShowSpinner(\"\");\n    api.getNetworkDiscover(function (res) {\n      console.log(JSON.stringify(res));\n      setShowSpinner(\"visually-hidden\");\n      setDevices(res);\n    });\n  }\n\n  function buttonBlinkClick(device) {\n    api.blinkNetworkDevice(function (res) {\n      console.log(JSON.stringify(res));\n      setTypeOfToast('primary', `Blink action sent to ${device.data.ipaddr}`);\n    }, device.data.ipaddr);\n  }\n\n  function buttonPingFromDiscover(device) {\n    api.getNetworkPing(function (res) {\n      console.log(res);\n\n      if (res.result === \"ok\") {\n        setTypeOfToast('success', `Ping to ${device.data.ipaddr} success`);\n      } else {\n        setTypeOfToast('danger', `Ping to ${device.data.ipaddr} failed`);\n      }\n    }, device.data.ipaddr);\n  }\n\n  function buttonNetworkClick(device) {\n    setSelectDevice(device.data.ipaddr);\n    setShowModal(true);\n  }\n\n  const rows = devices.map(device => /*#__PURE__*/React.createElement(\"tr\", {\n    key: \"{device.data.macaddr}\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 38\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }\n  }, device.data.hostname), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }\n  }, device.data.macaddr), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }\n  }, device.data.version), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }\n  }, device.data.ipaddr), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }\n  }, \" \", /*#__PURE__*/React.createElement(Button, {\n    onClick: () => buttonPingFromDiscover(device),\n    variant: \"dark\",\n    size: \"sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 10\n    }\n  }, \" \", /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faLaptopCode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 91\n    }\n  }))), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 5\n    }\n  }, \" \", /*#__PURE__*/React.createElement(Button, {\n    onClick: () => buttonBlinkClick(device),\n    variant: \"dark\",\n    size: \"sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 10\n    }\n  }, \" \", /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faLightbulb,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 85\n    }\n  }))), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 5\n    }\n  }, \" \", /*#__PURE__*/React.createElement(Button, {\n    onClick: () => buttonNetworkClick(device),\n    variant: \"dark\",\n    size: \"sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 10\n    }\n  }, \" \", /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faCog,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 87\n    }\n  }))), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 5\n    }\n  }, \" \", /*#__PURE__*/React.createElement(Button, {\n    onClick: () => buttonPingFromDiscover(device),\n    variant: \"dark\",\n    size: \"sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 10\n    }\n  }, \" \", /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faDatabase,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 91\n    }\n  })))));\n\n  function setTypeOfToast(color, message) {\n    setToastColor(color);\n    setMessageToToast(message);\n    setShowToast(true);\n  }\n\n  const toastMessages = (message, color) => {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ToastContainer, {\n      position: \"bottom-start\",\n      className: \"p-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Toast, {\n      animation: true,\n      bg: color,\n      onClose: () => setShowToast(false),\n      show: showToast,\n      delay: 3000,\n      autohide: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Toast.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      className: \"me-auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 15\n      }\n    }, \"Message\"), /*#__PURE__*/React.createElement(\"small\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 15\n      }\n    }, \"Just now\")), /*#__PURE__*/React.createElement(Toast.Body, {\n      className: \"text-white\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }\n    }, message))));\n  };\n\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 5\n    }\n  }, toastMessages(messageToToast, toastColor), /*#__PURE__*/React.createElement(Navbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Navbar.Brand, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  }, \"Laurel View Configuration\"), /*#__PURE__*/React.createElement(Navbar.Collapse, {\n    className: \"justify-content-end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: buttonDiscoveryClick,\n    variant: \"dark\",\n    title: \"Discover Devices\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 11\n    }\n  }, \"Discovery\"))), /*#__PURE__*/React.createElement(Table, {\n    striped: true,\n    bordered: true,\n    hover: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }\n  }, \"Hostname\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }\n  }, \"MAC Address\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }\n  }, \"Version\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }\n  }, \"IP Address\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }\n  }, \"Ping\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }\n  }, \"Blink\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }\n  }, \"Network Config\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }\n  }, \"Database\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }\n  }, rows)), /*#__PURE__*/React.createElement(\"div\", {\n    position: \"bottom-end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Spinner, {\n    position: \"bottom-end\",\n    className: showSpinner,\n    animation: \"border\",\n    role: \"status\",\n    variant: \"dark\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }\n  }, \" \")), /*#__PURE__*/React.createElement(ModalNetwork, {\n    show: showModal,\n    onHide: () => setShowModal(false),\n    device: selectDevice,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/hiram/github/hiram-repos/tryouts/lv-react-ui/src/App.js"],"names":["React","useState","api","ModalNetwork","faCog","faDatabase","faLightbulb","faLaptopCode","FontAwesomeIcon","Table","Toast","Button","Navbar","Spinner","Container","ToastContainer","App","devices","setDevices","showModal","setShowModal","showSpinner","setShowSpinner","messageToToast","setMessageToToast","toastColor","setToastColor","showToast","setShowToast","selectDevice","setSelectDevice","buttonDiscoveryClick","getNetworkDiscover","res","console","log","JSON","stringify","buttonBlinkClick","device","blinkNetworkDevice","setTypeOfToast","data","ipaddr","buttonPingFromDiscover","getNetworkPing","result","buttonNetworkClick","rows","map","hostname","macaddr","version","color","message","toastMessages"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\n\nimport './App.css';\nimport api from \"./api\"\nimport ModalNetwork from './ModalNetwork';\n\nimport { faCog } from '@fortawesome/free-solid-svg-icons'\nimport { faDatabase } from '@fortawesome/free-solid-svg-icons'\nimport { faLightbulb } from '@fortawesome/free-solid-svg-icons'\nimport { faLaptopCode } from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nimport Table from 'react-bootstrap/Table'\nimport Toast from 'react-bootstrap/Toast'\nimport Button from 'react-bootstrap/Button'\nimport Navbar from 'react-bootstrap/Navbar'\nimport Spinner from 'react-bootstrap/Spinner'\nimport Container from 'react-bootstrap/Container'\nimport ToastContainer from 'react-bootstrap/ToastContainer'\n\nfunction App() {\n\n  const [devices, setDevices] = useState([])\n  const [showModal, setShowModal] = React.useState(false);\n  const [showSpinner, setShowSpinner] = React.useState(\"visually-hidden\")\n\n  const [messageToToast, setMessageToToast] = React.useState(\"\")\n  const [toastColor, setToastColor] = React.useState(\"dark\")\n  const [showToast, setShowToast] = useState(false);\n\n  const [selectDevice, setSelectDevice] = React.useState(\"\")\n\n  function buttonDiscoveryClick() {\n    setShowSpinner(\"\")\n    api.getNetworkDiscover(function (res) {\n      console.log(JSON.stringify(res))\n      setShowSpinner(\"visually-hidden\")\n      setDevices(res)\n    })\n  }\n\n  function buttonBlinkClick(device) {\n    api.blinkNetworkDevice(function (res) {\n      console.log(JSON.stringify(res))\n      setTypeOfToast('primary', `Blink action sent to ${device.data.ipaddr}`)\n    }, device.data.ipaddr)\n  }\n\n\n  function buttonPingFromDiscover(device) {\n    api.getNetworkPing(function (res) {\n      console.log(res)\n      if (res.result === \"ok\") {\n        setTypeOfToast('success', `Ping to ${device.data.ipaddr} success`)\n      }\n      else {\n        setTypeOfToast('danger', `Ping to ${device.data.ipaddr} failed`)\n      }\n    }, device.data.ipaddr)\n  }\n\n  function buttonNetworkClick(device) {\n    setSelectDevice(device.data.ipaddr)\n    setShowModal(true)\n  }\n\n  const rows = devices.map(device => <tr key=\"{device.data.macaddr}\">\n    <td>{device.data.hostname}</td>\n    <td>{device.data.macaddr}</td>\n    <td>{device.data.version}</td>\n    <td>{device.data.ipaddr}</td>\n    <td> <Button onClick={() => buttonPingFromDiscover(device)} variant=\"dark\" size=\"sm\"> <FontAwesomeIcon icon={faLaptopCode} /></Button></td>\n    <td> <Button onClick={() => buttonBlinkClick(device)} variant=\"dark\" size=\"sm\"> <FontAwesomeIcon icon={faLightbulb} /></Button></td>\n    <td> <Button onClick={() => buttonNetworkClick(device)} variant=\"dark\" size=\"sm\"> <FontAwesomeIcon icon={faCog} /></Button></td>\n    <td> <Button onClick={() => buttonPingFromDiscover(device)} variant=\"dark\" size=\"sm\"> <FontAwesomeIcon icon={faDatabase} /></Button></td>\n  </tr>)\n\n  function setTypeOfToast(color, message) {\n    setToastColor(color)\n    setMessageToToast(message)\n    setShowToast(true)\n  }\n\n  const toastMessages = (message, color) => {\n    return (\n      <>\n        <ToastContainer position='bottom-start' className=\"p-3\">\n          <Toast animation={true} bg={color} onClose={() => setShowToast(false)} show={showToast} delay={3000} autohide>\n            <Toast.Header>\n              <strong className=\"me-auto\">Message</strong>\n              <small>Just now</small>\n            </Toast.Header>\n            <Toast.Body className='text-white'>{message}</Toast.Body>\n          </Toast>\n        </ToastContainer>\n      </>\n    )\n  }\n\n  return (\n    <Container>\n      {toastMessages(messageToToast, toastColor)}\n      <Navbar >\n        <Navbar.Brand>Laurel View Configuration</Navbar.Brand>\n        <Navbar.Collapse className=\"justify-content-end\">\n          <Button onClick={buttonDiscoveryClick} variant=\"dark\" title=\"Discover Devices\">Discovery</Button>\n        </Navbar.Collapse>\n      </Navbar>\n      <Table striped bordered hover>\n        <thead>\n          <tr>\n            <th>Hostname</th>\n            <th>MAC Address</th>\n            <th>Version</th>\n            <th>IP Address</th>\n            <th>Ping</th>\n            <th>Blink</th>\n            <th>Network Config</th>\n            <th>Database</th>\n          </tr>\n        </thead>\n        <tbody>\n          {rows}\n        </tbody>\n      </Table>\n      <div position='bottom-end'>\n        <Spinner position='bottom-end' className={showSpinner} animation=\"border\" role=\"status\" variant=\"dark\"> </Spinner>\n      </div>\n      <ModalNetwork\n        show={showModal}\n        onHide={() => setShowModal(false)}\n        device={selectDevice}\n      />\n    </Container>\n  )\n}\nexport default App;"]},"metadata":{},"sourceType":"module"}