{"ast":null,"code":"var _jsxFileName = \"/home/hiram/github/hiram-repos/tryouts/lv-react-ui/src/Security.js\";\nimport React, { useState } from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\n\nfunction Security(props) {\n  return /*#__PURE__*/React.createElement(Modal, Object.assign({}, props, {\n    size: \"lg\",\n    backdrop: \"static\",\n    \"aria-labelledby\": \"contained-modal-title-vcenter\",\n    centered: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Modal.Header, {\n    closeButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Title, {\n    id: \"contained-modal-title-vcenter\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 17\n    }\n  }, \"Security\")), /*#__PURE__*/React.createElement(Modal.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Alert, {\n    show: isValid,\n    variant: \"success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 21\n    }\n  }, responseString), /*#__PURE__*/React.createElement(Alert, {\n    show: isError,\n    variant: \"danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 21\n    }\n  }, responseString), /*#__PURE__*/React.createElement(Form.Group, {\n    className: \"mb-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    as: \"legend\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(Col, {\n    align: \"left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Form.Check, {\n    type: \"radio\",\n    label: \"Obtain an IP address automatically\",\n    id: \"radiodhcp\",\n    onChange: ButtonSelectRadio_Click,\n    checked: stateRadioDhcp,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(Form.Check, {\n    type: \"radio\",\n    label: \"Use the following IP address:\",\n    id: \"radiostatic\",\n    onChange: ButtonSelectRadio_Click,\n    checked: stateRadioStatic,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 29\n    }\n  }))), /*#__PURE__*/React.createElement(Form.Group, {\n    as: Row,\n    className: \"mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    align: \"right\",\n    column: true,\n    sm: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 25\n    }\n  }, \"IP Address\"), /*#__PURE__*/React.createElement(Col, {\n    sm: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    placeholder: \"IP Address\",\n    onChange: e => setField('address', e.target.value),\n    isInvalid: !!errors.address,\n    disabled: ipAddressDisabled,\n    value: form.address,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n    type: \"invalid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 29\n    }\n  }, errors.address))), /*#__PURE__*/React.createElement(Form.Label, {\n    as: \"legend\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Form.Group, {\n    as: Row,\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    align: \"right\",\n    column: true,\n    sm: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 25\n    }\n  }, \"Select Netmask\"), /*#__PURE__*/React.createElement(Col, {\n    xs: 3,\n    align: \"left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    //</Col>className=\"form-control-custom\" //makes gray the control\n    as: \"select\",\n    bsPrefix: \"form-select\",\n    value: form.netmask,\n    disabled: netmaskDisabled,\n    isInvalid: !!errors.netmask,\n    onChange: e => setField('netmask', e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"255.255.255.0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 33\n    }\n  }, \"255.255.255.0\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"255.255.0.0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 33\n    }\n  }, \"255.255.0.0\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"255.0.0.0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 33\n    }\n  }, \"255.0.0.0\")), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n    type: \"invalid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 29\n    }\n  }, errors.netmask))), /*#__PURE__*/React.createElement(Form.Group, {\n    as: Row,\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    align: \"right\",\n    column: true,\n    sm: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 25\n    }\n  }, \"Default Gateway\"), /*#__PURE__*/React.createElement(Col, {\n    sm: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    placeholder: \"Gateway\",\n    value: form.gateway,\n    disabled: gatewayDisabled,\n    isInvalid: !!errors.gateway,\n    onChange: e => setField('gateway', e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n    type: \"invalid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 29\n    }\n  }, errors.gateway))), /*#__PURE__*/React.createElement(Form.Group, {\n    as: Row,\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    align: \"right\",\n    column: true,\n    sm: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 25\n    }\n  }, \"Set DNS Servers:\")), /*#__PURE__*/React.createElement(Form.Group, {\n    as: Row,\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    align: \"right\",\n    column: true,\n    sm: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 25\n    }\n  }, \"Primary\"), /*#__PURE__*/React.createElement(Col, {\n    sm: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    placeholder: \"Primary DNS\",\n    value: form.dnsprimary,\n    disabled: dnsPrimaryDisabled,\n    isInvalid: !!errors.dnsprimary,\n    onChange: e => setField('dnsprimary', e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n    type: \"invalid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 29\n    }\n  }, errors.dnsprimary))), /*#__PURE__*/React.createElement(Form.Group, {\n    as: Row,\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    align: \"right\",\n    column: true,\n    sm: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 25\n    }\n  }, \"Secondary\"), /*#__PURE__*/React.createElement(Col, {\n    sm: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    placeholder: \"Secondary DNS\",\n    value: form.dnssecondary,\n    disabled: dnsSecondaryDisabled,\n    isInvalid: !!errors.dnssecondary,\n    onChange: e => setField('dnssecondary', e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n    type: \"invalid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 29\n    }\n  }, errors.dnssecondary))), /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: {\n      span: 10,\n      offset: 2\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Stack, {\n    direction: \"horizontal\",\n    gap: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 29\n    }\n  }))))), /*#__PURE__*/React.createElement(Modal.Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"dark\",\n    onClick: props.onHide,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 17\n    }\n  }, \"Close\")));\n}\n\nexport default Security;","map":{"version":3,"sources":["/home/hiram/github/hiram-repos/tryouts/lv-react-ui/src/Security.js"],"names":["React","useState","Modal","Button","Security","props","isValid","responseString","isError","ButtonSelectRadio_Click","stateRadioDhcp","stateRadioStatic","Row","e","setField","target","value","errors","address","ipAddressDisabled","form","netmask","netmaskDisabled","gateway","gatewayDisabled","dnsprimary","dnsPrimaryDisabled","dnssecondary","dnsSecondaryDisabled","span","offset","onHide"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\n\nimport Modal from 'react-bootstrap/Modal'\nimport Button from 'react-bootstrap/Button'\n\nfunction Security(props) {\n\n    return (\n        <Modal\n            {...props}\n            size=\"lg\"\n            backdrop=\"static\"\n            aria-labelledby=\"contained-modal-title-vcenter\"\n            centered\n        >\n            <Modal.Header closeButton>\n                <Modal.Title id=\"contained-modal-title-vcenter\">\n                    Security\n                </Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <Form>\n                    <Alert show={isValid} variant=\"success\">\n                        {responseString}\n                    </Alert>\n                    <Alert show={isError} variant=\"danger\">\n                        {responseString}\n                    </Alert>\n                    <Form.Group className=\"mb-1\">\n                        <Form.Label as=\"legend\">\n                        </Form.Label>\n                        <Col align=\"left\">\n                            <Form.Check\n                                type=\"radio\"\n                                label=\"Obtain an IP address automatically\"\n                                id=\"radiodhcp\"\n                                onChange={ButtonSelectRadio_Click}\n                                checked={stateRadioDhcp}\n                            />\n                            <Form.Check\n                                type=\"radio\"\n                                label=\"Use the following IP address:\"\n                                id=\"radiostatic\"\n                                onChange={ButtonSelectRadio_Click}\n                                checked={stateRadioStatic}\n                            />\n                        </Col>\n                    </Form.Group>\n                    <Form.Group as={Row} className=\"mb-2\">\n                        <Form.Label align=\"right\" column sm={3}>\n                            IP Address\n                        </Form.Label>\n                        <Col sm={8}>\n                            <Form.Control\n                                placeholder=\"IP Address\"\n                                onChange={e => setField('address', e.target.value)}\n                                isInvalid={!!errors.address}\n                                disabled={ipAddressDisabled}\n                                value={form.address}\n                            />\n                            <Form.Control.Feedback type='invalid'>{errors.address}</Form.Control.Feedback>\n                        </Col>\n                    </Form.Group>\n                    <Form.Label as=\"legend\">\n                    </Form.Label>\n                    <Form.Group as={Row} className=\"mb-3\">\n                        <Form.Label align=\"right\" column sm={3}>\n                            Select Netmask\n                        </Form.Label>\n                        <Col xs={3} align=\"left\">\n                            <Form.Control\n                                //</Col>className=\"form-control-custom\" //makes gray the control\n                                as=\"select\"\n                                bsPrefix={\"form-select\"}\n                                value={form.netmask}\n                                disabled={netmaskDisabled}\n                                isInvalid={!!errors.netmask}\n                                onChange={e => setField('netmask', e.target.value)}\n                            >\n                                <option value=\"255.255.255.0\">255.255.255.0</option>\n                                <option value=\"255.255.0.0\">255.255.0.0</option>\n                                <option value=\"255.0.0.0\">255.0.0.0</option>\n                            </Form.Control>\n                            <Form.Control.Feedback type='invalid'>{errors.netmask}</Form.Control.Feedback>\n                        </Col>\n                    </Form.Group>\n\n                    <Form.Group as={Row} className=\"mb-3\">\n                        <Form.Label align=\"right\" column sm={3}>\n                            Default Gateway\n                        </Form.Label>\n                        <Col sm={8}>\n                            <Form.Control\n                                placeholder=\"Gateway\"\n                                value={form.gateway}\n                                disabled={gatewayDisabled}\n                                isInvalid={!!errors.gateway}\n                                onChange={e => setField('gateway', e.target.value)}\n                            />\n                            <Form.Control.Feedback type='invalid'>{errors.gateway}</Form.Control.Feedback>\n                        </Col>\n                    </Form.Group>\n\n                    <Form.Group as={Row} className=\"mb-3\">\n                        <Form.Label align=\"right\" column sm={3}>\n                            Set DNS Servers:\n                        </Form.Label>\n                    </Form.Group>\n\n                    <Form.Group as={Row} className=\"mb-3\">\n                        <Form.Label align=\"right\" column sm={3}>\n                            Primary\n                        </Form.Label>\n                        <Col sm={8}>\n                            <Form.Control\n                                placeholder=\"Primary DNS\"\n                                value={form.dnsprimary}\n                                disabled={dnsPrimaryDisabled}\n                                isInvalid={!!errors.dnsprimary}\n                                onChange={e => setField('dnsprimary', e.target.value)}\n                            />\n                            <Form.Control.Feedback type='invalid'>{errors.dnsprimary}</Form.Control.Feedback>\n                        </Col>\n                    </Form.Group>\n\n                    <Form.Group as={Row} className=\"mb-3\">\n                        <Form.Label align=\"right\" column sm={3}>\n                            Secondary\n                        </Form.Label>\n                        <Col sm={8}>\n                            <Form.Control\n                                placeholder=\"Secondary DNS\"\n                                value={form.dnssecondary}\n                                disabled={dnsSecondaryDisabled}\n                                isInvalid={!!errors.dnssecondary}\n                                onChange={e => setField('dnssecondary', e.target.value)}\n                            />\n                            <Form.Control.Feedback type='invalid'>{errors.dnssecondary}</Form.Control.Feedback>\n                        </Col>\n                    </Form.Group>\n\n                    <Form.Group>\n                        <Col sm={{ span: 10, offset: 2 }}>\n                            <Stack direction=\"horizontal\" gap={3}>\n\n                            </Stack>\n                        </Col>\n                    </Form.Group>\n                </Form>\n            </Modal.Body>\n            <Modal.Footer>\n                <Button variant='dark' onClick={props.onHide}>Close</Button>\n            </Modal.Footer>\n        </Modal >\n    );\n}\n\nexport default Security;"]},"metadata":{},"sourceType":"module"}