{"ast":null,"code":"import{Netmask}from'netmask';//https://stackoverflow.com/questions/503052/javascript-is-ip-in-one-of-these-subnets\nimport ValidationIp from'./ValidationIp';var addToError=function addToError(result,name,message){result.errors[name]=message;result.count++;};var validateIpStructure=function validateIpStructure(result,ip,name){ip=ip||\"\";var error=ValidationIp.validateIp(ip);if(error){addToError(result,name,error);}};var checkPrefixLength=function checkPrefixLength(result,prefixLength,name){if(!Number.isInteger(prefixLength)){addToError(result,name,\"Prefix length should be a number\");return;}if([8,16,24].indexOf(prefixLength)<0){addToError(result,name,\"Invalida prefix length\");return;}};var checkNameServersLength=function checkNameServersLength(result,length,name){if([0,1,2].indexOf(length)<0){addToError(result,name,\"Invalid name servers length\");return;}};var checkGatewayIsinNetmask=function checkGatewayIsinNetmask(result,gateway,ipNetmask,name){var block=new Netmask(ipNetmask);var ip=gateway;if(!block.contains(ip)){addToError(result,name,\"Invalid gateway segment\");return;}};var validateNetConfig=function validateNetConfig(input){var result={count:0,errors:{},input:input};switch(input.method){case\"dhcp\":break;case\"static\":validateIpStructure(result,input.address,\"address\");checkPrefixLength(result,input.prefix_length,\"prefix_length\");validateIpStructure(result,input.gateway,\"gateway\");if(result.count===0){checkGatewayIsinNetmask(result,input.gateway,\"\".concat(input.address,\"/\").concat(input.prefix_length),\"gateway\");}checkNameServersLength(result,input.name_servers.length,\"nameservers_length\");if(input.name_servers.length>0){validateIpStructure(result,input.name_servers[0],\"dnsprimary\");}if(input.name_servers.length>1){validateIpStructure(result,input.name_servers[1],\"dnssecondary\");}break;default:addToError(result,\"method\",\"invalid method\");break;}return result;};var exports={validateIpStructure:validateIpStructure,validateNetConfig:validateNetConfig};export default exports;","map":{"version":3,"sources":["/home/hiram/github/hiram-repos/tryouts/lv-react-ui/src/Validation.js"],"names":["Netmask","ValidationIp","addToError","result","name","message","errors","count","validateIpStructure","ip","error","validateIp","checkPrefixLength","prefixLength","Number","isInteger","indexOf","checkNameServersLength","length","checkGatewayIsinNetmask","gateway","ipNetmask","block","contains","validateNetConfig","input","method","address","prefix_length","name_servers","exports"],"mappings":"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","sourcesContent":["import { Netmask } from 'netmask' //https://stackoverflow.com/questions/503052/javascript-is-ip-in-one-of-these-subnets\nimport ValidationIp from './ValidationIp'\n\nconst addToError = function (result, name, message) {\n    result.errors[name] = message\n    result.count++\n}\n\nconst validateIpStructure = function (result, ip, name) {\n    ip = ip || \"\"\n    let error = ValidationIp.validateIp(ip)\n    if (error) {\n        addToError(result, name, error)\n    }\n}\n\nconst checkPrefixLength = function (result, prefixLength, name) {\n    if (!Number.isInteger(prefixLength)) {\n        addToError(result, name, \"Prefix length should be a number\")\n        return\n    }\n    if ([8, 16, 24].indexOf(prefixLength) < 0) {\n        addToError(result, name, \"Invalida prefix length\")\n        return\n    }\n}\n\nconst checkNameServersLength = function (result, length, name) {\n    if ([0, 1, 2].indexOf(length) < 0) {\n        addToError(result, name, \"Invalid name servers length\")\n        return\n    }\n}\n\nconst checkGatewayIsinNetmask = function (result, gateway, ipNetmask, name) {\n    const block = new Netmask(ipNetmask)\n    const ip = gateway\n    if (!block.contains(ip)) {\n        addToError(result, name, \"Invalid gateway segment\")\n        return\n    }\n}\n\nconst validateNetConfig = function (input) {\n    const result = { count: 0, errors: {}, input }\n    switch (input.method) {\n        case \"dhcp\":\n            break\n        case \"static\":\n            validateIpStructure(result, input.address, \"address\")\n            checkPrefixLength(result, input.prefix_length, \"prefix_length\")\n            validateIpStructure(result, input.gateway, \"gateway\")\n            if (result.count === 0) {\n                checkGatewayIsinNetmask(result, input.gateway, `${input.address}/${input.prefix_length}`, \"gateway\")\n            }\n            checkNameServersLength(result, input.name_servers.length, \"nameservers_length\")\n            if (input.name_servers.length > 0) {\n                validateIpStructure(result, input.name_servers[0], \"dnsprimary\")\n            }\n            if (input.name_servers.length > 1) {\n                validateIpStructure(result, input.name_servers[1], \"dnssecondary\")\n            }\n            break\n        default:\n            addToError(result, \"method\", \"invalid method\")\n            break\n    }\n    return result\n}\n\nconst exports = {\n    validateIpStructure,\n    validateNetConfig,\n}\n\nexport default exports"]},"metadata":{},"sourceType":"module"}