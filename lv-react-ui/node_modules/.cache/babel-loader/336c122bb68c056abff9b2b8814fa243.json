{"ast":null,"code":"var _jsxFileName = \"/home/hiram/github/hiram-repos/tryouts/lv-react-ui/src/Utils.js\";\nimport { useState } from 'react';\nimport './App.css';\nimport api from \"./api\";\nimport Button from 'react-bootstrap/Button';\nimport Table from 'react-bootstrap/Table';\nimport React from \"react\";\n\nfunction Utils() {\n  const [stateDataToTable, setStateDataToTable] = React.useState(false);\n  const devices = [];\n\n  function buttonDiscoveryClick() {\n    api.getNetworkDiscover(function (res) {\n      console.log(JSON.stringify(res));\n      res.forEach(deviceRes => {\n        console.log(deviceRes.data.ipaddr);\n        const device = {\n          hostname: deviceRes.data.hostname,\n          ifname: deviceRes.data.ifname,\n          macaddr: deviceRes.data.macaddr,\n          name: deviceRes.data.name,\n          nerves: deviceRes.data.nerves,\n          version: deviceRes.data.variant,\n          ipaddr: deviceRes.data.ipaddr\n        };\n        devices.push(device);\n      });\n      console.log(`Es mi array interno ${JSON.stringify(devices[0])}`);\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\",\n    onClick: buttonDiscoveryClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, \"Discovery\"), /*#__PURE__*/React.createElement(Table, {\n    responsive: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, \"Name\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, devices.map(die => /*#__PURE__*/React.createElement(\"tr\", {\n    key: die.ipaddr,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 32\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 53\n    }\n  }, die.ipaddr))))));\n}\n\nexport default Utils;","map":{"version":3,"sources":["/home/hiram/github/hiram-repos/tryouts/lv-react-ui/src/Utils.js"],"names":["useState","api","Button","Table","React","Utils","stateDataToTable","setStateDataToTable","devices","buttonDiscoveryClick","getNetworkDiscover","res","console","log","JSON","stringify","forEach","deviceRes","data","ipaddr","device","hostname","ifname","macaddr","name","nerves","version","variant","push","map","die"],"mappings":";AAAA,SAASA,QAAT,QAAyB,OAAzB;AAEA,OAAO,WAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,SAASC,KAAT,GAAiB;AAEf,QAAM,CAACC,gBAAD,EAAmBC,mBAAnB,IAA0CH,KAAK,CAACJ,QAAN,CAAe,KAAf,CAAhD;AAEA,QAAMQ,OAAO,GAAG,EAAhB;;AAEA,WAASC,oBAAT,GAAgC;AAC9BR,IAAAA,GAAG,CAACS,kBAAJ,CAAuB,UAAUC,GAAV,EAAe;AACpCC,MAAAA,OAAO,CAACC,GAAR,CAAYC,IAAI,CAACC,SAAL,CAAeJ,GAAf,CAAZ;AACAA,MAAAA,GAAG,CAACK,OAAJ,CAAYC,SAAS,IAAI;AACvBL,QAAAA,OAAO,CAACC,GAAR,CAAYI,SAAS,CAACC,IAAV,CAAeC,MAA3B;AACA,cAAMC,MAAM,GAAG;AACbC,UAAAA,QAAQ,EAAEJ,SAAS,CAACC,IAAV,CAAeG,QADZ;AAEbC,UAAAA,MAAM,EAAEL,SAAS,CAACC,IAAV,CAAeI,MAFV;AAGbC,UAAAA,OAAO,EAAEN,SAAS,CAACC,IAAV,CAAeK,OAHX;AAIbC,UAAAA,IAAI,EAAEP,SAAS,CAACC,IAAV,CAAeM,IAJR;AAKbC,UAAAA,MAAM,EAAER,SAAS,CAACC,IAAV,CAAeO,MALV;AAMbC,UAAAA,OAAO,EAAET,SAAS,CAACC,IAAV,CAAeS,OANX;AAObR,UAAAA,MAAM,EAAEF,SAAS,CAACC,IAAV,CAAeC;AAPV,SAAf;AASAX,QAAAA,OAAO,CAACoB,IAAR,CAAaR,MAAb;AACD,OAZD;AAaAR,MAAAA,OAAO,CAACC,GAAR,CAAa,uBAAsBC,IAAI,CAACC,SAAL,CAAeP,OAAO,CAAC,CAAD,CAAtB,CAA2B,EAA9D;AACD,KAhBD;AAiBD;;AAED,sBACE,uDACE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,SAAhB;AAA0B,IAAA,OAAO,EAAEC,oBAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,eAKE,oBAAC,KAAD;AAAO,IAAA,UAAU,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,CADF,CADF,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,OAAO,CAACqB,GAAR,CAAYC,GAAG,iBAAK;AAAI,IAAA,GAAG,EAAEA,GAAG,CAACX,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKW,GAAG,CAACX,MAAT,CAArB,CAApB,CADH,CAPF,CALF,CADF;AAqBD;;AAED,eAAed,KAAf","sourcesContent":["import { useState } from 'react'\n\nimport './App.css';\nimport api from \"./api\"\nimport Button from 'react-bootstrap/Button'\nimport Table from 'react-bootstrap/Table'\nimport React from \"react\"\n\nfunction Utils() {\n\n  const [stateDataToTable, setStateDataToTable] = React.useState(false)\n\n  const devices = []\n\n  function buttonDiscoveryClick() {\n    api.getNetworkDiscover(function (res) {\n      console.log(JSON.stringify(res))\n      res.forEach(deviceRes => {\n        console.log(deviceRes.data.ipaddr)\n        const device = {\n          hostname: deviceRes.data.hostname,\n          ifname: deviceRes.data.ifname,\n          macaddr: deviceRes.data.macaddr,\n          name: deviceRes.data.name,\n          nerves: deviceRes.data.nerves,\n          version: deviceRes.data.variant,\n          ipaddr: deviceRes.data.ipaddr\n        }\n        devices.push(device)\n      });\n      console.log(`Es mi array interno ${JSON.stringify(devices[0])}`)\n    })\n  }\n\n  return (\n    <>\n      <Button variant=\"primary\" onClick={buttonDiscoveryClick}>\n        Discovery\n      </Button>\n\n      <Table responsive>\n        <thead>\n          <tr>\n            <th></th>\n            <th>Name</th>\n          </tr>\n        </thead>\n        <tbody>\n          {devices.map(die => (<tr key={die.ipaddr}><td>{die.ipaddr}</td></tr>))}\n        </tbody>\n      </Table>\n\n    </>\n  )\n\n}\n\nexport default Utils;"]},"metadata":{},"sourceType":"module"}