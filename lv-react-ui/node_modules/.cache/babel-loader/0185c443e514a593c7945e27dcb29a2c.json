{"ast":null,"code":"var _jsxFileName = \"/home/hiram/github/hiram-repos/tryouts/lv-react-ui/src/Utils.js\";\nimport React, { useState } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faLightbulb } from '@fortawesome/free-solid-svg-icons';\nimport { faLaptopCode } from '@fortawesome/free-solid-svg-icons';\nimport { faDatabase } from '@fortawesome/free-solid-svg-icons';\nimport { faCog } from '@fortawesome/free-solid-svg-icons';\nimport './App.css';\nimport api from \"./api\";\nimport Container from 'react-bootstrap/Container';\nimport Button from 'react-bootstrap/Button';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Table from 'react-bootstrap/Table';\nimport Spinner from 'react-bootstrap/Spinner';\nimport Modal from 'react-bootstrap/Modal';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport Form from 'react-bootstrap/Form';\nimport Alert from 'react-bootstrap/Alert';\nimport Stack from 'react-bootstrap/Stack';\n\nfunction Utils() {\n  const [devices, setDevices] = useState([]);\n  const [modalShow, setModalShow] = React.useState(false);\n  const [showSpinner, setShowSpinner] = React.useState(\"visually-hidden\");\n\n  function buttonDiscoveryClick() {\n    setShowSpinner(\"\");\n    api.getNetworkDiscover(function (res) {\n      console.log(JSON.stringify(res));\n      setShowSpinner(\"visually-hidden\");\n      setDevices(res);\n    });\n  }\n\n  function buttonBlinkClick(device) {\n    api.blinkNetworkDevice(function (res) {\n      console.log(JSON.stringify(res));\n    }, device.data.ipaddr);\n  }\n\n  function buttonPingFromDiscover(device) {\n    console.log(`Ping to device ip ${device.data.ipaddr}`);\n    api.getNetworkPing(function (res) {\n      console.log(JSON.stringify(res));\n    }, device.data.ipaddr);\n  }\n\n  const rows = devices.map(drevice => /*#__PURE__*/React.createElement(\"tr\", {\n    key: \"d.data.macaddr\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 39\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }, drevice.data.hostname), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }, drevice.data.macaddr), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }\n  }, drevice.data.version), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, drevice.data.ipaddr), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }, \" \", /*#__PURE__*/React.createElement(Button, {\n    onClick: () => buttonPingFromDiscover(drevice),\n    variant: \"dark\",\n    size: \"sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 10\n    }\n  }, \" \", /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faLaptopCode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 92\n    }\n  }))), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }\n  }, \" \", /*#__PURE__*/React.createElement(Button, {\n    onClick: () => buttonBlinkClick(drevice),\n    variant: \"dark\",\n    size: \"sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 10\n    }\n  }, \" \", /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faLightbulb,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 86\n    }\n  }))), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }\n  }, \" \", /*#__PURE__*/React.createElement(Button, {\n    onClick: () => setModalShow(true),\n    variant: \"dark\",\n    size: \"sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 10\n    }\n  }, \" \", /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faCog,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 79\n    }\n  }))), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }\n  }, \" \", /*#__PURE__*/React.createElement(Button, {\n    onClick: () => buttonPingFromDiscover(drevice),\n    variant: \"dark\",\n    size: \"sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 10\n    }\n  }, \" \", /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faDatabase,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 92\n    }\n  })))));\n\n  function MyVerticallyCenteredModal(props) {\n    return /*#__PURE__*/React.createElement(Modal, Object.assign({}, props, {\n      size: \"lg\",\n      backdrop: \"static\",\n      \"aria-labelledby\": \"contained-modal-title-vcenter\",\n      centered: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(Modal.Header, {\n      closeButton: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Title, {\n      id: \"contained-modal-title-vcenter\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }\n    }, \"Network Config\")), /*#__PURE__*/React.createElement(Modal.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }\n    }, \"NETWORK\"), /*#__PURE__*/React.createElement(Alert, {\n      show: isValid,\n      variant: \"success\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }\n    }, responseString), /*#__PURE__*/React.createElement(Alert, {\n      show: isError,\n      variant: \"danger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }\n    }, responseString), /*#__PURE__*/React.createElement(Form.Group, {\n      as: Row,\n      className: \"mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      as: \"legend\",\n      column: true,\n      sm: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Col, {\n      sm: 3,\n      align: \"left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Form.Check, {\n      type: \"radio\",\n      label: \"Obtain an IP address automatically\",\n      id: \"radiodhcp\",\n      onChange: ButtonSelectRadio_Click,\n      checked: stateRadioDhcp,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Form.Check, {\n      type: \"radio\",\n      label: \"Use the following IP address:\",\n      id: \"radiostatic\",\n      onChange: ButtonSelectRadio_Click,\n      checked: stateRadioStatic,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }\n    }))), /*#__PURE__*/React.createElement(Form.Group, {\n      as: Row,\n      className: \"mb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      align: \"right\",\n      column: true,\n      sm: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 15\n      }\n    }, \"IP Address\"), /*#__PURE__*/React.createElement(Col, {\n      sm: 8,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Form.Control, {\n      placeholder: \"IP Address\",\n      onChange: e => setField('address', e.target.value),\n      isInvalid: !!errors.address,\n      disabled: ipAddressDisabled,\n      value: form.address,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n      type: \"invalid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }\n    }, errors.address))), /*#__PURE__*/React.createElement(Form.Group, {\n      as: Row,\n      className: \"mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      align: \"right\",\n      column: true,\n      sm: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 15\n      }\n    }, \"Select Netmask\"), /*#__PURE__*/React.createElement(Col, {\n      xs: 2,\n      align: \"left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Form.Control, {\n      //</Col>className=\"form-control-custom\" //makes gray the control\n      as: \"select\",\n      bsPrefix: \"form-select\" //shows the control like a combobox\n      ,\n      onChange: e => setField('netmask', e.target.value),\n      isInvalid: !!errors.netmask,\n      disabled: netmaskDisabled,\n      value: form.netmask,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"255.255.255.0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 19\n      }\n    }, \"255.255.255.0\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"255.255.0.0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 19\n      }\n    }, \"255.255.0.0\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"255.0.0.0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 19\n      }\n    }, \"255.0.0.0\")), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n      type: \"invalid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 17\n      }\n    }, errors.netmask))), /*#__PURE__*/React.createElement(Form.Group, {\n      as: Row,\n      className: \"mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      align: \"right\",\n      column: true,\n      sm: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 15\n      }\n    }, \"Default Gateway\"), /*#__PURE__*/React.createElement(Col, {\n      sm: 8,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Form.Control, {\n      placeholder: \"Gateway\",\n      onChange: e => setField('gateway', e.target.value),\n      isInvalid: !!errors.gateway,\n      disabled: gatewayDisabled,\n      value: form.gateway,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n      type: \"invalid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 17\n      }\n    }, errors.gateway))), /*#__PURE__*/React.createElement(Form.Group, {\n      as: Row,\n      className: \"mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      align: \"right\",\n      column: true,\n      sm: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 15\n      }\n    }, \"Set DNS Servers:\")), /*#__PURE__*/React.createElement(Form.Group, {\n      as: Row,\n      className: \"mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      align: \"right\",\n      column: true,\n      sm: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 15\n      }\n    }, \"Primary\"), /*#__PURE__*/React.createElement(Col, {\n      sm: 8,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Form.Control, {\n      placeholder: \"Primary DNS\",\n      onChange: e => setField('dnsprimary', e.target.value),\n      isInvalid: !!errors.dnsprimary,\n      disabled: dnsPrimaryDisabled,\n      value: form.dnsprimary,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n      type: \"invalid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 17\n      }\n    }, errors.dnsprimary))), /*#__PURE__*/React.createElement(Form.Group, {\n      as: Row,\n      className: \"mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      align: \"right\",\n      column: true,\n      sm: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 15\n      }\n    }, \"Secondary\"), /*#__PURE__*/React.createElement(Col, {\n      sm: 8,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Form.Control, {\n      placeholder: \"Secondary DNS\",\n      onChange: e => setField('dnssecondary', e.target.value),\n      isInvalid: !!errors.dnssecondary,\n      disabled: dnsSecondaryDisabled,\n      value: form.dnssecondary,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n      type: \"invalid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 17\n      }\n    }, errors.dnssecondary))), /*#__PURE__*/React.createElement(Form.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      sm: {\n        span: 10,\n        offset: 2\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Stack, {\n      direction: \"horizontal\",\n      gap: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: ButtonGetNetworkConfig_Click,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 19\n      }\n    }, \"Get Config\"), /*#__PURE__*/React.createElement(Button, {\n      onClick: ButtonSetNetworkConfig_Click,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 19\n      }\n    }, \"Set Config\"), /*#__PURE__*/React.createElement(Button, {\n      onClick: ButtonPing_Click,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 19\n      }\n    }, \"Ping\")))))), /*#__PURE__*/React.createElement(Modal.Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: props.onHide,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 11\n      }\n    }, \"Close\")));\n  }\n\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Navbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Navbar.Brand, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 9\n    }\n  }, \"Laurel View Configuration\"), /*#__PURE__*/React.createElement(Navbar.Collapse, {\n    className: \"justify-content-end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: buttonDiscoveryClick,\n    variant: \"dark\",\n    title: \"Discover Devices\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 11\n    }\n  }, \"Discovery\"))), /*#__PURE__*/React.createElement(Table, {\n    striped: true,\n    bordered: true,\n    hover: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 13\n    }\n  }, \"Hostname\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 13\n    }\n  }, \"MAC Address\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 13\n    }\n  }, \"Version\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 13\n    }\n  }, \"IP Address\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 13\n    }\n  }, \"Ping\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 13\n    }\n  }, \"Blink\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 13\n    }\n  }, \"Network Config\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 13\n    }\n  }, \"Database\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 9\n    }\n  }, rows)), /*#__PURE__*/React.createElement(Spinner, {\n    className: showSpinner,\n    animation: \"border\",\n    role: \"status\",\n    variant: \"dark\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 7\n    }\n  }, \" \"), /*#__PURE__*/React.createElement(MyVerticallyCenteredModal, {\n    show: modalShow,\n    onHide: () => setModalShow(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default Utils;","map":{"version":3,"sources":["/home/hiram/github/hiram-repos/tryouts/lv-react-ui/src/Utils.js"],"names":["React","useState","FontAwesomeIcon","faLightbulb","faLaptopCode","faDatabase","faCog","api","Container","Button","Navbar","Table","Spinner","Modal","Col","Row","Form","Alert","Stack","Utils","devices","setDevices","modalShow","setModalShow","showSpinner","setShowSpinner","buttonDiscoveryClick","getNetworkDiscover","res","console","log","JSON","stringify","buttonBlinkClick","device","blinkNetworkDevice","data","ipaddr","buttonPingFromDiscover","getNetworkPing","rows","map","drevice","hostname","macaddr","version","MyVerticallyCenteredModal","props","isValid","responseString","isError","ButtonSelectRadio_Click","stateRadioDhcp","stateRadioStatic","e","setField","target","value","errors","address","ipAddressDisabled","form","netmask","netmaskDisabled","gateway","gatewayDisabled","dnsprimary","dnsPrimaryDisabled","dnssecondary","dnsSecondaryDisabled","span","offset","ButtonGetNetworkConfig_Click","ButtonSetNetworkConfig_Click","ButtonPing_Click","onHide"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,WAAT,QAA4B,mCAA5B;AACA,SAASC,YAAT,QAA6B,mCAA7B;AACA,SAASC,UAAT,QAA2B,mCAA3B;AACA,SAASC,KAAT,QAAsB,mCAAtB;AAEA,OAAO,WAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AAEA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,OAAOC,OAAP,MAAoB,yBAApB;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AAEA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,OAAOC,KAAP,MAAkB,uBAAlB;;AAEA,SAASC,KAAT,GAAiB;AAEf,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBpB,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACqB,SAAD,EAAYC,YAAZ,IAA4BvB,KAAK,CAACC,QAAN,CAAe,KAAf,CAAlC;AACA,QAAM,CAACuB,WAAD,EAAcC,cAAd,IAAgCzB,KAAK,CAACC,QAAN,CAAe,iBAAf,CAAtC;;AAEA,WAASyB,oBAAT,GAAgC;AAC9BD,IAAAA,cAAc,CAAC,EAAD,CAAd;AACAlB,IAAAA,GAAG,CAACoB,kBAAJ,CAAuB,UAAUC,GAAV,EAAe;AACpCC,MAAAA,OAAO,CAACC,GAAR,CAAYC,IAAI,CAACC,SAAL,CAAeJ,GAAf,CAAZ;AACAH,MAAAA,cAAc,CAAC,iBAAD,CAAd;AACAJ,MAAAA,UAAU,CAACO,GAAD,CAAV;AACD,KAJD;AAKD;;AAED,WAASK,gBAAT,CAA0BC,MAA1B,EAAkC;AAChC3B,IAAAA,GAAG,CAAC4B,kBAAJ,CAAuB,UAAUP,GAAV,EAAe;AACpCC,MAAAA,OAAO,CAACC,GAAR,CAAYC,IAAI,CAACC,SAAL,CAAeJ,GAAf,CAAZ;AACD,KAFD,EAEGM,MAAM,CAACE,IAAP,CAAYC,MAFf;AAGD;;AAGD,WAASC,sBAAT,CAAgCJ,MAAhC,EAAwC;AACtCL,IAAAA,OAAO,CAACC,GAAR,CAAa,qBAAoBI,MAAM,CAACE,IAAP,CAAYC,MAAO,EAApD;AACA9B,IAAAA,GAAG,CAACgC,cAAJ,CAAmB,UAAUX,GAAV,EAAe;AAChCC,MAAAA,OAAO,CAACC,GAAR,CAAYC,IAAI,CAACC,SAAL,CAAeJ,GAAf,CAAZ;AACD,KAFD,EAEGM,MAAM,CAACE,IAAP,CAAYC,MAFf;AAGD;;AAED,QAAMG,IAAI,GAAGpB,OAAO,CAACqB,GAAR,CAAYC,OAAO,iBAAI;AAAI,IAAA,GAAG,EAAC,gBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAClC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,OAAO,CAACN,IAAR,CAAaO,QAAlB,CADkC,eAElC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKD,OAAO,CAACN,IAAR,CAAaQ,OAAlB,CAFkC,eAGlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKF,OAAO,CAACN,IAAR,CAAaS,OAAlB,CAHkC,eAIlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKH,OAAO,CAACN,IAAR,CAAaC,MAAlB,CAJkC,eAKlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAK,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAE,MAAMC,sBAAsB,CAACI,OAAD,CAA7C;AAAwD,IAAA,OAAO,EAAC,MAAhE;AAAuE,IAAA,IAAI,EAAC,IAA5E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAkF,oBAAC,eAAD;AAAiB,IAAA,IAAI,EAAEtC,YAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAlF,CAAL,CALkC,eAMlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAK,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAE,MAAM6B,gBAAgB,CAACS,OAAD,CAAvC;AAAkD,IAAA,OAAO,EAAC,MAA1D;AAAiE,IAAA,IAAI,EAAC,IAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAA4E,oBAAC,eAAD;AAAiB,IAAA,IAAI,EAAEvC,WAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAA5E,CAAL,CANkC,eAOlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAK,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAE,MAAMoB,YAAY,CAAC,IAAD,CAAnC;AAA2C,IAAA,OAAO,EAAC,MAAnD;AAA0D,IAAA,IAAI,EAAC,IAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAqE,oBAAC,eAAD;AAAiB,IAAA,IAAI,EAAEjB,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAArE,CAAL,CAPkC,eAQlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAK,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAE,MAAMgC,sBAAsB,CAACI,OAAD,CAA7C;AAAwD,IAAA,OAAO,EAAC,MAAhE;AAAuE,IAAA,IAAI,EAAC,IAA5E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAkF,oBAAC,eAAD;AAAiB,IAAA,IAAI,EAAErC,UAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAlF,CAAL,CARkC,CAAvB,CAAb;;AAWA,WAASyC,yBAAT,CAAmCC,KAAnC,EAA0C;AACxC,wBACE,oBAAC,KAAD,oBACMA,KADN;AAEE,MAAA,IAAI,EAAC,IAFP;AAGE,MAAA,QAAQ,EAAC,QAHX;AAIE,yBAAgB,+BAJlB;AAKE,MAAA,QAAQ,MALV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAOE,oBAAC,KAAD,CAAO,MAAP;AAAc,MAAA,WAAW,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD,CAAO,KAAP;AAAa,MAAA,EAAE,EAAC,+BAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,CAPF,eAYE,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,eAEE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAEC,OAAb;AAAsB,MAAA,OAAO,EAAC,SAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGC,cADH,CAFF,eAKE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAEC,OAAb;AAAsB,MAAA,OAAO,EAAC,QAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGD,cADH,CALF,eAQE,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,EAAE,EAAElC,GAAhB;AAAqB,MAAA,SAAS,EAAC,MAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,EAAE,EAAC,QAAf;AAAwB,MAAA,MAAM,MAA9B;AAA+B,MAAA,EAAE,EAAE,CAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAGE,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,CAAT;AAAY,MAAA,KAAK,EAAC,MAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD,CAAM,KAAN;AACE,MAAA,IAAI,EAAC,OADP;AAEE,MAAA,KAAK,EAAC,oCAFR;AAGE,MAAA,EAAE,EAAC,WAHL;AAIE,MAAA,QAAQ,EAAEoC,uBAJZ;AAKE,MAAA,OAAO,EAAEC,cALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAQE,oBAAC,IAAD,CAAM,KAAN;AACE,MAAA,IAAI,EAAC,OADP;AAEE,MAAA,KAAK,EAAC,+BAFR;AAGE,MAAA,EAAE,EAAC,aAHL;AAIE,MAAA,QAAQ,EAAED,uBAJZ;AAKE,MAAA,OAAO,EAAEE,gBALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARF,CAHF,CARF,eA6BE,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,EAAE,EAAEtC,GAAhB;AAAqB,MAAA,SAAS,EAAC,MAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,KAAK,EAAC,OAAlB;AAA0B,MAAA,MAAM,MAAhC;AAAiC,MAAA,EAAE,EAAE,CAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAIE,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD,CAAM,OAAN;AACE,MAAA,WAAW,EAAC,YADd;AAEE,MAAA,QAAQ,EAAEuC,CAAC,IAAIC,QAAQ,CAAC,SAAD,EAAYD,CAAC,CAACE,MAAF,CAASC,KAArB,CAFzB;AAGE,MAAA,SAAS,EAAE,CAAC,CAACC,MAAM,CAACC,OAHtB;AAIE,MAAA,QAAQ,EAAEC,iBAJZ;AAKE,MAAA,KAAK,EAAEC,IAAI,CAACF,OALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAQE,oBAAC,IAAD,CAAM,OAAN,CAAc,QAAd;AAAuB,MAAA,IAAI,EAAC,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAuCD,MAAM,CAACC,OAA9C,CARF,CAJF,CA7BF,eA6CE,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,EAAE,EAAE5C,GAAhB;AAAqB,MAAA,SAAS,EAAC,MAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,KAAK,EAAC,OAAlB;AAA0B,MAAA,MAAM,MAAhC;AAAiC,MAAA,EAAE,EAAE,CAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAIE,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,CAAT;AAAY,MAAA,KAAK,EAAC,MAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD,CAAM,OAAN;AACE;AACA,MAAA,EAAE,EAAC,QAFL;AAGE,MAAA,QAAQ,EAAE,aAHZ,CAG2B;AAH3B;AAIE,MAAA,QAAQ,EAAEuC,CAAC,IAAIC,QAAQ,CAAC,SAAD,EAAYD,CAAC,CAACE,MAAF,CAASC,KAArB,CAJzB;AAKE,MAAA,SAAS,EAAE,CAAC,CAACC,MAAM,CAACI,OALtB;AAME,MAAA,QAAQ,EAAEC,eANZ;AAOE,MAAA,KAAK,EAAEF,IAAI,CAACC,OAPd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBASE;AAAQ,MAAA,KAAK,EAAC,eAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBATF,eAUE;AAAQ,MAAA,KAAK,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAVF,eAWE;AAAQ,MAAA,KAAK,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAXF,CADF,eAcE,oBAAC,IAAD,CAAM,OAAN,CAAc,QAAd;AAAuB,MAAA,IAAI,EAAC,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAuCJ,MAAM,CAACI,OAA9C,CAdF,CAJF,CA7CF,eAmEE,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,EAAE,EAAE/C,GAAhB;AAAqB,MAAA,SAAS,EAAC,MAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,KAAK,EAAC,OAAlB;AAA0B,MAAA,MAAM,MAAhC;AAAiC,MAAA,EAAE,EAAE,CAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,eAIE,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD,CAAM,OAAN;AACE,MAAA,WAAW,EAAC,SADd;AAEE,MAAA,QAAQ,EAAEuC,CAAC,IAAIC,QAAQ,CAAC,SAAD,EAAYD,CAAC,CAACE,MAAF,CAASC,KAArB,CAFzB;AAGE,MAAA,SAAS,EAAE,CAAC,CAACC,MAAM,CAACM,OAHtB;AAIE,MAAA,QAAQ,EAAEC,eAJZ;AAKE,MAAA,KAAK,EAAEJ,IAAI,CAACG,OALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAQE,oBAAC,IAAD,CAAM,OAAN,CAAc,QAAd;AAAuB,MAAA,IAAI,EAAC,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAuCN,MAAM,CAACM,OAA9C,CARF,CAJF,CAnEF,eAmFE,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,EAAE,EAAEjD,GAAhB;AAAqB,MAAA,SAAS,EAAC,MAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,KAAK,EAAC,OAAlB;AAA0B,MAAA,MAAM,MAAhC;AAAiC,MAAA,EAAE,EAAE,CAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,CAnFF,eAyFE,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,EAAE,EAAEA,GAAhB;AAAqB,MAAA,SAAS,EAAC,MAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,KAAK,EAAC,OAAlB;AAA0B,MAAA,MAAM,MAAhC;AAAiC,MAAA,EAAE,EAAE,CAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,eAIE,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD,CAAM,OAAN;AACE,MAAA,WAAW,EAAC,aADd;AAEE,MAAA,QAAQ,EAAEuC,CAAC,IAAIC,QAAQ,CAAC,YAAD,EAAeD,CAAC,CAACE,MAAF,CAASC,KAAxB,CAFzB;AAGE,MAAA,SAAS,EAAE,CAAC,CAACC,MAAM,CAACQ,UAHtB;AAIE,MAAA,QAAQ,EAAEC,kBAJZ;AAKE,MAAA,KAAK,EAAEN,IAAI,CAACK,UALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAQE,oBAAC,IAAD,CAAM,OAAN,CAAc,QAAd;AAAuB,MAAA,IAAI,EAAC,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAuCR,MAAM,CAACQ,UAA9C,CARF,CAJF,CAzFF,eAyGE,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,EAAE,EAAEnD,GAAhB;AAAqB,MAAA,SAAS,EAAC,MAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,KAAK,EAAC,OAAlB;AAA0B,MAAA,MAAM,MAAhC;AAAiC,MAAA,EAAE,EAAE,CAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,eAIE,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD,CAAM,OAAN;AACE,MAAA,WAAW,EAAC,eADd;AAEE,MAAA,QAAQ,EAAEuC,CAAC,IAAIC,QAAQ,CAAC,cAAD,EAAiBD,CAAC,CAACE,MAAF,CAASC,KAA1B,CAFzB;AAGE,MAAA,SAAS,EAAE,CAAC,CAACC,MAAM,CAACU,YAHtB;AAIE,MAAA,QAAQ,EAAEC,oBAJZ;AAKE,MAAA,KAAK,EAAER,IAAI,CAACO,YALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAQE,oBAAC,IAAD,CAAM,OAAN,CAAc,QAAd;AAAuB,MAAA,IAAI,EAAC,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAuCV,MAAM,CAACU,YAA9C,CARF,CAJF,CAzGF,eAyHE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE;AAAEE,QAAAA,IAAI,EAAE,EAAR;AAAYC,QAAAA,MAAM,EAAE;AAApB,OAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AAAO,MAAA,SAAS,EAAC,YAAjB;AAA8B,MAAA,GAAG,EAAE,CAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAEC,4BAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAEC,4BAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF,eAGE,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAEC,gBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,CADF,CADF,CAzHF,CAFF,CAZF,eAkJE,oBAAC,KAAD,CAAO,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAE3B,KAAK,CAAC4B,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,CAlJF,CADF;AAwJD;;AAED,sBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD,CAAQ,KAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCADF,eAEE,oBAAC,MAAD,CAAQ,QAAR;AAAiB,IAAA,SAAS,EAAC,qBAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEjD,oBAAjB;AAAuC,IAAA,OAAO,EAAC,MAA/C;AAAsD,IAAA,KAAK,EAAC,kBAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,CAFF,CAFF,eAQE,oBAAC,KAAD;AAAO,IAAA,OAAO,MAAd;AAAe,IAAA,QAAQ,MAAvB;AAAwB,IAAA,KAAK,MAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aANF,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAPF,eAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBARF,CADF,CADF,eAaE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGc,IADH,CAbF,CARF,eAyBE,oBAAC,OAAD;AAAS,IAAA,SAAS,EAAEhB,WAApB;AAAiC,IAAA,SAAS,EAAC,QAA3C;AAAoD,IAAA,IAAI,EAAC,QAAzD;AAAkE,IAAA,OAAO,EAAC,MAA1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAzBF,eA0BE,oBAAC,yBAAD;AACE,IAAA,IAAI,EAAEF,SADR;AAEE,IAAA,MAAM,EAAE,MAAMC,YAAY,CAAC,KAAD,CAF5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA1BF,CADF;AAiCD;;AAED,eAAeJ,KAAf","sourcesContent":["import React, { useState } from 'react'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faLightbulb } from '@fortawesome/free-solid-svg-icons'\nimport { faLaptopCode } from '@fortawesome/free-solid-svg-icons'\nimport { faDatabase } from '@fortawesome/free-solid-svg-icons'\nimport { faCog } from '@fortawesome/free-solid-svg-icons'\n\nimport './App.css';\nimport api from \"./api\"\n\nimport Container from 'react-bootstrap/Container'\nimport Button from 'react-bootstrap/Button'\nimport Navbar from 'react-bootstrap/Navbar'\nimport Table from 'react-bootstrap/Table'\nimport Spinner from 'react-bootstrap/Spinner'\nimport Modal from 'react-bootstrap/Modal'\n\nimport Col from 'react-bootstrap/Col'\nimport Row from 'react-bootstrap/Row'\nimport Form from 'react-bootstrap/Form'\nimport Alert from 'react-bootstrap/Alert'\nimport Stack from 'react-bootstrap/Stack'\n\nfunction Utils() {\n\n  const [devices, setDevices] = useState([])\n  const [modalShow, setModalShow] = React.useState(false);\n  const [showSpinner, setShowSpinner] = React.useState(\"visually-hidden\")\n\n  function buttonDiscoveryClick() {\n    setShowSpinner(\"\")\n    api.getNetworkDiscover(function (res) {\n      console.log(JSON.stringify(res))\n      setShowSpinner(\"visually-hidden\")\n      setDevices(res)\n    })\n  }\n\n  function buttonBlinkClick(device) {\n    api.blinkNetworkDevice(function (res) {\n      console.log(JSON.stringify(res))\n    }, device.data.ipaddr)\n  }\n\n\n  function buttonPingFromDiscover(device) {\n    console.log(`Ping to device ip ${device.data.ipaddr}`)\n    api.getNetworkPing(function (res) {\n      console.log(JSON.stringify(res))\n    }, device.data.ipaddr)\n  }\n\n  const rows = devices.map(drevice => <tr key=\"d.data.macaddr\">\n    <td>{drevice.data.hostname}</td>\n    <td>{drevice.data.macaddr}</td>\n    <td>{drevice.data.version}</td>\n    <td>{drevice.data.ipaddr}</td>\n    <td> <Button onClick={() => buttonPingFromDiscover(drevice)} variant=\"dark\" size=\"sm\"> <FontAwesomeIcon icon={faLaptopCode} /></Button></td>\n    <td> <Button onClick={() => buttonBlinkClick(drevice)} variant=\"dark\" size=\"sm\"> <FontAwesomeIcon icon={faLightbulb} /></Button></td>\n    <td> <Button onClick={() => setModalShow(true)} variant=\"dark\" size=\"sm\"> <FontAwesomeIcon icon={faCog} /></Button></td>\n    <td> <Button onClick={() => buttonPingFromDiscover(drevice)} variant=\"dark\" size=\"sm\"> <FontAwesomeIcon icon={faDatabase} /></Button></td>\n  </tr>)\n\n  function MyVerticallyCenteredModal(props) {\n    return (\n      <Modal\n        {...props}\n        size=\"lg\"\n        backdrop=\"static\"\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        centered\n      >\n        <Modal.Header closeButton>\n          <Modal.Title id=\"contained-modal-title-vcenter\">\n            Network Config\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n\n          <Form>\n            <h1>NETWORK</h1>\n            <Alert show={isValid} variant=\"success\">\n              {responseString}\n            </Alert>\n            <Alert show={isError} variant=\"danger\">\n              {responseString}\n            </Alert>\n            <Form.Group as={Row} className=\"mb-3\">\n              <Form.Label as=\"legend\" column sm={2}>\n              </Form.Label>\n              <Col sm={3} align=\"left\">\n                <Form.Check\n                  type=\"radio\"\n                  label=\"Obtain an IP address automatically\"\n                  id=\"radiodhcp\"\n                  onChange={ButtonSelectRadio_Click}\n                  checked={stateRadioDhcp}\n                />\n                <Form.Check\n                  type=\"radio\"\n                  label=\"Use the following IP address:\"\n                  id=\"radiostatic\"\n                  onChange={ButtonSelectRadio_Click}\n                  checked={stateRadioStatic}\n                />\n              </Col>\n            </Form.Group>\n\n            <Form.Group as={Row} className=\"mb-2\">\n              <Form.Label align=\"right\" column sm={2}>\n                IP Address\n              </Form.Label>\n              <Col sm={8}>\n                <Form.Control\n                  placeholder=\"IP Address\"\n                  onChange={e => setField('address', e.target.value)}\n                  isInvalid={!!errors.address}\n                  disabled={ipAddressDisabled}\n                  value={form.address}\n                />\n                <Form.Control.Feedback type='invalid'>{errors.address}</Form.Control.Feedback>\n              </Col>\n            </Form.Group>\n\n            <Form.Group as={Row} className=\"mb-3\">\n              <Form.Label align=\"right\" column sm={2}>\n                Select Netmask\n              </Form.Label>\n              <Col xs={2} align=\"left\">\n                <Form.Control\n                  //</Col>className=\"form-control-custom\" //makes gray the control\n                  as=\"select\"\n                  bsPrefix={\"form-select\"} //shows the control like a combobox\n                  onChange={e => setField('netmask', e.target.value)}\n                  isInvalid={!!errors.netmask}\n                  disabled={netmaskDisabled}\n                  value={form.netmask}\n                >\n                  <option value=\"255.255.255.0\">255.255.255.0</option>\n                  <option value=\"255.255.0.0\">255.255.0.0</option>\n                  <option value=\"255.0.0.0\">255.0.0.0</option>\n                </Form.Control>\n                <Form.Control.Feedback type='invalid'>{errors.netmask}</Form.Control.Feedback>\n              </Col>\n            </Form.Group>\n\n            <Form.Group as={Row} className=\"mb-3\">\n              <Form.Label align=\"right\" column sm={2}>\n                Default Gateway\n              </Form.Label>\n              <Col sm={8}>\n                <Form.Control\n                  placeholder=\"Gateway\"\n                  onChange={e => setField('gateway', e.target.value)}\n                  isInvalid={!!errors.gateway}\n                  disabled={gatewayDisabled}\n                  value={form.gateway}\n                />\n                <Form.Control.Feedback type='invalid'>{errors.gateway}</Form.Control.Feedback>\n              </Col>\n            </Form.Group>\n\n            <Form.Group as={Row} className=\"mb-3\">\n              <Form.Label align=\"right\" column sm={2}>\n                Set DNS Servers:\n              </Form.Label>\n            </Form.Group>\n\n            <Form.Group as={Row} className=\"mb-3\">\n              <Form.Label align=\"right\" column sm={2}>\n                Primary\n              </Form.Label>\n              <Col sm={8}>\n                <Form.Control\n                  placeholder=\"Primary DNS\"\n                  onChange={e => setField('dnsprimary', e.target.value)}\n                  isInvalid={!!errors.dnsprimary}\n                  disabled={dnsPrimaryDisabled}\n                  value={form.dnsprimary}\n                />\n                <Form.Control.Feedback type='invalid'>{errors.dnsprimary}</Form.Control.Feedback>\n              </Col>\n            </Form.Group>\n\n            <Form.Group as={Row} className=\"mb-3\">\n              <Form.Label align=\"right\" column sm={2}>\n                Secondary\n              </Form.Label>\n              <Col sm={8}>\n                <Form.Control\n                  placeholder=\"Secondary DNS\"\n                  onChange={e => setField('dnssecondary', e.target.value)}\n                  isInvalid={!!errors.dnssecondary}\n                  disabled={dnsSecondaryDisabled}\n                  value={form.dnssecondary}\n                />\n                <Form.Control.Feedback type='invalid'>{errors.dnssecondary}</Form.Control.Feedback>\n              </Col>\n            </Form.Group>\n\n            <Form.Group>\n              <Col sm={{ span: 10, offset: 2 }}>\n                <Stack direction=\"horizontal\" gap={3}>\n                  <Button onClick={ButtonGetNetworkConfig_Click}>Get Config</Button>\n                  <Button onClick={ButtonSetNetworkConfig_Click}>Set Config</Button>\n                  <Button onClick={ButtonPing_Click}>Ping</Button>\n                </Stack>\n              </Col>\n            </Form.Group>\n          </Form>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button onClick={props.onHide}>Close</Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n\n  return (\n    <Container>\n\n      <Navbar >\n        <Navbar.Brand>Laurel View Configuration</Navbar.Brand>\n        <Navbar.Collapse className=\"justify-content-end\">\n          <Button onClick={buttonDiscoveryClick} variant=\"dark\" title=\"Discover Devices\">Discovery</Button>\n        </Navbar.Collapse>\n      </Navbar>\n      <Table striped bordered hover>\n        <thead>\n          <tr>\n            <th>Hostname</th>\n            <th>MAC Address</th>\n            <th>Version</th>\n            <th>IP Address</th>\n            <th>Ping</th>\n            <th>Blink</th>\n            <th>Network Config</th>\n            <th>Database</th>\n          </tr>\n        </thead>\n        <tbody>\n          {rows}\n        </tbody>\n      </Table>\n      <Spinner className={showSpinner} animation=\"border\" role=\"status\" variant=\"dark\" > </Spinner>\n      <MyVerticallyCenteredModal\n        show={modalShow}\n        onHide={() => setModalShow(false)}\n      />\n    </Container>\n  )\n}\n\nexport default Utils;"]},"metadata":{},"sourceType":"module"}