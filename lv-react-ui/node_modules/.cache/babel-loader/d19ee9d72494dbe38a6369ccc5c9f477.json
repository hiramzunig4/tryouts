{"ast":null,"code":"//Discover\nfunction getNetworkDiscover(cb) {\n  fetch(\"discovery/2\").then(res => res.json()).then(json => cb(json)).catch(err => cb(err));\n} //Network\n\n\nfunction setNetworkConfigDhcp(config, cb, ip, username, pass) {\n  fetch(`http://${ip}:31680/net/setup/eth0`, {\n    method: \"post\",\n    body: JSON.stringify(config),\n    headers: {\n      \"Content-Type\": \"application/json\",\n      'Authorization': 'Basic ' + Buffer.from(`${username}:${pass}`).toString('base64')\n    }\n  }).then(res => res.json()).then(json => cb(json)).catch(err => cb(err));\n}\n\nfunction setNetworkConfigStatic(config, cb, ip, username, pass) {\n  fetch(`http://${ip}:31680/net/setup/eth0`, {\n    method: \"post\",\n    body: JSON.stringify(config),\n    headers: {\n      \"Content-Type\": \"application/json\",\n      'Authorization': 'Basic ' + Buffer.from(`${username}:${pass}`).toString('base64')\n    }\n  }).then(res => res.json()).then(json => cb(json)).catch(err => cb(err));\n}\n\nfunction getNetworkConfig(cb, ip, username, pass) {\n  console.log(`Esto llega ${ip} ${username} ${pass}`);\n  fetch(`http://${ip}:31680/net/state/eth0`, {\n    headers: {\n      'Authorization': 'Basic ' + Buffer.from(`${username}:${pass}`).toString('base64')\n    }\n  }).then(res => res.json()).then(json => cb(json)).catch(err => cb(err));\n}\n\nfunction getNetworkPing(cb, ip, username, pass) {\n  fetch(`http://${ip}:31680/ping`, {\n    headers: {\n      'Authorization': 'Basic ' + Buffer.from(`${username}:${pass}`).toString('base64')\n    }\n  }).then(res => res.json()).then(json => cb(json)).catch(err => cb(err));\n}\n\nfunction blinkNetworkDevice(cb, ip) {\n  fetch(`blink/${ip}`).then(res => res.json()).then(json => cb(json)).catch(err => cb(err));\n} //Security\n\n\nfunction setNewPass(cb, ip, username, pass, newPass) {\n  console.log(\"Si entre a set new pass\");\n  const data = new FormData();\n  data.append(\"pass\", newPass);\n  fetch(`http://${ip}:31680/pass/set`, {\n    method: \"post\",\n    body: data,\n    headers: {\n      'Authorization': 'Basic ' + Buffer.from(`${username}:${pass}`).toString('base64')\n    }\n  }).then(res => res.json()).then(json => cb(json)).catch(err => cb(err));\n}\n\nfunction setDisablePass(cb, ip, username, pass) {\n  console.log(\"Si entre a set new pass\");\n  fetch(`http://${ip}:31680/pass/disable`, {\n    headers: {\n      'Authorization': 'Basic ' + Buffer.from(`${username}:${pass}`).toString('base64')\n    }\n  }).then(res => res.json()).then(json => cb(json)).catch(err => cb(err));\n}\n\nfunction setResetPass(cb, ip, username, pass) {\n  fetch(`http://${ip}:31680/pass/reset`, {\n    headers: {\n      'Authorization': 'Basic ' + Buffer.from(`${username}:${pass}`).toString('base64')\n    }\n  }).then(res => res.json()).then(json => cb(json)).catch(err => cb(err));\n} //Database\n\n\nfunction uploadFile(cb, ip, username, pass, file) {\n  console.log(`${JSON.stringify(file[0])}`);\n  var data = new FormData();\n  data.append('file', file);\n  fetch(`http://${ip}:31680/upload?path=/data/test.jpg`, {\n    method: \"post\",\n    body: data,\n    headers: {\n      'Authorization': 'Basic ' + Buffer.from(`${username}:${pass}`).toString('base64')\n    }\n  }).then(res => res.json()).then(json => cb(json)).catch(err => cb(err));\n}\n\nfunction downloadFile(cb, ip, username, pass) {\n  console.log(\"Si entre a download data\");\n  fetch(`http://${ip}:31680/data/lvnbe.db3 --output /home/hiram/test.db3`, {\n    headers: {\n      'Authorization': 'Basic ' + Buffer.from(`${username}:${pass}`).toString('base64')\n    }\n  }).then(res => res.json()).then(json => cb(json)).catch(err => cb(err));\n}\n\nconst exports = {\n  setNetworkConfigDhcp,\n  getNetworkConfig,\n  getNetworkPing,\n  setNetworkConfigStatic,\n  getNetworkDiscover,\n  blinkNetworkDevice,\n  setNewPass,\n  setDisablePass,\n  setResetPass,\n  uploadFile,\n  downloadFile\n};\nexport default exports;","map":{"version":3,"sources":["/home/hiram/github/hiram-repos/tryouts/lv-react-ui/src/api.js"],"names":["getNetworkDiscover","cb","fetch","then","res","json","catch","err","setNetworkConfigDhcp","config","ip","username","pass","method","body","JSON","stringify","headers","Buffer","from","toString","setNetworkConfigStatic","getNetworkConfig","console","log","getNetworkPing","blinkNetworkDevice","setNewPass","newPass","data","FormData","append","setDisablePass","setResetPass","uploadFile","file","downloadFile","exports"],"mappings":"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","sourcesContent":["//Discover\nfunction getNetworkDiscover(cb) {\n  fetch(\"discovery/2\")\n    .then(res => res.json())\n    .then(json => cb(json))\n    .catch(err => cb(err))\n}\n\n//Network\nfunction setNetworkConfigDhcp(config, cb, ip, username, pass) {\n  fetch(`http://${ip}:31680/net/setup/eth0`, {\n    method: \"post\",\n    body: JSON.stringify(config),\n    headers: {\n      \"Content-Type\": \"application/json\",\n      'Authorization': 'Basic ' + Buffer.from(`${username}:${pass}`).toString('base64')\n    }\n  })\n    .then(res => res.json())\n    .then(json => cb(json))\n    .catch(err => cb(err))\n}\n\nfunction setNetworkConfigStatic(config, cb, ip, username, pass) {\n  fetch(`http://${ip}:31680/net/setup/eth0`, {\n    method: \"post\",\n    body: JSON.stringify(config),\n    headers: {\n      \"Content-Type\": \"application/json\",\n      'Authorization': 'Basic ' + Buffer.from(`${username}:${pass}`).toString('base64')\n    }\n  })\n    .then(res => res.json())\n    .then(json => cb(json))\n    .catch(err => cb(err))\n}\n\nfunction getNetworkConfig(cb, ip, username, pass) {\n  console.log(`Esto llega ${ip} ${username} ${pass}`)\n  fetch(`http://${ip}:31680/net/state/eth0`, {\n    headers: { 'Authorization': 'Basic ' + Buffer.from(`${username}:${pass}`).toString('base64') }\n  })\n    .then(res => res.json())\n    .then(json => cb(json))\n    .catch(err => cb(err))\n}\n\nfunction getNetworkPing(cb, ip, username, pass) {\n  fetch(`http://${ip}:31680/ping`, {\n    headers: { 'Authorization': 'Basic ' + Buffer.from(`${username}:${pass}`).toString('base64') }\n  })\n    .then(res => res.json())\n    .then(json => cb(json))\n    .catch(err => cb(err))\n}\n\nfunction blinkNetworkDevice(cb, ip) {\n  fetch(`blink/${ip}`)\n    .then(res => res.json())\n    .then(json => cb(json))\n    .catch(err => cb(err))\n}\n\n//Security\nfunction setNewPass(cb, ip, username, pass, newPass) {\n  console.log(\"Si entre a set new pass\")\n  const data = new FormData()\n  data.append(\"pass\", newPass)\n  fetch(`http://${ip}:31680/pass/set`, {\n    method: \"post\",\n    body: data,\n    headers: { 'Authorization': 'Basic ' + Buffer.from(`${username}:${pass}`).toString('base64') }\n  })\n    .then(res => res.json())\n    .then(json => cb(json))\n    .catch(err => cb(err))\n}\n\nfunction setDisablePass(cb, ip, username, pass) {\n  console.log(\"Si entre a set new pass\")\n  fetch(`http://${ip}:31680/pass/disable`, {\n    headers: { 'Authorization': 'Basic ' + Buffer.from(`${username}:${pass}`).toString('base64') }\n  })\n    .then(res => res.json())\n    .then(json => cb(json))\n    .catch(err => cb(err))\n}\n\nfunction setResetPass(cb, ip, username, pass) {\n  fetch(`http://${ip}:31680/pass/reset`, {\n    headers: { 'Authorization': 'Basic ' + Buffer.from(`${username}:${pass}`).toString('base64') }\n  })\n    .then(res => res.json())\n    .then(json => cb(json))\n    .catch(err => cb(err))\n}\n\n//Database\nfunction uploadFile(cb, ip, username, pass, file) {\n  console.log(`${JSON.stringify(file[0])}`)\n  var data = new FormData()\n  data.append('file', file)\n  fetch(`http://${ip}:31680/upload?path=/data/test.jpg`, {\n    method: \"post\",\n    body: data,\n    headers: { 'Authorization': 'Basic ' + Buffer.from(`${username}:${pass}`).toString('base64') }\n  })\n    .then(res => res.json())\n    .then(json => cb(json))\n    .catch(err => cb(err))\n}\n\nfunction downloadFile(cb, ip, username, pass) {\n  console.log(\"Si entre a download data\")\n  fetch(`http://${ip}:31680/data/lvnbe.db3 --output /home/hiram/test.db3`, {\n    headers: { 'Authorization': 'Basic ' + Buffer.from(`${username}:${pass}`).toString('base64') }\n  })\n    .then(res => res.json())\n    .then(json => cb(json))\n    .catch(err => cb(err))\n}\n\nconst exports = {\n  setNetworkConfigDhcp,\n  getNetworkConfig,\n  getNetworkPing,\n  setNetworkConfigStatic,\n  getNetworkDiscover,\n  blinkNetworkDevice,\n  setNewPass,\n  setDisablePass,\n  setResetPass,\n  uploadFile,\n  downloadFile,\n}\n\nexport default exports"]},"metadata":{},"sourceType":"module"}