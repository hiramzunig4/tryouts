{"ast":null,"code":"var _jsxFileName = \"/home/hiram/github/hiram-repos/tryouts/lv-react-ui/src/ModalNetwork.js\";\nimport React, { useState } from 'react';\nimport api from './api';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport Form from 'react-bootstrap/Form';\nimport Alert from 'react-bootstrap/Alert';\nimport Modal from 'react-bootstrap/Modal';\nimport Stack from 'react-bootstrap/Stack';\nimport Button from 'react-bootstrap/Button';\n\nfunction ModalNetwork(props) {\n  useEffect(() => {\n    //should not override validation focus\n    if (nameInput.current != null) {\n      nameInput.current.focus();\n    }\n\n    const json = props.item.json || \"{}\";\n    const args = JSON.parse(json);\n    setName(props.item.name || \"\");\n    setHost(args.host || \"\");\n    setPort(args.port || \"0\");\n    setSlave(args.slave || \"1\"); //red flicker on disconnection while editing\n\n    setValidated(false);\n  }, [props]); //radio selector\n\n  const [radioSelected, setRadioSelected] = React.useState(\"radiodhcp\");\n  const [stateRadioDhcp, setStateRadioDhcp] = React.useState(true);\n  const [stateRadioStatic, setStateRadioStatic] = React.useState(false); //disable componets\n\n  const [ipAddressDisabled, setIpAddressdDisabled] = React.useState(true);\n  const [gatewayDisabled, setGatewayDisabled] = React.useState(true);\n  const [netmaskDisabled, setNetmaskDisabled] = React.useState(true);\n  const [dnsPrimaryDisabled, setDnsPrimaryDisabled] = React.useState(true);\n  const [dnsSecondaryDisabled, setDnsSecondaryDisabled] = React.useState(true); //Errors\n\n  const [form, setForm] = useState({\n    address: \"\",\n    gateway: \"\",\n    netmask: \"255.255.255.0\",\n    dnsprimary: \"\",\n    dnssecondary: \"\"\n  });\n  const [errors, setErrors] = useState({\n    address: \"\",\n    gateway: \"\",\n    netmask: \"\",\n    dnsprimary: \"\",\n    dnssecondary: \"\"\n  }); //Response from yeico appliance\n\n  const [responseString, setResponseString] = React.useState(\"\"); //Alerts\n\n  const [isValid, setIsValid] = useState(false);\n  const [isError, setIsError] = useState(false);\n\n  function ButtonSelectRadio_Click(event) {\n    if (event.target.id === \"radiodhcp\") {\n      setStateRadioDhcp(true);\n      setStateRadioStatic(false);\n      setDisabledComponents(true);\n    } else {\n      setStateRadioDhcp(false);\n      setStateRadioStatic(true);\n      setDisabledComponents(false);\n    }\n\n    setRadioSelected(event.target.id);\n    console.log(radioSelected);\n  }\n\n  function setDisabledComponents(state) {\n    setIpAddressdDisabled(state);\n    setGatewayDisabled(state);\n    setNetmaskDisabled(state);\n    setDnsPrimaryDisabled(state);\n    setDnsSecondaryDisabled(state);\n  }\n\n  function parseIP(key) {\n    var addresswithpoints = `${JSON.stringify(key)}`.replace(/,/g, \".\");\n    return addresswithpoints.replace(/[[\\]']/g, \"\");\n  }\n\n  function ButtonGetNetworkConfig_Click() {\n    console.log(\"clicked in get config\");\n    console.log(`Ping to ${props.device}`);\n    api.getNetworkConfig(function (res) {\n      console.log(res);\n\n      if (res.result === \"ok\") {\n        if (res.message.config.ipv4.method === \"dhcp\") {\n          setRadioSelected(\"radiodhcp\");\n          form.address = \"\";\n          form.gateway = \"\";\n          form.dnsprimary = \"\";\n          form.dnssecondary = \"\";\n          setStateRadioDhcp(true);\n          setStateRadioStatic(false);\n          setDisabledComponents(true);\n        } else //is static\n          {\n            setRadioSelected(\"radiostatic\");\n            setStateRadioDhcp(false);\n            setStateRadioStatic(true);\n            setDisabledComponents(false);\n            var addressIp = \"\";\n\n            switch (res.message.config.ipv4.prefix_length) {\n              case 8:\n                addressIp = \"255.0.0.0\";\n                break;\n\n              case 16:\n                addressIp = \"255.255.0.0\";\n                break;\n\n              default:\n                addressIp = \"255.255.255.0\";\n            }\n\n            form.address = parseIP(res.message.config.ipv4.address);\n            form.gateway = parseIP(res.message.config.ipv4.gateway);\n            form.netmask = addressIp;\n\n            if (res.message.config.ipv4.name_servers.length === 0) {\n              form.dnsprimary = \"\";\n              form.dnssecondary = \"\";\n            }\n\n            if (res.message.config.ipv4.name_servers.length === 1) {\n              form.dnsprimary = parseIP(res.message.config.ipv4.name_servers[0]);\n              form.dnssecondary = \"\";\n            }\n\n            if (res.message.config.ipv4.name_servers.length === 2) {\n              form.dnsprimary = parseIP(res.message.config.ipv4.name_servers[0]);\n              form.dnssecondary = parseIP(res.message.config.ipv4.name_servers[1]);\n            }\n          }\n\n        setResponseString(`Get Config Success`);\n        setErrors({\n          address: \"\",\n          gateway: \"\",\n          netmask: \"\",\n          dnsprimary: \"\",\n          dnssecondary: \"\"\n        });\n        setIsValid(true);\n        setTimeout(() => {\n          setIsValid(false);\n        }, 3000);\n      } else {\n        //is error in the response\n        setResponseString(`Get Config Error`);\n        setErrors({\n          address: \"\",\n          gateway: \"\",\n          netmask: \"\",\n          dnsprimary: \"\",\n          dnssecondary: \"\"\n        });\n        setIsError(true);\n        setTimeout(() => {\n          setIsError(false);\n        }, 3000);\n      }\n    }, props.device);\n  }\n\n  return /*#__PURE__*/React.createElement(Modal, Object.assign({}, props, {\n    size: \"lg\",\n    backdrop: \"static\",\n    \"aria-labelledby\": \"contained-modal-title-vcenter\",\n    centered: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Modal.Header, {\n    closeButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Title, {\n    id: \"contained-modal-title-vcenter\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 17\n    }\n  }, \"Network Config\")), /*#__PURE__*/React.createElement(Modal.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Alert, {\n    show: isValid,\n    variant: \"success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 21\n    }\n  }, responseString), /*#__PURE__*/React.createElement(Alert, {\n    show: isError,\n    variant: \"danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 21\n    }\n  }, responseString), /*#__PURE__*/React.createElement(Form.Group, {\n    className: \"mb-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    as: \"legend\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(Col, {\n    align: \"left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Form.Check, {\n    type: \"radio\",\n    label: \"Obtain an IP address automatically\",\n    id: \"radiodhcp\",\n    onChange: ButtonSelectRadio_Click,\n    checked: stateRadioDhcp,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(Form.Check, {\n    type: \"radio\",\n    label: \"Use the following IP address:\",\n    id: \"radiostatic\",\n    onChange: ButtonSelectRadio_Click,\n    checked: stateRadioStatic,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 29\n    }\n  }))), /*#__PURE__*/React.createElement(Form.Group, {\n    as: Row,\n    className: \"mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    align: \"right\",\n    column: true,\n    sm: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 25\n    }\n  }, \"IP Address\"), /*#__PURE__*/React.createElement(Col, {\n    sm: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    placeholder: \"IP Address\",\n    disabled: ipAddressDisabled,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 29\n    }\n  }), \" \")), /*#__PURE__*/React.createElement(Form.Label, {\n    as: \"legend\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Form.Group, {\n    as: Row,\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    align: \"right\",\n    column: true,\n    sm: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 25\n    }\n  }, \"Select Netmask\"), /*#__PURE__*/React.createElement(Col, {\n    xs: 3,\n    align: \"left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    //</Col>className=\"form-control-custom\" //makes gray the control\n    as: \"select\",\n    bsPrefix: \"form-select\",\n    disabled: netmaskDisabled,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"255.255.255.0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 33\n    }\n  }, \"255.255.255.0\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"255.255.0.0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 33\n    }\n  }, \"255.255.0.0\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"255.0.0.0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 33\n    }\n  }, \"255.0.0.0\")))), /*#__PURE__*/React.createElement(Form.Group, {\n    as: Row,\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    align: \"right\",\n    column: true,\n    sm: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 25\n    }\n  }, \"Default Gateway\"), /*#__PURE__*/React.createElement(Col, {\n    sm: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    placeholder: \"Gateway\",\n    disabled: gatewayDisabled,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 29\n    }\n  }))), /*#__PURE__*/React.createElement(Form.Group, {\n    as: Row,\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    align: \"right\",\n    column: true,\n    sm: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 25\n    }\n  }, \"Set DNS Servers:\")), /*#__PURE__*/React.createElement(Form.Group, {\n    as: Row,\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    align: \"right\",\n    column: true,\n    sm: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 25\n    }\n  }, \"Primary\"), /*#__PURE__*/React.createElement(Col, {\n    sm: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    placeholder: \"Primary DNS\",\n    disabled: dnsPrimaryDisabled,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 29\n    }\n  }))), /*#__PURE__*/React.createElement(Form.Group, {\n    as: Row,\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    align: \"right\",\n    column: true,\n    sm: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 25\n    }\n  }, \"Secondary\"), /*#__PURE__*/React.createElement(Col, {\n    sm: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    placeholder: \"Secondary DNS\",\n    disabled: dnsSecondaryDisabled,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 29\n    }\n  }))), /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: {\n      span: 10,\n      offset: 2\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Stack, {\n    direction: \"horizontal\",\n    gap: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 29\n    }\n  }))))), /*#__PURE__*/React.createElement(Modal.Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: ButtonGetNetworkConfig_Click,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 17\n    }\n  }, \"Get Config\"), /*#__PURE__*/React.createElement(Button, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 17\n    }\n  }, \"Set Config\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: props.onHide,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 17\n    }\n  }, \"Close\")));\n}\n\nexport default ModalNetwork;","map":{"version":3,"sources":["/home/hiram/github/hiram-repos/tryouts/lv-react-ui/src/ModalNetwork.js"],"names":["React","useState","api","Col","Row","Form","Alert","Modal","Stack","Button","ModalNetwork","props","useEffect","nameInput","current","focus","json","item","args","JSON","parse","setName","name","setHost","host","setPort","port","setSlave","slave","setValidated","radioSelected","setRadioSelected","stateRadioDhcp","setStateRadioDhcp","stateRadioStatic","setStateRadioStatic","ipAddressDisabled","setIpAddressdDisabled","gatewayDisabled","setGatewayDisabled","netmaskDisabled","setNetmaskDisabled","dnsPrimaryDisabled","setDnsPrimaryDisabled","dnsSecondaryDisabled","setDnsSecondaryDisabled","form","setForm","address","gateway","netmask","dnsprimary","dnssecondary","errors","setErrors","responseString","setResponseString","isValid","setIsValid","isError","setIsError","ButtonSelectRadio_Click","event","target","id","setDisabledComponents","console","log","state","parseIP","key","addresswithpoints","stringify","replace","ButtonGetNetworkConfig_Click","device","getNetworkConfig","res","result","message","config","ipv4","method","addressIp","prefix_length","name_servers","length","setTimeout","span","offset","onHide"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\n\nimport api from './api'\n\nimport Col from 'react-bootstrap/Col'\nimport Row from 'react-bootstrap/Row'\nimport Form from 'react-bootstrap/Form'\nimport Alert from 'react-bootstrap/Alert'\nimport Modal from 'react-bootstrap/Modal'\nimport Stack from 'react-bootstrap/Stack'\nimport Button from 'react-bootstrap/Button'\n\nfunction ModalNetwork(props) {\n\n\n    useEffect(() => {\n        //should not override validation focus\n        if (nameInput.current != null) {\n            nameInput.current.focus();\n        }\n        const json = props.item.json || \"{}\"\n        const args = JSON.parse(json)\n        setName(props.item.name || \"\")\n        setHost(args.host || \"\")\n        setPort(args.port || \"0\")\n        setSlave(args.slave || \"1\")\n\n        //red flicker on disconnection while editing\n        setValidated(false);\n    }, [props]);\n\n    //radio selector\n    const [radioSelected, setRadioSelected] = React.useState(\"radiodhcp\")\n    const [stateRadioDhcp, setStateRadioDhcp] = React.useState(true)\n    const [stateRadioStatic, setStateRadioStatic] = React.useState(false)\n\n    //disable componets\n    const [ipAddressDisabled, setIpAddressdDisabled] = React.useState(true);\n    const [gatewayDisabled, setGatewayDisabled] = React.useState(true);\n    const [netmaskDisabled, setNetmaskDisabled] = React.useState(true);\n    const [dnsPrimaryDisabled, setDnsPrimaryDisabled] = React.useState(true);\n    const [dnsSecondaryDisabled, setDnsSecondaryDisabled] = React.useState(true);\n\n    //Errors\n    const [form, setForm] = useState({ address: \"\", gateway: \"\", netmask: \"255.255.255.0\", dnsprimary: \"\", dnssecondary: \"\" })\n    const [errors, setErrors] = useState({ address: \"\", gateway: \"\", netmask: \"\", dnsprimary: \"\", dnssecondary: \"\" })\n\n    //Response from yeico appliance\n    const [responseString, setResponseString] = React.useState(\"\")\n\n    //Alerts\n    const [isValid, setIsValid] = useState(false);\n    const [isError, setIsError] = useState(false);\n\n    function ButtonSelectRadio_Click(event) {\n        if (event.target.id === \"radiodhcp\") {\n            setStateRadioDhcp(true)\n            setStateRadioStatic(false)\n            setDisabledComponents(true)\n        }\n        else {\n            setStateRadioDhcp(false)\n            setStateRadioStatic(true)\n            setDisabledComponents(false)\n        }\n        setRadioSelected(event.target.id)\n        console.log(radioSelected)\n    }\n\n    function setDisabledComponents(state) {\n        setIpAddressdDisabled(state)\n        setGatewayDisabled(state)\n        setNetmaskDisabled(state)\n        setDnsPrimaryDisabled(state)\n        setDnsSecondaryDisabled(state)\n    }\n\n    function parseIP(key) {\n        var addresswithpoints = `${JSON.stringify(key)}`.replace(/,/g, \".\")\n        return addresswithpoints.replace(/[[\\]']/g, \"\")\n    }\n\n    function ButtonGetNetworkConfig_Click() {\n        console.log(\"clicked in get config\");\n        console.log(`Ping to ${props.device}`)\n        api.getNetworkConfig(function (res) {\n            console.log(res)\n            if (res.result === \"ok\") {\n                if (res.message.config.ipv4.method === \"dhcp\") {\n                    setRadioSelected(\"radiodhcp\");\n                    form.address = \"\"\n                    form.gateway = \"\"\n                    form.dnsprimary = \"\"\n                    form.dnssecondary = \"\"\n                    setStateRadioDhcp(true)\n                    setStateRadioStatic(false)\n                    setDisabledComponents(true)\n                }\n                else //is static\n                {\n                    setRadioSelected(\"radiostatic\");\n                    setStateRadioDhcp(false)\n                    setStateRadioStatic(true)\n                    setDisabledComponents(false)\n\n                    var addressIp = \"\";\n                    switch (res.message.config.ipv4.prefix_length) {\n                        case 8:\n                            addressIp = \"255.0.0.0\"\n                            break;\n                        case 16:\n                            addressIp = \"255.255.0.0\"\n                            break;\n                        default:\n                            addressIp = \"255.255.255.0\"\n                    }\n                    form.address = parseIP(res.message.config.ipv4.address)\n                    form.gateway = parseIP(res.message.config.ipv4.gateway)\n                    form.netmask = addressIp\n                    if (res.message.config.ipv4.name_servers.length === 0) {\n                        form.dnsprimary = \"\"\n                        form.dnssecondary = \"\"\n                    }\n                    if (res.message.config.ipv4.name_servers.length === 1) {\n                        form.dnsprimary = parseIP(res.message.config.ipv4.name_servers[0])\n                        form.dnssecondary = \"\"\n                    }\n                    if (res.message.config.ipv4.name_servers.length === 2) {\n                        form.dnsprimary = parseIP(res.message.config.ipv4.name_servers[0])\n                        form.dnssecondary = parseIP(res.message.config.ipv4.name_servers[1])\n                    }\n                }\n                setResponseString(`Get Config Success`)\n                setErrors({ address: \"\", gateway: \"\", netmask: \"\", dnsprimary: \"\", dnssecondary: \"\" })\n                setIsValid(true)\n                setTimeout(() => {\n                    setIsValid(false)\n                }, 3000);\n            }\n            else { //is error in the response\n                setResponseString(`Get Config Error`)\n                setErrors({ address: \"\", gateway: \"\", netmask: \"\", dnsprimary: \"\", dnssecondary: \"\" })\n                setIsError(true)\n                setTimeout(() => {\n                    setIsError(false)\n                }, 3000);\n            }\n        }, props.device)\n    }\n\n    return (\n        <Modal\n            {...props}\n            size=\"lg\"\n            backdrop=\"static\"\n            aria-labelledby=\"contained-modal-title-vcenter\"\n            centered\n        >\n            <Modal.Header closeButton>\n                <Modal.Title id=\"contained-modal-title-vcenter\">\n                    Network Config\n                </Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <Form>\n                    <Alert show={isValid} variant=\"success\">\n                        {responseString}\n                    </Alert>\n                    <Alert show={isError} variant=\"danger\">\n                        {responseString}\n                    </Alert>\n                    <Form.Group className=\"mb-1\">\n                        <Form.Label as=\"legend\">\n                        </Form.Label>\n                        <Col align=\"left\">\n                            <Form.Check\n                                type=\"radio\"\n                                label=\"Obtain an IP address automatically\"\n                                id=\"radiodhcp\"\n                                onChange={ButtonSelectRadio_Click}\n                                checked={stateRadioDhcp}\n                            />\n                            <Form.Check\n                                type=\"radio\"\n                                label=\"Use the following IP address:\"\n                                id=\"radiostatic\"\n                                onChange={ButtonSelectRadio_Click}\n                                checked={stateRadioStatic}\n                            />\n                        </Col>\n                    </Form.Group>\n                    <Form.Group as={Row} className=\"mb-2\">\n                        <Form.Label align=\"right\" column sm={3}>\n                            IP Address\n                        </Form.Label>\n                        <Col sm={8}>\n                            <Form.Control\n                                placeholder=\"IP Address\"\n                                disabled={ipAddressDisabled}\n                            /> </Col>\n                    </Form.Group>\n                    <Form.Label as=\"legend\">\n                    </Form.Label>\n                    <Form.Group as={Row} className=\"mb-3\">\n                        <Form.Label align=\"right\" column sm={3}>\n                            Select Netmask\n                        </Form.Label>\n                        <Col xs={3} align=\"left\">\n                            <Form.Control\n                                //</Col>className=\"form-control-custom\" //makes gray the control\n                                as=\"select\"\n                                bsPrefix={\"form-select\"}\n                                disabled={netmaskDisabled}\n                            >\n                                <option value=\"255.255.255.0\">255.255.255.0</option>\n                                <option value=\"255.255.0.0\">255.255.0.0</option>\n                                <option value=\"255.0.0.0\">255.0.0.0</option>\n                            </Form.Control>\n                        </Col>\n                    </Form.Group>\n\n                    <Form.Group as={Row} className=\"mb-3\">\n                        <Form.Label align=\"right\" column sm={3}>\n                            Default Gateway\n                        </Form.Label>\n                        <Col sm={8}>\n                            <Form.Control\n                                placeholder=\"Gateway\"\n                                disabled={gatewayDisabled}\n                            />\n                        </Col>\n                    </Form.Group>\n\n                    <Form.Group as={Row} className=\"mb-3\">\n                        <Form.Label align=\"right\" column sm={3}>\n                            Set DNS Servers:\n                        </Form.Label>\n                    </Form.Group>\n\n                    <Form.Group as={Row} className=\"mb-3\">\n                        <Form.Label align=\"right\" column sm={3}>\n                            Primary\n                        </Form.Label>\n                        <Col sm={8}>\n                            <Form.Control\n                                placeholder=\"Primary DNS\"\n                                disabled={dnsPrimaryDisabled}\n                            />\n                        </Col>\n                    </Form.Group>\n\n                    <Form.Group as={Row} className=\"mb-3\">\n                        <Form.Label align=\"right\" column sm={3}>\n                            Secondary\n                        </Form.Label>\n                        <Col sm={8}>\n                            <Form.Control\n                                placeholder=\"Secondary DNS\"\n                                disabled={dnsSecondaryDisabled}\n                            />\n                        </Col>\n                    </Form.Group>\n\n                    <Form.Group>\n                        <Col sm={{ span: 10, offset: 2 }}>\n                            <Stack direction=\"horizontal\" gap={3}>\n\n                            </Stack>\n                        </Col>\n                    </Form.Group>\n                </Form>\n            </Modal.Body>\n            <Modal.Footer>\n                <Button onClick={ButtonGetNetworkConfig_Click}>Get Config</Button>\n                <Button>Set Config</Button>\n                <Button onClick={props.onHide}>Close</Button>\n            </Modal.Footer>\n        </Modal >\n    );\n}\n\nexport default ModalNetwork;"]},"metadata":{},"sourceType":"module"}