{"ast":null,"code":"function setNetworkConfigDhcp(config,cb){fetch(\"/net/setup/eth0\",{method:\"post\",body:JSON.stringify(config),headers:{\"Content-Type\":\"application/json\"}}).then(function(res){return res.json();}).then(function(json){return cb(json);}).catch(function(err){return cb(err);});}function setNetworkConfigStatic(config,cb){fetch(\"/net/setup/eth0\",{method:\"post\",body:JSON.stringify(config),headers:{\"Content-Type\":\"application/json\"}}).then(function(res){return res.json();}).then(function(json){return cb(json);}).catch(function(err){return cb(err);});}function getNetworkConfig(cb){fetch(\"/net/state/eth0\").then(function(res){return res.json();}).then(function(json){return cb(json);}).catch(function(err){return cb(err);});}function getNetworkPing(cb){fetch(\"/ping\").then(function(res){return res.json();}).then(function(json){return cb(json);}).catch(function(err){return cb(err);});}function getNetworkDiscover(cb){fetch(\"Discovery/2\").then(function(res){return res.json();}).then(function(json){return cb(json);}).catch(function(err){return cb(err);});}var exports={setNetworkConfigDhcp:setNetworkConfigDhcp,getNetworkConfig:getNetworkConfig,getNetworkPing:getNetworkPing,setNetworkConfigStatic:setNetworkConfigStatic,getNetworkDiscover:getNetworkDiscover};export default exports;","map":{"version":3,"sources":["/home/hiram/github/hiram-repos/tryouts/lv-react-ui/src/api.js"],"names":["setNetworkConfigDhcp","config","cb","fetch","method","body","JSON","stringify","headers","then","res","json","catch","err","setNetworkConfigStatic","getNetworkConfig","getNetworkPing","getNetworkDiscover","exports"],"mappings":"AAAA,QAASA,CAAAA,oBAAT,CAA8BC,MAA9B,CAAsCC,EAAtC,CAA0C,CACxCC,KAAK,CAAC,iBAAD,CAAoB,CACvBC,MAAM,CAAE,MADe,CAEvBC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAeN,MAAf,CAFiB,CAGvBO,OAAO,CAAE,CAAE,eAAgB,kBAAlB,CAHc,CAApB,CAAL,CAKGC,IALH,CAKQ,SAAAC,GAAG,QAAIA,CAAAA,GAAG,CAACC,IAAJ,EAAJ,EALX,EAMGF,IANH,CAMQ,SAAAE,IAAI,QAAIT,CAAAA,EAAE,CAACS,IAAD,CAAN,EANZ,EAOGC,KAPH,CAOS,SAAAC,GAAG,QAAIX,CAAAA,EAAE,CAACW,GAAD,CAAN,EAPZ,EAQD,CAED,QAASC,CAAAA,sBAAT,CAAgCb,MAAhC,CAAwCC,EAAxC,CAA4C,CAC1CC,KAAK,CAAC,iBAAD,CAAoB,CACvBC,MAAM,CAAE,MADe,CAEvBC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAeN,MAAf,CAFiB,CAGvBO,OAAO,CAAE,CAAE,eAAgB,kBAAlB,CAHc,CAApB,CAAL,CAKGC,IALH,CAKQ,SAAAC,GAAG,QAAIA,CAAAA,GAAG,CAACC,IAAJ,EAAJ,EALX,EAMGF,IANH,CAMQ,SAAAE,IAAI,QAAIT,CAAAA,EAAE,CAACS,IAAD,CAAN,EANZ,EAOGC,KAPH,CAOS,SAAAC,GAAG,QAAIX,CAAAA,EAAE,CAACW,GAAD,CAAN,EAPZ,EAQD,CAED,QAASE,CAAAA,gBAAT,CAA0Bb,EAA1B,CAA8B,CAC5BC,KAAK,CAAC,iBAAD,CAAL,CACGM,IADH,CACQ,SAAAC,GAAG,QAAIA,CAAAA,GAAG,CAACC,IAAJ,EAAJ,EADX,EAEGF,IAFH,CAEQ,SAAAE,IAAI,QAAIT,CAAAA,EAAE,CAACS,IAAD,CAAN,EAFZ,EAGGC,KAHH,CAGS,SAAAC,GAAG,QAAIX,CAAAA,EAAE,CAACW,GAAD,CAAN,EAHZ,EAID,CAED,QAASG,CAAAA,cAAT,CAAwBd,EAAxB,CAA4B,CAC1BC,KAAK,CAAC,OAAD,CAAL,CACGM,IADH,CACQ,SAAAC,GAAG,QAAIA,CAAAA,GAAG,CAACC,IAAJ,EAAJ,EADX,EAEGF,IAFH,CAEQ,SAAAE,IAAI,QAAIT,CAAAA,EAAE,CAACS,IAAD,CAAN,EAFZ,EAGGC,KAHH,CAGS,SAAAC,GAAG,QAAIX,CAAAA,EAAE,CAACW,GAAD,CAAN,EAHZ,EAID,CAGD,QAASI,CAAAA,kBAAT,CAA4Bf,EAA5B,CAAgC,CAC9BC,KAAK,CAAC,aAAD,CAAL,CACGM,IADH,CACQ,SAAAC,GAAG,QAAIA,CAAAA,GAAG,CAACC,IAAJ,EAAJ,EADX,EAEGF,IAFH,CAEQ,SAAAE,IAAI,QAAIT,CAAAA,EAAE,CAACS,IAAD,CAAN,EAFZ,EAGGC,KAHH,CAGS,SAAAC,GAAG,QAAIX,CAAAA,EAAE,CAACW,GAAD,CAAN,EAHZ,EAID,CAED,GAAMK,CAAAA,OAAO,CAAG,CACdlB,oBAAoB,CAApBA,oBADc,CAEde,gBAAgB,CAAhBA,gBAFc,CAGdC,cAAc,CAAdA,cAHc,CAIdF,sBAAsB,CAAtBA,sBAJc,CAKdG,kBAAkB,CAAlBA,kBALc,CAAhB,CAQA,cAAeC,CAAAA,OAAf","sourcesContent":["function setNetworkConfigDhcp(config, cb) {\n  fetch(\"/net/setup/eth0\", {\n    method: \"post\",\n    body: JSON.stringify(config),\n    headers: { \"Content-Type\": \"application/json\" }\n  })\n    .then(res => res.json())\n    .then(json => cb(json))\n    .catch(err => cb(err))\n}\n\nfunction setNetworkConfigStatic(config, cb) {\n  fetch(\"/net/setup/eth0\", {\n    method: \"post\",\n    body: JSON.stringify(config),\n    headers: { \"Content-Type\": \"application/json\" }\n  })\n    .then(res => res.json())\n    .then(json => cb(json))\n    .catch(err => cb(err))\n}\n\nfunction getNetworkConfig(cb) {\n  fetch(\"/net/state/eth0\")\n    .then(res => res.json())\n    .then(json => cb(json))\n    .catch(err => cb(err))\n}\n\nfunction getNetworkPing(cb) {\n  fetch(\"/ping\")\n    .then(res => res.json())\n    .then(json => cb(json))\n    .catch(err => cb(err))\n}\n\n\nfunction getNetworkDiscover(cb) {\n  fetch(\"Discovery/2\")\n    .then(res => res.json())\n    .then(json => cb(json))\n    .catch(err => cb(err))\n}\n\nconst exports = {\n  setNetworkConfigDhcp,\n  getNetworkConfig,\n  getNetworkPing,\n  setNetworkConfigStatic,\n  getNetworkDiscover,\n}\n\nexport default exports"]},"metadata":{},"sourceType":"module"}