{"ast":null,"code":"var _jsxFileName = \"/home/hiram/github/hiram-repos/tryouts/lv-react-ui/src/App.js\";\nimport React, { useState } from 'react';\nimport './App.css';\nimport api from \"./api\";\nimport Network from './Network';\nimport Database from './Database';\nimport Security from './Security';\nimport { faCog } from '@fortawesome/free-solid-svg-icons';\nimport { faUserCog } from '@fortawesome/free-solid-svg-icons';\nimport { faDatabase } from '@fortawesome/free-solid-svg-icons';\nimport { faLightbulb } from '@fortawesome/free-solid-svg-icons';\nimport { faLaptopCode } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport Table from 'react-bootstrap/Table';\nimport Toast from 'react-bootstrap/Toast';\nimport Button from 'react-bootstrap/Button';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Spinner from 'react-bootstrap/Spinner';\nimport Container from 'react-bootstrap/Container';\nimport ToastContainer from 'react-bootstrap/ToastContainer';\n\nfunction App() {\n  const [devices, setDevices] = useState([]);\n  const [showNetworkModal, setShowNetworkModal] = React.useState(false);\n  const [showDatabaseModal, setShowDatabaseModal] = React.useState(false);\n  const [showSecurityModal, setShowSecurityModal] = React.useState(false);\n  const [showSpinner, setShowSpinner] = React.useState(\"visually-hidden\");\n  const [messageToToast, setMessageToToast] = React.useState(\"\");\n  const [toastColor, setToastColor] = React.useState(\"dark\");\n  const [showToast, setShowToast] = useState(false);\n  const [selectDevice, setSelectDevice] = React.useState(\"\");\n  const [devicePass, setDevicePass] = React.useState(\"\");\n\n  function buttonDiscoveryClick() {\n    setShowSpinner(\"\");\n    api.getNetworkDiscover(function (res) {\n      console.log(JSON.stringify(res));\n      setShowSpinner(\"visually-hidden\");\n      saveLocalStorage(res);\n      setDevices(res);\n    });\n  }\n\n  function saveLocalStorage(res) {\n    //save devices with password\n    for (let i = 0; i <= res.length - 1; i++) {\n      //if device dont exist, save local storage\n      if (!localStorage.getItem(`${res[i].data.macaddr}`)) {\n        localStorage.setItem(`${res[i].data.macaddr}`, res[i].data.macaddr);\n      }\n    }\n  }\n\n  function buttonBlinkClick(device) {\n    api.blinkNetworkDevice(function (res) {\n      console.log(JSON.stringify(res));\n      setTypeOfToast('dark', `Blink action sent to ${device.data.ipaddr}`);\n    }, device.data.ipaddr);\n  }\n\n  function buttonPingFromDiscover(device) {\n    api.getNetworkPing(function (res) {\n      console.log(res);\n\n      if (res.result === \"ok\") {\n        setTypeOfToast('dark', `Ping to ${device.data.ipaddr} success`);\n      } else {\n        setTypeOfToast('danger', `Ping to ${device.data.ipaddr} failed`);\n      }\n    }, device.data.ipaddr, \"nerves\", device.data.macaddr);\n  }\n\n  function buttonNetworkClick(device) {\n    setSelectDevice(device.data.ipaddr);\n    setDevicePass(device.data.macaddr);\n    setShowNetworkModal(true);\n  }\n\n  function buttonDatabaseClick(device) {\n    setSelectDevice(device.data.ipaddr);\n    setDevicePass(device.data.macaddr);\n    setShowDatabaseModal(true);\n  }\n\n  function buttonSecurityClick(device) {\n    setSelectDevice(device.data.ipaddr);\n    setDevicePass(device.data.macaddr);\n    setShowSecurityModal(true);\n  }\n\n  const rows = devices.map(device => /*#__PURE__*/React.createElement(\"tr\", {\n    key: device.data.macaddr,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }\n  }, device.data.hostname), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }\n  }, device.data.macaddr), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }\n  }, device.data.version), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }\n  }, device.data.ipaddr), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }\n  }, \" \", /*#__PURE__*/React.createElement(Button, {\n    onClick: () => buttonPingFromDiscover(device),\n    variant: \"dark\",\n    size: \"sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 12\n    }\n  }, \" \", /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faLaptopCode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 93\n    }\n  }))), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }\n  }, \" \", /*#__PURE__*/React.createElement(Button, {\n    onClick: () => buttonBlinkClick(device),\n    variant: \"dark\",\n    size: \"sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 12\n    }\n  }, \" \", /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faLightbulb,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 87\n    }\n  }))), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }\n  }, \" \", /*#__PURE__*/React.createElement(Button, {\n    onClick: () => buttonSecurityClick(device),\n    variant: \"dark\",\n    size: \"sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 12\n    }\n  }, \" \", /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faUserCog,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 90\n    }\n  }))), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }\n  }, \" \", /*#__PURE__*/React.createElement(Button, {\n    onClick: () => buttonNetworkClick(device),\n    variant: \"dark\",\n    size: \"sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 12\n    }\n  }, \" \", /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faCog,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 89\n    }\n  }))), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }\n  }, \" \", /*#__PURE__*/React.createElement(Button, {\n    onClick: () => buttonDatabaseClick(device),\n    variant: \"dark\",\n    size: \"sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 12\n    }\n  }, \" \", /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faDatabase,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 90\n    }\n  })))));\n\n  function setTypeOfToast(color, message) {\n    setToastColor(color);\n    setMessageToToast(message);\n    setShowToast(true);\n  }\n\n  const toastMessages = (message, color) => {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ToastContainer, {\n      position: \"bottom-start\",\n      className: \"p-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Toast, {\n      animation: true,\n      bg: color,\n      onClose: () => setShowToast(false),\n      show: showToast,\n      delay: 3000,\n      autohide: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Toast.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      className: \"me-auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 15\n      }\n    }, \"Message\"), /*#__PURE__*/React.createElement(\"small\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 15\n      }\n    }, \"Just now\")), /*#__PURE__*/React.createElement(Toast.Body, {\n      className: \"text-white\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 13\n      }\n    }, message))));\n  };\n\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 5\n    }\n  }, toastMessages(messageToToast, toastColor), /*#__PURE__*/React.createElement(Navbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Navbar.Brand, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 9\n    }\n  }, \"Laurel View Setup\"), /*#__PURE__*/React.createElement(Navbar.Collapse, {\n    className: \"justify-content-end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: buttonDiscoveryClick,\n    variant: \"dark\",\n    title: \"Discover Devices\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 11\n    }\n  }, \"Discovery\"))), /*#__PURE__*/React.createElement(Table, {\n    style: {\n      textAlign: \"center\"\n    },\n    striped: true,\n    bordered: true,\n    hover: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 13\n    }\n  }, \"Hostname\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 13\n    }\n  }, \"MAC Address\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 13\n    }\n  }, \"Version\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 13\n    }\n  }, \"IP Address\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 13\n    }\n  }, \"Ping\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 13\n    }\n  }, \"Blink\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 13\n    }\n  }, \"Security\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }\n  }, \"Network\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 13\n    }\n  }, \"Database\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 9\n    }\n  }, rows)), /*#__PURE__*/React.createElement(Navbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Navbar.Collapse, {\n    className: \"justify-content-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Spinner, {\n    className: showSpinner,\n    animation: \"border\",\n    role: \"status\",\n    variant: \"dark\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 11\n    }\n  }, \" \"))), /*#__PURE__*/React.createElement(Network, {\n    show: showNetworkModal,\n    onHide: () => {\n      setShowNetworkModal(false);\n      buttonDiscoveryClick();\n    },\n    device: selectDevice,\n    pass: devicePass,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Database, {\n    show: showDatabaseModal,\n    onHide: () => {\n      setShowDatabaseModal(false);\n    },\n    device: selectDevice,\n    pass: devicePass,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Security, {\n    show: showSecurityModal,\n    onHide: () => {\n      setShowSecurityModal(false);\n    },\n    device: selectDevice,\n    pass: devicePass,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/hiram/github/hiram-repos/tryouts/lv-react-ui/src/App.js"],"names":["React","useState","api","Network","Database","Security","faCog","faUserCog","faDatabase","faLightbulb","faLaptopCode","FontAwesomeIcon","Table","Toast","Button","Navbar","Spinner","Container","ToastContainer","App","devices","setDevices","showNetworkModal","setShowNetworkModal","showDatabaseModal","setShowDatabaseModal","showSecurityModal","setShowSecurityModal","showSpinner","setShowSpinner","messageToToast","setMessageToToast","toastColor","setToastColor","showToast","setShowToast","selectDevice","setSelectDevice","devicePass","setDevicePass","buttonDiscoveryClick","getNetworkDiscover","res","console","log","JSON","stringify","saveLocalStorage","i","length","localStorage","getItem","data","macaddr","setItem","buttonBlinkClick","device","blinkNetworkDevice","setTypeOfToast","ipaddr","buttonPingFromDiscover","getNetworkPing","result","buttonNetworkClick","buttonDatabaseClick","buttonSecurityClick","rows","map","hostname","version","color","message","toastMessages","textAlign"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\n\nimport './App.css'\nimport api from \"./api\"\nimport Network from './Network'\nimport Database from './Database'\nimport Security from './Security'\n\nimport { faCog } from '@fortawesome/free-solid-svg-icons'\nimport { faUserCog } from '@fortawesome/free-solid-svg-icons'\nimport { faDatabase } from '@fortawesome/free-solid-svg-icons'\nimport { faLightbulb } from '@fortawesome/free-solid-svg-icons'\nimport { faLaptopCode } from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nimport Table from 'react-bootstrap/Table'\nimport Toast from 'react-bootstrap/Toast'\nimport Button from 'react-bootstrap/Button'\nimport Navbar from 'react-bootstrap/Navbar'\nimport Spinner from 'react-bootstrap/Spinner'\nimport Container from 'react-bootstrap/Container'\nimport ToastContainer from 'react-bootstrap/ToastContainer'\n\nfunction App() {\n\n  const [devices, setDevices] = useState([])\n  const [showNetworkModal, setShowNetworkModal] = React.useState(false)\n  const [showDatabaseModal, setShowDatabaseModal] = React.useState(false)\n  const [showSecurityModal, setShowSecurityModal] = React.useState(false)\n  const [showSpinner, setShowSpinner] = React.useState(\"visually-hidden\")\n\n  const [messageToToast, setMessageToToast] = React.useState(\"\")\n  const [toastColor, setToastColor] = React.useState(\"dark\")\n  const [showToast, setShowToast] = useState(false);\n\n  const [selectDevice, setSelectDevice] = React.useState(\"\")\n  const [devicePass, setDevicePass] = React.useState(\"\")\n\n  function buttonDiscoveryClick() {\n    setShowSpinner(\"\")\n    api.getNetworkDiscover(function (res) {\n      console.log(JSON.stringify(res))\n      setShowSpinner(\"visually-hidden\")\n      saveLocalStorage(res)\n      setDevices(res)\n    })\n  }\n\n  function saveLocalStorage(res) {\n    //save devices with password\n    for (let i = 0; i <= res.length - 1; i++) {\n      //if device dont exist, save local storage\n      if (!(localStorage.getItem(`${res[i].data.macaddr}`))) {\n        localStorage.setItem(`${res[i].data.macaddr}`, res[i].data.macaddr)\n      }\n    }\n  }\n\n  function buttonBlinkClick(device) {\n    api.blinkNetworkDevice(function (res) {\n      console.log(JSON.stringify(res))\n      setTypeOfToast('dark', `Blink action sent to ${device.data.ipaddr}`)\n    }, device.data.ipaddr)\n  }\n\n\n  function buttonPingFromDiscover(device) {\n    api.getNetworkPing(function (res) {\n      console.log(res)\n      if (res.result === \"ok\") {\n        setTypeOfToast('dark', `Ping to ${device.data.ipaddr} success`)\n      }\n      else {\n        setTypeOfToast('danger', `Ping to ${device.data.ipaddr} failed`)\n      }\n    }, device.data.ipaddr, \"nerves\", device.data.macaddr)\n  }\n\n  function buttonNetworkClick(device) {\n    setSelectDevice(device.data.ipaddr)\n    setDevicePass(device.data.macaddr)\n    setShowNetworkModal(true)\n  }\n\n  function buttonDatabaseClick(device) {\n    setSelectDevice(device.data.ipaddr)\n    setDevicePass(device.data.macaddr)\n    setShowDatabaseModal(true)\n  }\n\n  function buttonSecurityClick(device) {\n    setSelectDevice(device.data.ipaddr)\n    setDevicePass(device.data.macaddr)\n    setShowSecurityModal(true)\n  }\n\n  const rows = devices.map(device =>\n    <tr key={device.data.macaddr}>\n      <td>{device.data.hostname}</td>\n      <td>{device.data.macaddr}</td>\n      <td>{device.data.version}</td>\n      <td>{device.data.ipaddr}</td>\n      <td> <Button onClick={() => buttonPingFromDiscover(device)} variant=\"dark\" size=\"sm\"> <FontAwesomeIcon icon={faLaptopCode} /></Button></td>\n      <td> <Button onClick={() => buttonBlinkClick(device)} variant=\"dark\" size=\"sm\"> <FontAwesomeIcon icon={faLightbulb} /></Button></td>\n      <td> <Button onClick={() => buttonSecurityClick(device)} variant=\"dark\" size=\"sm\"> <FontAwesomeIcon icon={faUserCog} /></Button></td>\n      <td> <Button onClick={() => buttonNetworkClick(device)} variant=\"dark\" size=\"sm\"> <FontAwesomeIcon icon={faCog} /></Button></td>\n      <td> <Button onClick={() => buttonDatabaseClick(device)} variant=\"dark\" size=\"sm\"> <FontAwesomeIcon icon={faDatabase} /></Button></td>\n    </tr>\n  )\n\n  function setTypeOfToast(color, message) {\n    setToastColor(color)\n    setMessageToToast(message)\n    setShowToast(true)\n  }\n\n  const toastMessages = (message, color) => {\n    return (\n      <>\n        <ToastContainer position='bottom-start' className=\"p-3\">\n          <Toast animation={true} bg={color} onClose={() => setShowToast(false)} show={showToast} delay={3000} autohide>\n            <Toast.Header>\n              <strong className=\"me-auto\">Message</strong>\n              <small>Just now</small>\n            </Toast.Header>\n            <Toast.Body className='text-white'>{message}</Toast.Body>\n          </Toast>\n        </ToastContainer>\n      </>\n    )\n  }\n\n  return (\n    <Container>\n      {toastMessages(messageToToast, toastColor)}\n      <Navbar >\n        <Navbar.Brand>Laurel View Setup</Navbar.Brand>\n        <Navbar.Collapse className=\"justify-content-end\">\n          <Button onClick={buttonDiscoveryClick} variant=\"dark\" title=\"Discover Devices\">Discovery</Button>\n        </Navbar.Collapse>\n      </Navbar>\n      <Table style={{ textAlign: \"center\" }} striped bordered hover>\n        <thead>\n          <tr>\n            <th>Hostname</th>\n            <th>MAC Address</th>\n            <th>Version</th>\n            <th>IP Address</th>\n            <th>Ping</th>\n            <th>Blink</th>\n            <th>Security</th>\n            <th>Network</th>\n            <th>Database</th>\n          </tr>\n        </thead>\n        <tbody>\n          {rows}\n        </tbody>\n      </Table>\n      <Navbar >\n        <Navbar.Collapse className=\"justify-content-center\">\n          <Spinner className={showSpinner} animation=\"border\" role=\"status\" variant=\"dark\"> </Spinner>\n        </Navbar.Collapse>\n      </Navbar>\n      <Network\n        show={showNetworkModal}\n        onHide={() => {\n          setShowNetworkModal(false)\n          buttonDiscoveryClick()\n        }}\n        device={selectDevice}\n        pass={devicePass}\n      />\n      <Database\n        show={showDatabaseModal}\n        onHide={() => {\n          setShowDatabaseModal(false)\n        }}\n        device={selectDevice}\n        pass={devicePass}\n      />\n      <Security\n        show={showSecurityModal}\n        onHide={() => {\n          setShowSecurityModal(false)\n        }}\n        device={selectDevice}\n        pass={devicePass}\n      />\n    </Container>\n  )\n}\nexport default App;"]},"metadata":{},"sourceType":"module"}