{"ast":null,"code":"//Network\nfunction setNetworkConfigDhcp(config, cb, ip, username, pass) {\n  fetch(`http://${ip}:31680/net/setup/eth0`, {\n    method: \"post\",\n    body: JSON.stringify(config),\n    headers: {\n      \"Content-Type\": \"application/json\",\n      'Authorization': 'Basic ' + Buffer.from(`${username}:${pass}`).toString('base64')\n    }\n  }).then(res => res.json()).then(json => cb(json)).catch(err => cb(err));\n}\n\nfunction setNetworkConfigStatic(config, cb, ip, username, pass) {\n  fetch(`http://${ip}:31680/net/setup/eth0`, {\n    method: \"post\",\n    body: JSON.stringify(config),\n    headers: {\n      \"Content-Type\": \"application/json\",\n      'Authorization': 'Basic ' + Buffer.from(`${username}:${pass}`).toString('base64')\n    }\n  }).then(res => res.json()).then(json => cb(json)).catch(err => cb(err));\n}\n\nfunction getNetworkConfig(cb, ip, username, pass) {\n  console.log(`Esto llega ${ip} ${username} ${pass}`);\n  fetch(`http://${ip}:31680/net/state/eth0`, {\n    headers: {\n      'Authorization': 'Basic ' + Buffer.from(`${username}:${pass}`).toString('base64')\n    }\n  }).then(res => res.json()).then(json => cb(json)).catch(err => cb(err));\n}\n\nfunction getNetworkPing(cb, ip, username, pass) {\n  fetch(`http://${ip}:31680/ping`, {\n    headers: {\n      'Authorization': 'Basic ' + Buffer.from(`${username}:${pass}`).toString('base64')\n    }\n  }).then(res => res.json()).then(json => cb(json)).catch(err => cb(err));\n}\n\nfunction blinkNetworkDevice(cb, ip) {\n  fetch(`blink/${ip}`).then(res => res.json()).then(json => cb(json)).catch(err => cb(err));\n} //Discover\n\n\nfunction getNetworkDiscover(cb) {\n  fetch(\"discovery/2\").then(res => res.json()).then(json => cb(json)).catch(err => cb(err));\n} //Security\n\n\nfunction setNewPass(cb, ip, username, pass, newPass) {\n  console.log(\"Si entre a set new pass\");\n  fetch(`http://${ip}:31680/pass/set`, {\n    method: \"post\",\n    body: `${newPass}`,\n    headers: {\n      'Authorization': 'Basic ' + Buffer.from(`${username}:${pass}`).toString('base64')\n    }\n  }).then(res => res.json()).then(json => cb(json)).catch(err => cb(err));\n}\n\nfunction setDisablePass(cb, ip, username, pass) {\n  console.log(\"Si entre a set new pass\");\n  fetch(`http://${ip}:31680/pass/disable`, {\n    headers: {\n      'Authorization': 'Basic ' + Buffer.from(`${username}:${pass}`).toString('base64')\n    }\n  }).then(res => res.json()).then(json => cb(json)).catch(err => cb(err));\n}\n\nfunction setResetPass(cb, ip, username, pass) {\n  console.log(\"Si entre a set new pass\");\n  fetch(`http://${ip}:31680/pass/disable`, {\n    headers: {\n      'Authorization': 'Basic ' + Buffer.from(`${username}:${pass}`).toString('base64')\n    }\n  }).then(res => res.json()).then(json => cb(json)).catch(err => cb(err));\n}\n\nconst exports = {\n  setNetworkConfigDhcp,\n  getNetworkConfig,\n  getNetworkPing,\n  setNetworkConfigStatic,\n  getNetworkDiscover,\n  blinkNetworkDevice,\n  setNewPass\n};\nexport default exports;","map":{"version":3,"sources":["/home/hiram/github/hiram-repos/tryouts/lv-react-ui/src/api.js"],"names":["setNetworkConfigDhcp","config","cb","ip","username","pass","fetch","method","body","JSON","stringify","headers","Buffer","from","toString","then","res","json","catch","err","setNetworkConfigStatic","getNetworkConfig","console","log","getNetworkPing","blinkNetworkDevice","getNetworkDiscover","setNewPass","newPass","setDisablePass","setResetPass","exports"],"mappings":"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","sourcesContent":["//Network\nfunction setNetworkConfigDhcp(config, cb, ip, username, pass) {\n  fetch(`http://${ip}:31680/net/setup/eth0`, {\n    method: \"post\",\n    body: JSON.stringify(config),\n    headers: {\n      \"Content-Type\": \"application/json\",\n      'Authorization': 'Basic ' + Buffer.from(`${username}:${pass}`).toString('base64')\n    }\n  })\n    .then(res => res.json())\n    .then(json => cb(json))\n    .catch(err => cb(err))\n}\n\nfunction setNetworkConfigStatic(config, cb, ip, username, pass) {\n  fetch(`http://${ip}:31680/net/setup/eth0`, {\n    method: \"post\",\n    body: JSON.stringify(config),\n    headers: {\n      \"Content-Type\": \"application/json\",\n      'Authorization': 'Basic ' + Buffer.from(`${username}:${pass}`).toString('base64')\n    }\n  })\n    .then(res => res.json())\n    .then(json => cb(json))\n    .catch(err => cb(err))\n}\n\nfunction getNetworkConfig(cb, ip, username, pass) {\n  console.log(`Esto llega ${ip} ${username} ${pass}`)\n  fetch(`http://${ip}:31680/net/state/eth0`, {\n    headers: { 'Authorization': 'Basic ' + Buffer.from(`${username}:${pass}`).toString('base64') }\n  })\n    .then(res => res.json())\n    .then(json => cb(json))\n    .catch(err => cb(err))\n}\n\nfunction getNetworkPing(cb, ip, username, pass) {\n  fetch(`http://${ip}:31680/ping`, {\n    headers: { 'Authorization': 'Basic ' + Buffer.from(`${username}:${pass}`).toString('base64') }\n  })\n    .then(res => res.json())\n    .then(json => cb(json))\n    .catch(err => cb(err))\n}\n\nfunction blinkNetworkDevice(cb, ip) {\n  fetch(`blink/${ip}`)\n    .then(res => res.json())\n    .then(json => cb(json))\n    .catch(err => cb(err))\n}\n\n//Discover\nfunction getNetworkDiscover(cb) {\n  fetch(\"discovery/2\")\n    .then(res => res.json())\n    .then(json => cb(json))\n    .catch(err => cb(err))\n}\n\n//Security\nfunction setNewPass(cb, ip, username, pass, newPass) {\n  console.log(\"Si entre a set new pass\")\n  fetch(`http://${ip}:31680/pass/set`, {\n    method: \"post\",\n    body: `${newPass}`,\n    headers: { 'Authorization': 'Basic ' + Buffer.from(`${username}:${pass}`).toString('base64') }\n  })\n    .then(res => res.json())\n    .then(json => cb(json))\n    .catch(err => cb(err))\n}\n\nfunction setDisablePass(cb, ip, username, pass) {\n  console.log(\"Si entre a set new pass\")\n  fetch(`http://${ip}:31680/pass/disable`, {\n    headers: { 'Authorization': 'Basic ' + Buffer.from(`${username}:${pass}`).toString('base64') }\n  })\n    .then(res => res.json())\n    .then(json => cb(json))\n    .catch(err => cb(err))\n}\n\n\nfunction setResetPass(cb, ip, username, pass) {\n  console.log(\"Si entre a set new pass\")\n  fetch(`http://${ip}:31680/pass/disable`, {\n    headers: { 'Authorization': 'Basic ' + Buffer.from(`${username}:${pass}`).toString('base64') }\n  })\n    .then(res => res.json())\n    .then(json => cb(json))\n    .catch(err => cb(err))\n}\n\nconst exports = {\n  setNetworkConfigDhcp,\n  getNetworkConfig,\n  getNetworkPing,\n  setNetworkConfigStatic,\n  getNetworkDiscover,\n  blinkNetworkDevice,\n  setNewPass,\n}\n\nexport default exports"]},"metadata":{},"sourceType":"module"}