{"ast":null,"code":"var _jsxFileName = \"/home/hiram/github/hiram-repos/tryouts/lv-react-ui/src/Utils.js\";\nimport React, { useState } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faLightbulb } from '@fortawesome/free-solid-svg-icons';\nimport { faLaptopCode } from '@fortawesome/free-solid-svg-icons';\nimport { faDatabase } from '@fortawesome/free-solid-svg-icons';\nimport { faCog } from '@fortawesome/free-solid-svg-icons';\nimport './App.css';\nimport api from \"./api\";\nimport Validation from './Validation';\nimport Container from 'react-bootstrap/Container';\nimport Button from 'react-bootstrap/Button';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Table from 'react-bootstrap/Table';\nimport Spinner from 'react-bootstrap/Spinner';\nimport Modal from 'react-bootstrap/Modal';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport Form from 'react-bootstrap/Form';\nimport Alert from 'react-bootstrap/Alert';\nimport Stack from 'react-bootstrap/Stack';\n\nfunction Utils() {\n  const [devices, setDevices] = useState([]);\n  const [modalShow, setModalShow] = React.useState(false);\n  const [showSpinner, setShowSpinner] = React.useState(\"visually-hidden\"); //radio selector\n\n  const [radioSelected, setRadioSelected] = React.useState(\"radiodhcp\");\n  const [stateRadioDhcp, setStateRadioDhcp] = React.useState(true);\n  const [stateRadioStatic, setStateRadioStatic] = React.useState(false); //Errors\n\n  const [form, setForm] = useState({\n    address: \"\",\n    gateway: \"\",\n    netmask: \"255.255.255.0\",\n    dnsprimary: \"\",\n    dnssecondary: \"\"\n  });\n  const [errors, setErrors] = useState({\n    address: \"\",\n    gateway: \"\",\n    netmask: \"\",\n    dnsprimary: \"\",\n    dnssecondary: \"\"\n  }); //disable componets\n\n  const [ipAddressDisabled, setIpAddressdDisabled] = React.useState(true);\n  const [gatewayDisabled, setGatewayDisabled] = React.useState(true);\n  const [netmaskDisabled, setNetmaskDisabled] = React.useState(true);\n  const [dnsPrimaryDisabled, setDnsPrimaryDisabled] = React.useState(true);\n  const [dnsSecondaryDisabled, setDnsSecondaryDisabled] = React.useState(true); //Response from yeico appliance\n\n  const [responseString, setResponseString] = React.useState(\"\"); //Alerts\n\n  const [isValid, setIsValid] = useState(false);\n  const [isError, setIsError] = useState(false);\n\n  function validateIPaddress(ipaddress) {\n    if (/^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/.test(ipaddress)) {\n      return true;\n    }\n\n    return false;\n  }\n\n  function setDisabledComponents(state) {\n    setIpAddressdDisabled(state);\n    setGatewayDisabled(state);\n    setNetmaskDisabled(state);\n    setDnsPrimaryDisabled(state);\n    setDnsSecondaryDisabled(state);\n  }\n\n  function parseIP(key) {\n    var addresswithpoints = `${JSON.stringify(key)}`.replace(/,/g, \".\");\n    return addresswithpoints.replace(/[[\\]']/g, \"\");\n  } //manage state radios\n\n\n  function ButtonSelectRadio_Click(event) {\n    if (event.target.id === \"radiodhcp\") {\n      setStateRadioDhcp(true);\n      setStateRadioStatic(false);\n      setDisabledComponents(true);\n    } else {\n      setStateRadioDhcp(false);\n      setStateRadioStatic(true);\n      setDisabledComponents(false);\n    }\n\n    setRadioSelected(event.target.id);\n    console.log(radioSelected);\n  }\n\n  function ButtonPing_Click() {\n    console.log(\"clicked in Ping\");\n    api.getNetworkPing(function (res) {\n      console.log(`Respuesta del ping ${JSON.stringify(res)}`);\n\n      if (res.result === \"ok\") {\n        setResponseString(`Ping Response Success`);\n        setIsValid(true);\n        setTimeout(() => {\n          setIsValid(false);\n        }, 3000);\n      } else {\n        setResponseString(`Ping Response Error`);\n        setIsError(true);\n        setTimeout(() => {\n          setIsError(false);\n        }, 3000);\n      }\n    });\n  }\n\n  function ButtonGetNetworkConfig_Click() {\n    console.log(\"clicked in get config\");\n    api.getNetworkConfig(function (res) {\n      console.log(res);\n\n      if (res.result === \"ok\") {\n        if (res.message.config.ipv4.method === \"dhcp\") {\n          setRadioSelected(\"radiodhcp\");\n          form.address = \"\";\n          form.gateway = \"\";\n          form.dnsprimary = \"\";\n          form.dnssecondary = \"\";\n          setStateRadioDhcp(true);\n          setStateRadioStatic(false);\n          setDisabledComponents(true);\n        } else //is static\n          {\n            setRadioSelected(\"radiostatic\");\n            setStateRadioDhcp(false);\n            setStateRadioStatic(true);\n            setDisabledComponents(false);\n            var addressIp = \"\";\n\n            switch (res.message.config.ipv4.prefix_length) {\n              case 8:\n                addressIp = \"255.0.0.0\";\n                break;\n\n              case 16:\n                addressIp = \"255.255.0.0\";\n                break;\n\n              default:\n                addressIp = \"255.255.255.0\";\n            }\n\n            form.address = parseIP(res.message.config.ipv4.address);\n            form.gateway = parseIP(res.message.config.ipv4.gateway);\n            form.netmask = addressIp;\n\n            if (res.message.config.ipv4.name_servers.length === 0) {\n              form.dnsprimary = \"\";\n              form.dnssecondary = \"\";\n            }\n\n            if (res.message.config.ipv4.name_servers.length === 1) {\n              form.dnsprimary = parseIP(res.message.config.ipv4.name_servers[0]);\n              form.dnssecondary = \"\";\n            }\n\n            if (res.message.config.ipv4.name_servers.length === 2) {\n              form.dnsprimary = parseIP(res.message.config.ipv4.name_servers[0]);\n              form.dnssecondary = parseIP(res.message.config.ipv4.name_servers[1]);\n            }\n          }\n\n        setResponseString(`Get Config Success`);\n        setErrors({\n          address: \"\",\n          gateway: \"\",\n          netmask: \"\",\n          dnsprimary: \"\",\n          dnssecondary: \"\"\n        });\n        setIsValid(true);\n        setTimeout(() => {\n          setIsValid(false);\n        }, 3000);\n      } else {\n        //is error in the response\n        setResponseString(`Get Config Error`);\n        setErrors({\n          address: \"\",\n          gateway: \"\",\n          netmask: \"\",\n          dnsprimary: \"\",\n          dnssecondary: \"\"\n        });\n        setIsError(true);\n        setTimeout(() => {\n          setIsError(false);\n        }, 3000);\n      }\n    }, \"192.168.1.71\");\n  }\n\n  const setField = (field, value) => {\n    setForm({ ...form,\n      [field]: value\n    }); // Check and see if errors exist, and remove them from the error object:\n\n    if (!!errors[field]) setErrors({ ...errors,\n      [field]: null\n    });\n  };\n\n  const ButtonSetNetworkConfig_Click = event => {\n    event.preventDefault(); //the config is static\n\n    if (radioSelected === \"radiostatic\") {\n      // get our new errors\n      const newErrors = findFormErrors(); // Conditional logic:\n\n      if (Object.keys(newErrors).length > 0) {\n        // We got errors!\n        setErrors(newErrors);\n      } else {\n        // No errors! Put any logic here for the form submission!\n        console.log(`\n            address: ${form.address}\n            gateway: ${form.gateway}\n            netmask: ${form.netmask}\n            server primary: ${form.dnsprimary}\n            server secondary: ${form.dnssecondary}\n          `);\n        var maskNodes = form.netmask.match(/(\\d+)/g);\n        var cidr = 0;\n\n        for (var i in maskNodes) {\n          cidr += ((maskNodes[i] >>> 0).toString(2).match(/1/g) || []).length;\n        }\n\n        var config = \"\";\n        var dnsserver = [];\n\n        if (!form.dnsprimary && !form.dnssecondary) {\n          config = {\n            \"method\": \"static\",\n            \"address\": `${form.address}`,\n            \"prefix_length\": cidr,\n            \"gateway\": `${form.gateway}`,\n            \"name_servers\": []\n          };\n        }\n\n        if (form.dnsprimary && !form.dnssecondary) {\n          dnsserver.push(`${form.dnsprimary}`);\n          config = {\n            \"method\": \"static\",\n            \"address\": `${form.address}`,\n            \"prefix_length\": cidr,\n            \"gateway\": `${form.gateway}`,\n            \"name_servers\": [`${dnsserver[0]}`]\n          };\n        }\n\n        if (!form.dnsprimary && form.dnssecondary) {\n          dnsserver.push(\"\");\n          dnsserver.push(`${form.dnssecondary}`);\n          config = {\n            \"method\": \"static\",\n            \"address\": `${form.address}`,\n            \"prefix_length\": cidr,\n            \"gateway\": `${form.gateway}`,\n            \"name_servers\": [`${dnsserver[0]}`, `${dnsserver[1]}`]\n          };\n        }\n\n        if (form.dnsprimary && form.dnssecondary) {\n          dnsserver.push(`${form.dnsprimary}`);\n          dnsserver.push(`${form.dnssecondary}`);\n          config = {\n            \"method\": \"static\",\n            \"address\": `${form.address}`,\n            \"prefix_length\": cidr,\n            \"gateway\": `${form.gateway}`,\n            \"name_servers\": [`${dnsserver[0]}`, `${dnsserver[1]}`]\n          };\n        }\n\n        console.log(JSON.stringify(config));\n        let result = Validation.validateNetConfig(config);\n\n        if (result.count > 0) {\n          let error = `${Object.keys(result.errors)[0]}`;\n\n          switch (error) {\n            case \"adddress\":\n              setErrors({\n                address: Object.values(result.errors)[0]\n              });\n              break;\n\n            case \"gateway\":\n              setErrors({\n                gateway: Object.values(result.errors)[0]\n              });\n              break;\n\n            case \"netmask\":\n              setErrors({\n                netmask: Object.values(result.errors)[0]\n              });\n              break;\n\n            case \"dnsprimary\":\n              setErrors({\n                dnsprimary: Object.values(result.errors)[0]\n              });\n              break;\n\n            case \"dnssecondary\":\n              setErrors({\n                dnssecondary: Object.values(result.errors)[0]\n              });\n              break;\n\n            default:\n              break;\n          }\n        } else {\n          api.setNetworkConfigStatic(result.input, function (res) {\n            if (res.result === \"ok\") {\n              setResponseString(`Set Static Config Succes`);\n              setIsValid(true);\n              setTimeout(() => {\n                setIsValid(false);\n              }, 3000);\n            } else {\n              setResponseString(`Set Static Config Error`);\n              setIsError(true);\n              setTimeout(() => {\n                setIsError(false);\n              }, 3000);\n            }\n          });\n        }\n      }\n    } else {\n      console.log(radioSelected);\n      const config = {\n        \"method\": \"dhcp\"\n      };\n      let result = Validation.validateNetConfig(config);\n\n      if (result.count > 0) {\n        setResponseString(`Error in config`);\n        setIsError(true);\n        setTimeout(() => {\n          setIsError(false);\n        }, 3000);\n      } else {\n        api.setNetworkConfigDhcp(result.input, function (res) {\n          console.log(res);\n\n          if (res.result === \"ok\") {\n            setResponseString(`Set DHCP Config Succes`);\n            setIsValid(true);\n            setTimeout(() => {\n              setIsValid(false);\n            }, 3000);\n          } else {\n            setResponseString(`Set DHCP Config Error`);\n            setIsError(true);\n            setTimeout(() => {\n              setIsError(false);\n            }, 3000);\n          }\n        });\n      }\n    }\n  };\n\n  const findFormErrors = () => {\n    const {\n      address,\n      gateway,\n      netmask,\n      dnsprimary,\n      dnssecondary\n    } = form;\n    const newErrors = {}; // name errors\n\n    if (!address || !validateIPaddress(address)) newErrors.address = 'IP has invalid format';\n    if (address === '') newErrors.address = 'This field is required';\n    if (!gateway || gateway === '' || !validateIPaddress(gateway)) newErrors.gateway = 'IP has invalid format';\n    if (!netmask || netmask === '' || !validateIPaddress(netmask)) newErrors.netmask = 'IP has invalid format';\n\n    if (dnsprimary) {\n      if (!dnsprimary || !validateIPaddress(dnsprimary)) newErrors.dnsprimary = 'IP has invalid format';\n    }\n\n    if (dnssecondary) {\n      if (!dnssecondary || !validateIPaddress(dnssecondary)) newErrors.dnssecondary = 'IP has invalid format';\n    }\n\n    return newErrors;\n  };\n\n  function buttonDiscoveryClick() {\n    setShowSpinner(\"\");\n    api.getNetworkDiscover(function (res) {\n      console.log(JSON.stringify(res));\n      setShowSpinner(\"visually-hidden\");\n      setDevices(res);\n    });\n  }\n\n  function buttonBlinkClick(device) {\n    api.blinkNetworkDevice(function (res) {\n      console.log(JSON.stringify(res));\n    }, device.data.ipaddr);\n  }\n\n  function buttonPingFromDiscover(device) {\n    console.log(`Ping to device ip ${device.data.ipaddr}`);\n    api.getNetworkPing(function (res) {\n      console.log(JSON.stringify(res));\n    }, device.data.ipaddr);\n  }\n\n  const rows = devices.map(drevice => /*#__PURE__*/React.createElement(\"tr\", {\n    key: \"d.data.macaddr\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 379,\n      columnNumber: 39\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 380,\n      columnNumber: 5\n    }\n  }, drevice.data.hostname), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 381,\n      columnNumber: 5\n    }\n  }, drevice.data.macaddr), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 382,\n      columnNumber: 5\n    }\n  }, drevice.data.version), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 383,\n      columnNumber: 5\n    }\n  }, drevice.data.ipaddr), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 384,\n      columnNumber: 5\n    }\n  }, \" \", /*#__PURE__*/React.createElement(Button, {\n    onClick: () => buttonPingFromDiscover(drevice),\n    variant: \"dark\",\n    size: \"sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 384,\n      columnNumber: 10\n    }\n  }, \" \", /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faLaptopCode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 384,\n      columnNumber: 92\n    }\n  }))), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 385,\n      columnNumber: 5\n    }\n  }, \" \", /*#__PURE__*/React.createElement(Button, {\n    onClick: () => buttonBlinkClick(drevice),\n    variant: \"dark\",\n    size: \"sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 385,\n      columnNumber: 10\n    }\n  }, \" \", /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faLightbulb,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 385,\n      columnNumber: 86\n    }\n  }))), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 386,\n      columnNumber: 5\n    }\n  }, \" \", /*#__PURE__*/React.createElement(Button, {\n    onClick: () => setModalShow(true),\n    variant: \"dark\",\n    size: \"sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 386,\n      columnNumber: 10\n    }\n  }, \" \", /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faCog,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 386,\n      columnNumber: 79\n    }\n  }))), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 387,\n      columnNumber: 5\n    }\n  }, \" \", /*#__PURE__*/React.createElement(Button, {\n    onClick: () => buttonPingFromDiscover(drevice),\n    variant: \"dark\",\n    size: \"sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 387,\n      columnNumber: 10\n    }\n  }, \" \", /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faDatabase,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 387,\n      columnNumber: 92\n    }\n  })))));\n\n  function MyVerticallyCenteredModal(props) {\n    return /*#__PURE__*/React.createElement(Modal, Object.assign({}, props, {\n      size: \"lg\",\n      backdrop: \"static\",\n      \"aria-labelledby\": \"contained-modal-title-vcenter\",\n      centered: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 392,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(Modal.Header, {\n      closeButton: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 399,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Title, {\n      id: \"contained-modal-title-vcenter\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 400,\n        columnNumber: 11\n      }\n    }, \"Network Config\")), /*#__PURE__*/React.createElement(Modal.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 404,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 406,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Alert, {\n      show: isValid,\n      variant: \"success\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 407,\n        columnNumber: 13\n      }\n    }, responseString), /*#__PURE__*/React.createElement(Alert, {\n      show: isError,\n      variant: \"danger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 410,\n        columnNumber: 13\n      }\n    }, responseString), /*#__PURE__*/React.createElement(Form.Group, {\n      as: Row,\n      className: \"mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 413,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      as: \"legend\",\n      column: true,\n      sm: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 414,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Col, {\n      sm: 3,\n      align: \"left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 416,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Form.Check, {\n      type: \"radio\",\n      label: \"Obtain an IP address automatically\",\n      id: \"radiodhcp\",\n      onChange: ButtonSelectRadio_Click,\n      checked: stateRadioDhcp,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 417,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Form.Check, {\n      type: \"radio\",\n      label: \"Use the following IP address:\",\n      id: \"radiostatic\",\n      onChange: ButtonSelectRadio_Click,\n      checked: stateRadioStatic,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 424,\n        columnNumber: 17\n      }\n    }))), /*#__PURE__*/React.createElement(Form.Group, {\n      as: Row,\n      className: \"mb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 434,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      align: \"right\",\n      column: true,\n      sm: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 435,\n        columnNumber: 15\n      }\n    }, \"IP Address\"), /*#__PURE__*/React.createElement(Col, {\n      sm: 8,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 438,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Form.Control, {\n      placeholder: \"IP Address\",\n      onChange: e => setField('address', e.target.value),\n      isInvalid: !!errors.address,\n      disabled: ipAddressDisabled,\n      value: form.address,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 439,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n      type: \"invalid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 446,\n        columnNumber: 17\n      }\n    }, errors.address))), /*#__PURE__*/React.createElement(Form.Group, {\n      as: Row,\n      className: \"mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 450,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      align: \"right\",\n      column: true,\n      sm: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 451,\n        columnNumber: 15\n      }\n    }, \"Select Netmask\"), /*#__PURE__*/React.createElement(Col, {\n      xs: 2,\n      align: \"left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 454,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Form.Control, {\n      //</Col>className=\"form-control-custom\" //makes gray the control\n      as: \"select\",\n      bsPrefix: \"form-select\" //shows the control like a combobox\n      ,\n      onChange: e => setField('netmask', e.target.value),\n      isInvalid: !!errors.netmask,\n      disabled: netmaskDisabled,\n      value: form.netmask,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 455,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"255.255.255.0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 464,\n        columnNumber: 19\n      }\n    }, \"255.255.255.0\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"255.255.0.0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 465,\n        columnNumber: 19\n      }\n    }, \"255.255.0.0\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"255.0.0.0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 466,\n        columnNumber: 19\n      }\n    }, \"255.0.0.0\")), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n      type: \"invalid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 468,\n        columnNumber: 17\n      }\n    }, errors.netmask))), /*#__PURE__*/React.createElement(Form.Group, {\n      as: Row,\n      className: \"mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 472,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      align: \"right\",\n      column: true,\n      sm: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 473,\n        columnNumber: 15\n      }\n    }, \"Default Gateway\"), /*#__PURE__*/React.createElement(Col, {\n      sm: 8,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 476,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Form.Control, {\n      placeholder: \"Gateway\",\n      onChange: e => setField('gateway', e.target.value),\n      isInvalid: !!errors.gateway,\n      disabled: gatewayDisabled,\n      value: form.gateway,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 477,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n      type: \"invalid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 484,\n        columnNumber: 17\n      }\n    }, errors.gateway))), /*#__PURE__*/React.createElement(Form.Group, {\n      as: Row,\n      className: \"mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 488,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      align: \"right\",\n      column: true,\n      sm: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 489,\n        columnNumber: 15\n      }\n    }, \"Set DNS Servers:\")), /*#__PURE__*/React.createElement(Form.Group, {\n      as: Row,\n      className: \"mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 494,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      align: \"right\",\n      column: true,\n      sm: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 495,\n        columnNumber: 15\n      }\n    }, \"Primary\"), /*#__PURE__*/React.createElement(Col, {\n      sm: 8,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 498,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Form.Control, {\n      placeholder: \"Primary DNS\",\n      onChange: e => setField('dnsprimary', e.target.value),\n      isInvalid: !!errors.dnsprimary,\n      disabled: dnsPrimaryDisabled,\n      value: form.dnsprimary,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 499,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n      type: \"invalid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 506,\n        columnNumber: 17\n      }\n    }, errors.dnsprimary))), /*#__PURE__*/React.createElement(Form.Group, {\n      as: Row,\n      className: \"mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 510,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      align: \"right\",\n      column: true,\n      sm: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 511,\n        columnNumber: 15\n      }\n    }, \"Secondary\"), /*#__PURE__*/React.createElement(Col, {\n      sm: 8,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 514,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Form.Control, {\n      placeholder: \"Secondary DNS\",\n      onChange: e => setField('dnssecondary', e.target.value),\n      isInvalid: !!errors.dnssecondary,\n      disabled: dnsSecondaryDisabled,\n      value: form.dnssecondary,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 515,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n      type: \"invalid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 522,\n        columnNumber: 17\n      }\n    }, errors.dnssecondary))), /*#__PURE__*/React.createElement(Form.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 526,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      sm: {\n        span: 10,\n        offset: 2\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 527,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Stack, {\n      direction: \"horizontal\",\n      gap: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 528,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: ButtonGetNetworkConfig_Click,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 529,\n        columnNumber: 19\n      }\n    }, \"Get Config\"), /*#__PURE__*/React.createElement(Button, {\n      onClick: ButtonSetNetworkConfig_Click,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 530,\n        columnNumber: 19\n      }\n    }, \"Set Config\"), /*#__PURE__*/React.createElement(Button, {\n      onClick: ButtonPing_Click,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 531,\n        columnNumber: 19\n      }\n    }, \"Ping\")))))), /*#__PURE__*/React.createElement(Modal.Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 537,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: props.onHide,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 538,\n        columnNumber: 11\n      }\n    }, \"Close\")));\n  }\n\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 545,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Navbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 547,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Navbar.Brand, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 548,\n      columnNumber: 9\n    }\n  }, \"Laurel View Configuration\"), /*#__PURE__*/React.createElement(Navbar.Collapse, {\n    className: \"justify-content-end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 549,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: buttonDiscoveryClick,\n    variant: \"dark\",\n    title: \"Discover Devices\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 550,\n      columnNumber: 11\n    }\n  }, \"Discovery\"))), /*#__PURE__*/React.createElement(Table, {\n    striped: true,\n    bordered: true,\n    hover: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 553,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 554,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 555,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 556,\n      columnNumber: 13\n    }\n  }, \"Hostname\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 557,\n      columnNumber: 13\n    }\n  }, \"MAC Address\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 558,\n      columnNumber: 13\n    }\n  }, \"Version\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 559,\n      columnNumber: 13\n    }\n  }, \"IP Address\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 560,\n      columnNumber: 13\n    }\n  }, \"Ping\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 561,\n      columnNumber: 13\n    }\n  }, \"Blink\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 562,\n      columnNumber: 13\n    }\n  }, \"Network Config\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 563,\n      columnNumber: 13\n    }\n  }, \"Database\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 566,\n      columnNumber: 9\n    }\n  }, rows)), /*#__PURE__*/React.createElement(Spinner, {\n    className: showSpinner,\n    animation: \"border\",\n    role: \"status\",\n    variant: \"dark\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 570,\n      columnNumber: 7\n    }\n  }, \" \"), /*#__PURE__*/React.createElement(MyVerticallyCenteredModal, {\n    show: modalShow,\n    onHide: () => setModalShow(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 571,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default Utils;","map":{"version":3,"sources":["/home/hiram/github/hiram-repos/tryouts/lv-react-ui/src/Utils.js"],"names":["React","useState","FontAwesomeIcon","faLightbulb","faLaptopCode","faDatabase","faCog","api","Validation","Container","Button","Navbar","Table","Spinner","Modal","Col","Row","Form","Alert","Stack","Utils","devices","setDevices","modalShow","setModalShow","showSpinner","setShowSpinner","radioSelected","setRadioSelected","stateRadioDhcp","setStateRadioDhcp","stateRadioStatic","setStateRadioStatic","form","setForm","address","gateway","netmask","dnsprimary","dnssecondary","errors","setErrors","ipAddressDisabled","setIpAddressdDisabled","gatewayDisabled","setGatewayDisabled","netmaskDisabled","setNetmaskDisabled","dnsPrimaryDisabled","setDnsPrimaryDisabled","dnsSecondaryDisabled","setDnsSecondaryDisabled","responseString","setResponseString","isValid","setIsValid","isError","setIsError","validateIPaddress","ipaddress","test","setDisabledComponents","state","parseIP","key","addresswithpoints","JSON","stringify","replace","ButtonSelectRadio_Click","event","target","id","console","log","ButtonPing_Click","getNetworkPing","res","result","setTimeout","ButtonGetNetworkConfig_Click","getNetworkConfig","message","config","ipv4","method","addressIp","prefix_length","name_servers","length","setField","field","value","ButtonSetNetworkConfig_Click","preventDefault","newErrors","findFormErrors","Object","keys","maskNodes","match","cidr","i","toString","dnsserver","push","validateNetConfig","count","error","values","setNetworkConfigStatic","input","setNetworkConfigDhcp","buttonDiscoveryClick","getNetworkDiscover","buttonBlinkClick","device","blinkNetworkDevice","data","ipaddr","buttonPingFromDiscover","rows","map","drevice","hostname","macaddr","version","MyVerticallyCenteredModal","props","e","span","offset","onHide"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faLightbulb } from '@fortawesome/free-solid-svg-icons'\nimport { faLaptopCode } from '@fortawesome/free-solid-svg-icons'\nimport { faDatabase } from '@fortawesome/free-solid-svg-icons'\nimport { faCog } from '@fortawesome/free-solid-svg-icons'\n\nimport './App.css';\nimport api from \"./api\"\nimport Validation from './Validation'\n\nimport Container from 'react-bootstrap/Container'\nimport Button from 'react-bootstrap/Button'\nimport Navbar from 'react-bootstrap/Navbar'\nimport Table from 'react-bootstrap/Table'\nimport Spinner from 'react-bootstrap/Spinner'\nimport Modal from 'react-bootstrap/Modal'\n\nimport Col from 'react-bootstrap/Col'\nimport Row from 'react-bootstrap/Row'\nimport Form from 'react-bootstrap/Form'\nimport Alert from 'react-bootstrap/Alert'\nimport Stack from 'react-bootstrap/Stack'\n\nfunction Utils() {\n\n  const [devices, setDevices] = useState([])\n  const [modalShow, setModalShow] = React.useState(false);\n  const [showSpinner, setShowSpinner] = React.useState(\"visually-hidden\")\n\n  //radio selector\n  const [radioSelected, setRadioSelected] = React.useState(\"radiodhcp\")\n  const [stateRadioDhcp, setStateRadioDhcp] = React.useState(true)\n  const [stateRadioStatic, setStateRadioStatic] = React.useState(false)\n\n  //Errors\n  const [form, setForm] = useState({ address: \"\", gateway: \"\", netmask: \"255.255.255.0\", dnsprimary: \"\", dnssecondary: \"\" })\n  const [errors, setErrors] = useState({ address: \"\", gateway: \"\", netmask: \"\", dnsprimary: \"\", dnssecondary: \"\" })\n\n  //disable componets\n  const [ipAddressDisabled, setIpAddressdDisabled] = React.useState(true);\n  const [gatewayDisabled, setGatewayDisabled] = React.useState(true);\n  const [netmaskDisabled, setNetmaskDisabled] = React.useState(true);\n  const [dnsPrimaryDisabled, setDnsPrimaryDisabled] = React.useState(true);\n  const [dnsSecondaryDisabled, setDnsSecondaryDisabled] = React.useState(true);\n\n  //Response from yeico appliance\n  const [responseString, setResponseString] = React.useState(\"\")\n\n  //Alerts\n  const [isValid, setIsValid] = useState(false);\n  const [isError, setIsError] = useState(false);\n\n  function validateIPaddress(ipaddress) {\n    if (/^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/.test(ipaddress)) {\n      return (true)\n    }\n    return (false)\n  }\n\n  function setDisabledComponents(state) {\n    setIpAddressdDisabled(state)\n    setGatewayDisabled(state)\n    setNetmaskDisabled(state)\n    setDnsPrimaryDisabled(state)\n    setDnsSecondaryDisabled(state)\n  }\n\n  function parseIP(key) {\n    var addresswithpoints = `${JSON.stringify(key)}`.replace(/,/g, \".\")\n    return addresswithpoints.replace(/[[\\]']/g, \"\")\n  }\n\n  //manage state radios\n  function ButtonSelectRadio_Click(event) {\n    if (event.target.id === \"radiodhcp\") {\n      setStateRadioDhcp(true)\n      setStateRadioStatic(false)\n      setDisabledComponents(true)\n    }\n    else {\n      setStateRadioDhcp(false)\n      setStateRadioStatic(true)\n      setDisabledComponents(false)\n    }\n    setRadioSelected(event.target.id)\n    console.log(radioSelected)\n  }\n\n  function ButtonPing_Click() {\n    console.log(\"clicked in Ping\")\n    api.getNetworkPing(function (res) {\n      console.log(`Respuesta del ping ${JSON.stringify(res)}`)\n      if (res.result === \"ok\") {\n        setResponseString(`Ping Response Success`)\n        setIsValid(true)\n        setTimeout(() => {\n          setIsValid(false)\n        }, 3000);\n      }\n      else {\n        setResponseString(`Ping Response Error`)\n        setIsError(true)\n        setTimeout(() => {\n          setIsError(false)\n        }, 3000);\n      }\n    })\n  }\n\n  function ButtonGetNetworkConfig_Click() {\n    console.log(\"clicked in get config\");\n    api.getNetworkConfig(function (res) {\n      console.log(res)\n      if (res.result === \"ok\") {\n        if (res.message.config.ipv4.method === \"dhcp\") {\n          setRadioSelected(\"radiodhcp\");\n          form.address = \"\"\n          form.gateway = \"\"\n          form.dnsprimary = \"\"\n          form.dnssecondary = \"\"\n          setStateRadioDhcp(true)\n          setStateRadioStatic(false)\n          setDisabledComponents(true)\n        }\n        else //is static\n        {\n          setRadioSelected(\"radiostatic\");\n          setStateRadioDhcp(false)\n          setStateRadioStatic(true)\n          setDisabledComponents(false)\n\n          var addressIp = \"\";\n          switch (res.message.config.ipv4.prefix_length) {\n            case 8:\n              addressIp = \"255.0.0.0\"\n              break;\n            case 16:\n              addressIp = \"255.255.0.0\"\n              break;\n            default:\n              addressIp = \"255.255.255.0\"\n          }\n          form.address = parseIP(res.message.config.ipv4.address)\n          form.gateway = parseIP(res.message.config.ipv4.gateway)\n          form.netmask = addressIp\n          if (res.message.config.ipv4.name_servers.length === 0) {\n            form.dnsprimary = \"\"\n            form.dnssecondary = \"\"\n          }\n          if (res.message.config.ipv4.name_servers.length === 1) {\n            form.dnsprimary = parseIP(res.message.config.ipv4.name_servers[0])\n            form.dnssecondary = \"\"\n          }\n          if (res.message.config.ipv4.name_servers.length === 2) {\n            form.dnsprimary = parseIP(res.message.config.ipv4.name_servers[0])\n            form.dnssecondary = parseIP(res.message.config.ipv4.name_servers[1])\n          }\n        }\n        setResponseString(`Get Config Success`)\n        setErrors({ address: \"\", gateway: \"\", netmask: \"\", dnsprimary: \"\", dnssecondary: \"\" })\n        setIsValid(true)\n        setTimeout(() => {\n          setIsValid(false)\n        }, 3000);\n      }\n      else { //is error in the response\n        setResponseString(`Get Config Error`)\n        setErrors({ address: \"\", gateway: \"\", netmask: \"\", dnsprimary: \"\", dnssecondary: \"\" })\n        setIsError(true)\n        setTimeout(() => {\n          setIsError(false)\n        }, 3000);\n      }\n    }, \"192.168.1.71\")\n  }\n\n  const setField = (field, value) => {\n    setForm({\n      ...form,\n      [field]: value\n    })\n    // Check and see if errors exist, and remove them from the error object:\n    if (!!errors[field]) setErrors({\n      ...errors,\n      [field]: null\n    })\n  }\n\n  const ButtonSetNetworkConfig_Click = (event) => {\n    event.preventDefault()\n    //the config is static\n    if (radioSelected === \"radiostatic\") {\n      // get our new errors\n      const newErrors = findFormErrors()\n      // Conditional logic:\n      if (Object.keys(newErrors).length > 0) {\n        // We got errors!\n        setErrors(newErrors)\n      }\n      else {\n        // No errors! Put any logic here for the form submission!\n        console.log(`\n            address: ${form.address}\n            gateway: ${form.gateway}\n            netmask: ${form.netmask}\n            server primary: ${form.dnsprimary}\n            server secondary: ${form.dnssecondary}\n          `)\n        var maskNodes = form.netmask.match(/(\\d+)/g);\n        var cidr = 0;\n        for (var i in maskNodes) {\n          cidr += (((maskNodes[i] >>> 0).toString(2)).match(/1/g) || []).length;\n        }\n\n        var config = \"\"\n        var dnsserver = []\n        if (!form.dnsprimary && !form.dnssecondary) {\n          config = {\n            \"method\": \"static\",\n            \"address\": `${form.address}`,\n            \"prefix_length\": cidr,\n            \"gateway\": `${form.gateway}`,\n            \"name_servers\": []\n          }\n        }\n        if (form.dnsprimary && !form.dnssecondary) {\n          dnsserver.push(`${form.dnsprimary}`)\n          config = {\n            \"method\": \"static\",\n            \"address\": `${form.address}`,\n            \"prefix_length\": cidr,\n            \"gateway\": `${form.gateway}`,\n            \"name_servers\": [`${dnsserver[0]}`]\n          }\n        }\n        if (!form.dnsprimary && form.dnssecondary) {\n          dnsserver.push(\"\")\n          dnsserver.push(`${form.dnssecondary}`)\n          config = {\n            \"method\": \"static\",\n            \"address\": `${form.address}`,\n            \"prefix_length\": cidr,\n            \"gateway\": `${form.gateway}`,\n            \"name_servers\": [`${dnsserver[0]}`, `${dnsserver[1]}`]\n          }\n        }\n        if (form.dnsprimary && form.dnssecondary) {\n          dnsserver.push(`${form.dnsprimary}`)\n          dnsserver.push(`${form.dnssecondary}`)\n          config = {\n            \"method\": \"static\",\n            \"address\": `${form.address}`,\n            \"prefix_length\": cidr,\n            \"gateway\": `${form.gateway}`,\n            \"name_servers\": [`${dnsserver[0]}`, `${dnsserver[1]}`]\n          }\n        }\n        console.log(JSON.stringify(config))\n        let result = Validation.validateNetConfig(config)\n        if (result.count > 0) {\n          let error = `${Object.keys(result.errors)[0]}`\n          switch (error) {\n            case \"adddress\":\n              setErrors({ address: Object.values(result.errors)[0] })\n              break\n            case \"gateway\":\n              setErrors({ gateway: Object.values(result.errors)[0] })\n              break\n            case \"netmask\":\n              setErrors({ netmask: Object.values(result.errors)[0] })\n              break\n            case \"dnsprimary\":\n              setErrors({ dnsprimary: Object.values(result.errors)[0] })\n              break\n            case \"dnssecondary\":\n              setErrors({ dnssecondary: Object.values(result.errors)[0] })\n              break\n            default:\n              break\n          }\n        }\n        else {\n          api.setNetworkConfigStatic(result.input, function (res) {\n            if (res.result === \"ok\") {\n              setResponseString(`Set Static Config Succes`)\n              setIsValid(true)\n              setTimeout(() => {\n                setIsValid(false)\n              }, 3000);\n            }\n            else {\n              setResponseString(`Set Static Config Error`)\n              setIsError(true)\n              setTimeout(() => {\n                setIsError(false)\n              }, 3000);\n            }\n          });\n        }\n      }\n    }\n    else {\n      console.log(radioSelected)\n      const config = {\n        \"method\": \"dhcp\"\n      }\n      let result = Validation.validateNetConfig(config)\n      if (result.count > 0) {\n        setResponseString(`Error in config`)\n        setIsError(true)\n        setTimeout(() => {\n          setIsError(false)\n        }, 3000);\n      }\n      else {\n        api.setNetworkConfigDhcp(result.input, function (res) {\n          console.log(res)\n          if (res.result === \"ok\") {\n            setResponseString(`Set DHCP Config Succes`)\n            setIsValid(true)\n            setTimeout(() => {\n              setIsValid(false)\n            }, 3000);\n          }\n          else {\n            setResponseString(`Set DHCP Config Error`)\n            setIsError(true)\n            setTimeout(() => {\n              setIsError(false)\n            }, 3000);\n          }\n        });\n      }\n    }\n  }\n\n  const findFormErrors = () => {\n    const { address, gateway, netmask, dnsprimary, dnssecondary } = form\n    const newErrors = {}\n    // name errors\n    if (!address || !validateIPaddress(address)) newErrors.address = 'IP has invalid format'\n    if (address === '') newErrors.address = 'This field is required'\n    if (!gateway || gateway === '' || !validateIPaddress(gateway)) newErrors.gateway = 'IP has invalid format'\n    if (!netmask || netmask === '' || !validateIPaddress(netmask)) newErrors.netmask = 'IP has invalid format'\n    if (dnsprimary) {\n      if (!dnsprimary || !validateIPaddress(dnsprimary)) newErrors.dnsprimary = 'IP has invalid format'\n    }\n    if (dnssecondary) {\n      if (!dnssecondary || !validateIPaddress(dnssecondary)) newErrors.dnssecondary = 'IP has invalid format'\n    }\n    return newErrors\n  }\n\n  function buttonDiscoveryClick() {\n    setShowSpinner(\"\")\n    api.getNetworkDiscover(function (res) {\n      console.log(JSON.stringify(res))\n      setShowSpinner(\"visually-hidden\")\n      setDevices(res)\n    })\n  }\n\n  function buttonBlinkClick(device) {\n    api.blinkNetworkDevice(function (res) {\n      console.log(JSON.stringify(res))\n    }, device.data.ipaddr)\n  }\n\n\n  function buttonPingFromDiscover(device) {\n    console.log(`Ping to device ip ${device.data.ipaddr}`)\n    api.getNetworkPing(function (res) {\n      console.log(JSON.stringify(res))\n    }, device.data.ipaddr)\n  }\n\n  const rows = devices.map(drevice => <tr key=\"d.data.macaddr\">\n    <td>{drevice.data.hostname}</td>\n    <td>{drevice.data.macaddr}</td>\n    <td>{drevice.data.version}</td>\n    <td>{drevice.data.ipaddr}</td>\n    <td> <Button onClick={() => buttonPingFromDiscover(drevice)} variant=\"dark\" size=\"sm\"> <FontAwesomeIcon icon={faLaptopCode} /></Button></td>\n    <td> <Button onClick={() => buttonBlinkClick(drevice)} variant=\"dark\" size=\"sm\"> <FontAwesomeIcon icon={faLightbulb} /></Button></td>\n    <td> <Button onClick={() => setModalShow(true)} variant=\"dark\" size=\"sm\"> <FontAwesomeIcon icon={faCog} /></Button></td>\n    <td> <Button onClick={() => buttonPingFromDiscover(drevice)} variant=\"dark\" size=\"sm\"> <FontAwesomeIcon icon={faDatabase} /></Button></td>\n  </tr>)\n\n  function MyVerticallyCenteredModal(props) {\n    return (\n      <Modal\n        {...props}\n        size=\"lg\"\n        backdrop=\"static\"\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        centered\n      >\n        <Modal.Header closeButton>\n          <Modal.Title id=\"contained-modal-title-vcenter\">\n            Network Config\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n\n          <Form>\n            <Alert show={isValid} variant=\"success\">\n              {responseString}\n            </Alert>\n            <Alert show={isError} variant=\"danger\">\n              {responseString}\n            </Alert>\n            <Form.Group as={Row} className=\"mb-3\">\n              <Form.Label as=\"legend\" column sm={2}>\n              </Form.Label>\n              <Col sm={3} align=\"left\">\n                <Form.Check\n                  type=\"radio\"\n                  label=\"Obtain an IP address automatically\"\n                  id=\"radiodhcp\"\n                  onChange={ButtonSelectRadio_Click}\n                  checked={stateRadioDhcp}\n                />\n                <Form.Check\n                  type=\"radio\"\n                  label=\"Use the following IP address:\"\n                  id=\"radiostatic\"\n                  onChange={ButtonSelectRadio_Click}\n                  checked={stateRadioStatic}\n                />\n              </Col>\n            </Form.Group>\n\n            <Form.Group as={Row} className=\"mb-2\">\n              <Form.Label align=\"right\" column sm={2}>\n                IP Address\n              </Form.Label>\n              <Col sm={8}>\n                <Form.Control\n                  placeholder=\"IP Address\"\n                  onChange={e => setField('address', e.target.value)}\n                  isInvalid={!!errors.address}\n                  disabled={ipAddressDisabled}\n                  value={form.address}\n                />\n                <Form.Control.Feedback type='invalid'>{errors.address}</Form.Control.Feedback>\n              </Col>\n            </Form.Group>\n\n            <Form.Group as={Row} className=\"mb-3\">\n              <Form.Label align=\"right\" column sm={2}>\n                Select Netmask\n              </Form.Label>\n              <Col xs={2} align=\"left\">\n                <Form.Control\n                  //</Col>className=\"form-control-custom\" //makes gray the control\n                  as=\"select\"\n                  bsPrefix={\"form-select\"} //shows the control like a combobox\n                  onChange={e => setField('netmask', e.target.value)}\n                  isInvalid={!!errors.netmask}\n                  disabled={netmaskDisabled}\n                  value={form.netmask}\n                >\n                  <option value=\"255.255.255.0\">255.255.255.0</option>\n                  <option value=\"255.255.0.0\">255.255.0.0</option>\n                  <option value=\"255.0.0.0\">255.0.0.0</option>\n                </Form.Control>\n                <Form.Control.Feedback type='invalid'>{errors.netmask}</Form.Control.Feedback>\n              </Col>\n            </Form.Group>\n\n            <Form.Group as={Row} className=\"mb-3\">\n              <Form.Label align=\"right\" column sm={2}>\n                Default Gateway\n              </Form.Label>\n              <Col sm={8}>\n                <Form.Control\n                  placeholder=\"Gateway\"\n                  onChange={e => setField('gateway', e.target.value)}\n                  isInvalid={!!errors.gateway}\n                  disabled={gatewayDisabled}\n                  value={form.gateway}\n                />\n                <Form.Control.Feedback type='invalid'>{errors.gateway}</Form.Control.Feedback>\n              </Col>\n            </Form.Group>\n\n            <Form.Group as={Row} className=\"mb-3\">\n              <Form.Label align=\"right\" column sm={2}>\n                Set DNS Servers:\n              </Form.Label>\n            </Form.Group>\n\n            <Form.Group as={Row} className=\"mb-3\">\n              <Form.Label align=\"right\" column sm={2}>\n                Primary\n              </Form.Label>\n              <Col sm={8}>\n                <Form.Control\n                  placeholder=\"Primary DNS\"\n                  onChange={e => setField('dnsprimary', e.target.value)}\n                  isInvalid={!!errors.dnsprimary}\n                  disabled={dnsPrimaryDisabled}\n                  value={form.dnsprimary}\n                />\n                <Form.Control.Feedback type='invalid'>{errors.dnsprimary}</Form.Control.Feedback>\n              </Col>\n            </Form.Group>\n\n            <Form.Group as={Row} className=\"mb-3\">\n              <Form.Label align=\"right\" column sm={2}>\n                Secondary\n              </Form.Label>\n              <Col sm={8}>\n                <Form.Control\n                  placeholder=\"Secondary DNS\"\n                  onChange={e => setField('dnssecondary', e.target.value)}\n                  isInvalid={!!errors.dnssecondary}\n                  disabled={dnsSecondaryDisabled}\n                  value={form.dnssecondary}\n                />\n                <Form.Control.Feedback type='invalid'>{errors.dnssecondary}</Form.Control.Feedback>\n              </Col>\n            </Form.Group>\n\n            <Form.Group>\n              <Col sm={{ span: 10, offset: 2 }}>\n                <Stack direction=\"horizontal\" gap={3}>\n                  <Button onClick={ButtonGetNetworkConfig_Click}>Get Config</Button>\n                  <Button onClick={ButtonSetNetworkConfig_Click}>Set Config</Button>\n                  <Button onClick={ButtonPing_Click}>Ping</Button>\n                </Stack>\n              </Col>\n            </Form.Group>\n          </Form>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button onClick={props.onHide}>Close</Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n\n  return (\n    <Container>\n\n      <Navbar >\n        <Navbar.Brand>Laurel View Configuration</Navbar.Brand>\n        <Navbar.Collapse className=\"justify-content-end\">\n          <Button onClick={buttonDiscoveryClick} variant=\"dark\" title=\"Discover Devices\">Discovery</Button>\n        </Navbar.Collapse>\n      </Navbar>\n      <Table striped bordered hover>\n        <thead>\n          <tr>\n            <th>Hostname</th>\n            <th>MAC Address</th>\n            <th>Version</th>\n            <th>IP Address</th>\n            <th>Ping</th>\n            <th>Blink</th>\n            <th>Network Config</th>\n            <th>Database</th>\n          </tr>\n        </thead>\n        <tbody>\n          {rows}\n        </tbody>\n      </Table>\n      <Spinner className={showSpinner} animation=\"border\" role=\"status\" variant=\"dark\" > </Spinner>\n      <MyVerticallyCenteredModal\n        show={modalShow}\n        onHide={() => setModalShow(false)}\n      />\n    </Container>\n  )\n}\n\nexport default Utils;"]},"metadata":{},"sourceType":"module"}