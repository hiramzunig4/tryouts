{"ast":null,"code":"var _jsxFileName = \"/home/hiram/github/hiram-repos/tryouts/lv-react-ui/src/ItemEditor.js\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button'; //FIXME enter triggers navigation and validation\n\nfunction ItemEditor(props) {\n  const nameInput = useRef(null);\n  const hostInput = useRef(null);\n  const portInput = useRef(null);\n  const slaveInput = useRef(null);\n  useEffect(() => {\n    //should not override validation focus\n    if (nameInput.current != null) {\n      nameInput.current.focus();\n    }\n\n    const json = props.item.json || \"{}\";\n    const args = JSON.parse(json);\n    setName(props.item.name || \"\");\n    setHost(args.host || \"\");\n    setPort(args.port || \"0\");\n    setSlave(args.slave || \"1\"); //red flicker on disconnection while editing\n\n    setValidated(false);\n  }, [props]);\n  const [name, setName] = useState(\"\");\n  const [host, setHost] = useState(\"\");\n  const [port, setPort] = useState(\"\");\n  const [slave, setSlave] = useState(\"\");\n  const [validated, setValidated] = useState(false);\n\n  function handleHide() {\n    setValidated(false);\n    const action = \"cancel\";\n    props.handler({\n      action\n    });\n  }\n\n  function handleAction() {\n    var errors = 0;\n\n    if (!nameInput.current.checkValidity()) {\n      nameInput.current.focus();\n      errors++;\n    } else if (!hostInput.current.checkValidity()) {\n      hostInput.current.focus();\n      errors++;\n    } else if (!portInput.current.checkValidity()) {\n      portInput.current.focus();\n      errors++;\n    } else if (!slaveInput.current.checkValidity()) {\n      slaveInput.current.focus();\n      errors++;\n    }\n\n    if (errors > 0) {\n      setValidated(true);\n      return;\n    }\n\n    const action = props.action;\n    const data = {\n      host,\n      port,\n      slave\n    };\n    const json = JSON.stringify(data);\n    const id = props.item.id || 0;\n    const args = {\n      id,\n      name,\n      json\n    };\n    props.handler({\n      action,\n      args\n    });\n    handleHide();\n  }\n\n  function onNameChange(e) {\n    setName(e.target.value);\n  }\n\n  function onHostChange(e) {\n    setHost(e.target.value);\n  }\n\n  function onPortChange(e) {\n    setPort(e.target.value);\n  }\n\n  function onSlaveChange(e) {\n    setSlave(e.target.value);\n  }\n\n  return /*#__PURE__*/React.createElement(Modal, {\n    show: props.show,\n    onHide: handleHide,\n    centered: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Header, {\n    closeButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 17\n    }\n  }, props.title)), /*#__PURE__*/React.createElement(Modal.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    noValidate: true,\n    validated: validated,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    className: \"mb-3\",\n    controlId: \"itemName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 25\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(Form.Control, {\n    value: name,\n    onChange: onNameChange,\n    type: \"text\",\n    placeholder: \"Name\",\n    pattern: \"\\\\S(.*\\\\S)?\",\n    required: true,\n    ref: nameInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n    type: \"invalid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 25\n    }\n  }, \"Name cannot be blank nor have white spaces on the edges\")), /*#__PURE__*/React.createElement(Form.Group, {\n    className: \"mb-3\",\n    controlId: \"itemHost\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 25\n    }\n  }, \"Host\"), /*#__PURE__*/React.createElement(Form.Control, {\n    value: host,\n    onChange: onHostChange,\n    type: \"text\",\n    placeholder: \"Host\",\n    pattern: \"\\\\S+\",\n    required: true,\n    ref: hostInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n    type: \"invalid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 25\n    }\n  }, \"Host cannot be blank nor have white spaces on the edges\")), /*#__PURE__*/React.createElement(Form.Group, {\n    className: \"mb-3\",\n    controlId: \"itemPort\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 25\n    }\n  }, \"Port\"), /*#__PURE__*/React.createElement(Form.Control, {\n    value: port,\n    onChange: onPortChange,\n    type: \"number\",\n    placeholder: \"Port\",\n    required: true,\n    min: \"1\",\n    max: \"65535\",\n    ref: portInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n    type: \"invalid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 25\n    }\n  }, \"Port must be an integer between 1 and 65535\")), /*#__PURE__*/React.createElement(Form.Group, {\n    className: \"mb-3\",\n    controlId: \"itemSlave\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 25\n    }\n  }, \"Slave\"), /*#__PURE__*/React.createElement(Form.Control, {\n    value: slave,\n    onChange: onSlaveChange,\n    type: \"number\",\n    placeholder: \"Slave\",\n    required: true,\n    min: \"1\",\n    max: \"31\",\n    ref: slaveInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n    type: \"invalid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 25\n    }\n  }, \"Slave must be an integer between 1 and 31\")))), /*#__PURE__*/React.createElement(Modal.Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"secondary\",\n    onClick: handleHide,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 17\n    }\n  }, \"Close\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\",\n    onClick: handleAction,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 17\n    }\n  }, props.button)));\n}\n\nexport default ItemEditor;","map":{"version":3,"sources":["/home/hiram/github/hiram-repos/tryouts/lv-react-ui/src/ItemEditor.js"],"names":["React","useState","useEffect","useRef","Modal","Form","Button","ItemEditor","props","nameInput","hostInput","portInput","slaveInput","current","focus","json","item","args","JSON","parse","setName","name","setHost","host","setPort","port","setSlave","slave","setValidated","validated","handleHide","action","handler","handleAction","errors","checkValidity","data","stringify","id","onNameChange","e","target","value","onHostChange","onPortChange","onSlaveChange","show","title","button"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react'\n\nimport Modal from 'react-bootstrap/Modal';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\n\n//FIXME enter triggers navigation and validation\nfunction ItemEditor(props) {\n\n    const nameInput = useRef(null);\n    const hostInput = useRef(null);\n    const portInput = useRef(null);\n    const slaveInput = useRef(null);\n\n    useEffect(() => {\n        //should not override validation focus\n        if (nameInput.current != null) {\n            nameInput.current.focus();\n        }\n        const json = props.item.json || \"{}\"\n        const args = JSON.parse(json)\n        setName(props.item.name || \"\")\n        setHost(args.host || \"\")\n        setPort(args.port || \"0\")\n        setSlave(args.slave || \"1\")\n\n        //red flicker on disconnection while editing\n        setValidated(false);\n    }, [props]);\n\n    const [name, setName] = useState(\"\")\n    const [host, setHost] = useState(\"\")\n    const [port, setPort] = useState(\"\")\n    const [slave, setSlave] = useState(\"\")\n\n    const [validated, setValidated] = useState(false);\n\n    function handleHide() {\n        setValidated(false);\n        const action = \"cancel\"\n        props.handler({ action })\n    }\n\n    function handleAction() {\n        var errors = 0\n        if (!nameInput.current.checkValidity()) {\n            nameInput.current.focus()\n            errors++\n        } else if (!hostInput.current.checkValidity()) {\n            hostInput.current.focus()\n            errors++\n        } else if (!portInput.current.checkValidity()) {\n            portInput.current.focus()\n            errors++\n        } else if (!slaveInput.current.checkValidity()) {\n            slaveInput.current.focus()\n            errors++\n        }\n        if (errors > 0) {\n            setValidated(true);\n            return\n        }\n        const action = props.action\n        const data = { host, port, slave }\n        const json = JSON.stringify(data)\n        const id = props.item.id || 0\n        const args = { id, name, json }\n        props.handler({ action, args })\n        handleHide()\n    }\n\n    function onNameChange(e) {\n        setName(e.target.value)\n    }\n\n    function onHostChange(e) {\n        setHost(e.target.value)\n    }\n\n    function onPortChange(e) {\n        setPort(e.target.value)\n    }\n\n    function onSlaveChange(e) {\n        setSlave(e.target.value)\n    }\n\n    return (\n        <Modal show={props.show} onHide={handleHide} centered>\n            <Modal.Header closeButton>\n                <Modal.Title>{props.title}</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <Form noValidate validated={validated}>\n                    <Form.Group className=\"mb-3\" controlId=\"itemName\">\n                        <Form.Label>Name</Form.Label>\n                        <Form.Control value={name} onChange={onNameChange}\n                            type=\"text\" placeholder=\"Name\" pattern=\"\\S(.*\\S)?\"\n                            required ref={nameInput} />\n                        <Form.Control.Feedback type=\"invalid\">\n                            Name cannot be blank nor have white spaces on the edges\n                        </Form.Control.Feedback>\n                    </Form.Group>\n\n                    <Form.Group className=\"mb-3\" controlId=\"itemHost\">\n                        <Form.Label>Host</Form.Label>\n                        <Form.Control value={host} onChange={onHostChange}\n                            type=\"text\" placeholder=\"Host\" pattern=\"\\S+\"\n                            required ref={hostInput} />\n                        <Form.Control.Feedback type=\"invalid\">\n                            Host cannot be blank nor have white spaces on the edges\n                        </Form.Control.Feedback>\n                    </Form.Group>\n\n                    <Form.Group className=\"mb-3\" controlId=\"itemPort\">\n                        <Form.Label>Port</Form.Label>\n                        <Form.Control value={port} onChange={onPortChange}\n                            type=\"number\" placeholder=\"Port\" required\n                            min=\"1\" max=\"65535\" ref={portInput} />\n                        <Form.Control.Feedback type=\"invalid\">\n                            Port must be an integer between 1 and 65535\n                        </Form.Control.Feedback>\n                    </Form.Group>\n\n                    <Form.Group className=\"mb-3\" controlId=\"itemSlave\">\n                        <Form.Label>Slave</Form.Label>\n                        <Form.Control value={slave} onChange={onSlaveChange}\n                            type=\"number\" placeholder=\"Slave\" required\n                            min=\"1\" max=\"31\" ref={slaveInput} />\n                        <Form.Control.Feedback type=\"invalid\">\n                            Slave must be an integer between 1 and 31\n                        </Form.Control.Feedback>\n                    </Form.Group>\n                </Form>\n            </Modal.Body>\n\n            <Modal.Footer>\n                <Button variant=\"secondary\" onClick={handleHide}>Close</Button>\n                <Button variant=\"primary\" onClick={handleAction}>{props.button}</Button>\n            </Modal.Footer>\n        </Modal>\n    )\n}\n\nexport default ItemEditor"]},"metadata":{},"sourceType":"module"}